From 587edc0d9786aff3c7a4728ba941f6a993e59bdc Mon Sep 17 00:00:00 2001
From: q66 <daniel@octaforge.org>
Date: Thu, 28 Apr 2022 00:48:04 +0200
Subject: [PATCH] fix up runtime for ppc64 BE ELFv2 + ensure it's used

--- a/configure
+++ b/configure
@@ -10871,7 +10871,7 @@
             test -z "$2" || eval "$2=ArchPPC"
             ;;
         powerpc64)
-            test -z "$2" || eval "$2=\"ArchPPC_64 ELF_V1\""
+            test -z "$2" || eval "$2=\"ArchPPC_64 ELF_V2\""
             ;;
         powerpc64le)
             test -z "$2" || eval "$2=\"ArchPPC_64 ELF_V2\""
--- a/m4/fptools_set_haskell_platform_vars.m4
+++ b/m4/fptools_set_haskell_platform_vars.m4
@@ -15,7 +15,7 @@
             test -z "[$]2" || eval "[$]2=ArchPPC"
             ;;
         powerpc64)
-            test -z "[$]2" || eval "[$]2=\"ArchPPC_64 ELF_V1\""
+            test -z "[$]2" || eval "[$]2=\"ArchPPC_64 ELF_V2\""
             ;;
         powerpc64le)
             test -z "[$]2" || eval "[$]2=\"ArchPPC_64 ELF_V2\""
diff --git a/rts/AdjustorAsm.S b/rts/AdjustorAsm.S
index 2795b83..63cfe91 100644
--- a/rts/AdjustorAsm.S
+++ b/rts/AdjustorAsm.S
@@ -2,7 +2,7 @@

 /* ******************************** PowerPC ******************************** */

-#if defined(powerpc_HOST_ARCH) || defined(powerpc64_HOST_ARCH)
+#if defined(powerpc_HOST_ARCH) || (defined(powerpc64_HOST_ARCH) && (_CALL_ELF != 2))
 #if !(defined(powerpc_HOST_ARCH) && defined(linux_HOST_OS))
     /* The following code applies, with some differences,
        to all powerpc platforms except for powerpc32-linux,
diff --git a/rts/StgCRun.c b/rts/StgCRun.c
index f43227a..927d44a 100644
--- a/rts/StgCRun.c
+++ b/rts/StgCRun.c
@@ -724,7 +724,7 @@ StgRunIsImplementedInAssembler(void)
    Everything is in assembler, so we don't have to deal with GCC...
    -------------------------------------------------------------------------- */

-#if defined(powerpc64_HOST_ARCH)
+#if defined(powerpc64_HOST_ARCH) && (_CALL_ELF != 2)
 /* 64-bit PowerPC ELF ABI 1.9
  *
  * Stack frame organization (see Figure 3-17, ELF ABI 1.9, p 14)
@@ -792,7 +792,7 @@ StgRunIsImplementedInAssembler(void)

 #endif

-#if defined(powerpc64le_HOST_ARCH)
+#if defined(powerpc64le_HOST_ARCH) || (defined(powerpc64_HOST_ARCH) && (_CALL_ELF == 2))
 /* -----------------------------------------------------------------------------
    PowerPC 64 little endian architecture

diff --git a/rts/StgCRunAsm.S b/rts/StgCRunAsm.S
index 60f1bf9..c6794d7 100644
--- a/rts/StgCRunAsm.S
+++ b/rts/StgCRunAsm.S
@@ -5,7 +5,7 @@
  * then functions StgRun/StgReturn are implemented in file StgCRun.c */
 #if !defined(USE_MINIINTERPRETER)

-#if defined(powerpc64le_HOST_ARCH)
+#if defined(powerpc64le_HOST_ARCH) || (defined(powerpc64_HOST_ARCH) && (_CALL_ELF == 2))
 # if defined(linux_HOST_OS)
 /* 64-bit PowerPC ELF V2 ABI Revision 1.4
  *
diff --git a/rts/adjustor/NativeIA64.c b/rts/adjustor/NativeIA64.c
index 9fd1991..816b3ef 100644
--- a/rts/adjustor/NativeIA64.c
+++ b/rts/adjustor/NativeIA64.c
@@ -39,7 +39,7 @@ void*
 createAdjustor(int cconv, StgStablePtr hptr,
                StgFunPtr wptr,
                char *typeString
-#if !defined(powerpc_HOST_ARCH) && !defined(powerpc64_HOST_ARCH) && !defined(x86_64_HOST_ARCH)
+#if !defined(powerpc_HOST_ARCH) && (!defined(powerpc64_HOST_ARCH) || (_CALL_ELF == 2)) && !defined(x86_64_HOST_ARCH)
                STG_UNUSED
 #endif
     )
diff --git a/rts/adjustor/NativePowerPC.c b/rts/adjustor/NativePowerPC.c
index 2e5d605..caef5d3 100644
--- a/rts/adjustor/NativePowerPC.c
+++ b/rts/adjustor/NativePowerPC.c
@@ -29,7 +29,7 @@ __asm__("obscure_ccall_ret_code:\n\t"
 extern void obscure_ccall_ret_code(void);
 #endif /* defined(linux_HOST_OS) */

-#if defined(powerpc_HOST_ARCH) || defined(powerpc64_HOST_ARCH)
+#if defined(powerpc_HOST_ARCH) || (defined(powerpc64_HOST_ARCH) && (_CALL_ELF != 2))
 #if !(defined(powerpc_HOST_ARCH) && defined(linux_HOST_OS))

 /* !!! !!! WARNING: !!! !!!
--
2.35.1
