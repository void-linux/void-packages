# makes both musl and glic detect endianness
--- a/src/utility.h
+++ b/src/utility.h
@@ -976,7 +976,7 @@
     template <class T = void>
     struct endianness {
       enum : bool {
-#if defined(__BYTE_ORDER) && __BYTE_ORDER == __BIG_ENDIAN || \
+#if defined(__BYTE_ORDER__) && __BYTE_ORDER == __BIG_ENDIAN || \
   defined(__BIG_ENDIAN__) || \
   defined(__ARMEB__) || \
   defined(__THUMBEB__) || \
@@ -984,7 +984,7 @@
   defined(_MIBSEB) || defined(__MIBSEB) || defined(__MIBSEB__)
         // It's a big-endian target architecture
         little = false,
-#elif defined(__BYTE_ORDER) && __BYTE_ORDER == __LITTLE_ENDIAN || \
+#elif defined(__BYTE_ORDER__) && __BYTE_ORDER == __LITTLE_ENDIAN || \
   defined(__LITTLE_ENDIAN__) || \
   defined(__ARMEL__) || \
   defined(__THUMBEL__) || \
