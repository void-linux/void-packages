An overcomplicated solution to get find_package working properly
there used to be some absulte paths somewhere that broke the creation
of the SmthTargets.cmake.
---
diff --git CMakeLists.txt CMakeLists.txt
index 3d9393e..6b41200 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -14,11 +14,6 @@ include(CMakePackageConfigHelpers)
 # Used to set installation paths
 include(GNUInstallDirs)
 
-# Set the different paths
-set(LIB_DESTINATION         "${CMAKE_INSTALL_FULL_LIBDIR}" CACHE PATH "Library directory name")
-set(INCLUDE_DESTINATION     "${CMAKE_INSTALL_FULL_INCLUDEDIR}" CACHE PATH "The subdirectory to the header prefix")
-
-
 set(REQUIRED_QT_VERSION 5.1.0)
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
 
@@ -102,7 +97,7 @@ install(FILES
     polkitqt1-export.h
 
     DESTINATION
-    ${INCLUDE_DESTINATION}/${POLKITQT-1_INCLUDE_PATH} COMPONENT Devel)
+    ${CMAKE_INSTALL_INCLUDEDIR}/${POLKITQT-1_INCLUDE_PATH} COMPONENT Devel)
 
 install(FILES
     includes/PolkitQt1/Authority
@@ -112,40 +107,40 @@ install(FILES
     includes/PolkitQt1/TemporaryAuthorization
     includes/PolkitQt1/ActionDescription
     DESTINATION
-    ${INCLUDE_DESTINATION}/${POLKITQT-1_INCLUDE_PATH}/PolkitQt1 COMPONENT Devel)
+    ${CMAKE_INSTALL_INCLUDEDIR}/${POLKITQT-1_INCLUDE_PATH}/PolkitQt1 COMPONENT Devel)
 
 install(FILES
     includes/PolkitQt1/Gui/Action
     includes/PolkitQt1/Gui/ActionButton
     includes/PolkitQt1/Gui/ActionButtons
     DESTINATION
-    ${INCLUDE_DESTINATION}/${POLKITQT-1_INCLUDE_PATH}/PolkitQt1/Gui COMPONENT Devel)
+    ${CMAKE_INSTALL_INCLUDEDIR}/${POLKITQT-1_INCLUDE_PATH}/PolkitQt1/Gui COMPONENT Devel)
 
 install(FILES
     includes/PolkitQt1/Agent/Listener
     includes/PolkitQt1/Agent/Session
     DESTINATION
-    ${INCLUDE_DESTINATION}/${POLKITQT-1_INCLUDE_PATH}/PolkitQt1/Agent COMPONENT Devel)
+    ${CMAKE_INSTALL_INCLUDEDIR}/${POLKITQT-1_INCLUDE_PATH}/PolkitQt1/Agent COMPONENT Devel)
 
 if(NOT WIN32)
     # Pkgconfig
     configure_file(${CMAKE_CURRENT_SOURCE_DIR}/${POLKITQT-1_PCNAME}.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_PCNAME}.pc @ONLY)
-    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_PCNAME}.pc DESTINATION ${LIB_DESTINATION}/pkgconfig )
+    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_PCNAME}.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig )
     configure_file(${CMAKE_CURRENT_SOURCE_DIR}/${POLKITQT-1_CORE_PCNAME}.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_CORE_PCNAME}.pc
                    @ONLY)
-    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_CORE_PCNAME}.pc DESTINATION ${LIB_DESTINATION}/pkgconfig )
+    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_CORE_PCNAME}.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig )
     configure_file(${CMAKE_CURRENT_SOURCE_DIR}/${POLKITQT-1_GUI_PCNAME}.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_GUI_PCNAME}.pc @ONLY)
-    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_GUI_PCNAME}.pc DESTINATION ${LIB_DESTINATION}/pkgconfig )
+    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_GUI_PCNAME}.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig )
     configure_file(${CMAKE_CURRENT_SOURCE_DIR}/${POLKITQT-1_AGENT_PCNAME}.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_AGENT_PCNAME}.pc
                    @ONLY)
-    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_AGENT_PCNAME}.pc DESTINATION ${LIB_DESTINATION}/pkgconfig )
+    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${POLKITQT-1_AGENT_PCNAME}.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig )
 endif(NOT WIN32)
 
 
 if(USE_COMMON_CMAKE_PACKAGE_CONFIG_DIR)
-   set(_PolkitQt-1Config_INSTALL_DIR ${LIB_DESTINATION}/cmake/${POLKITQT-1_CAMEL_NAME})
+   set(_PolkitQt-1Config_INSTALL_DIR ${CMAKE_INSTALL_LIBDIR}/cmake/${POLKITQT-1_CAMEL_NAME})
 else(USE_COMMON_CMAKE_PACKAGE_CONFIG_DIR)
-   set(_PolkitQt-1Config_INSTALL_DIR ${LIB_DESTINATION}/${POLKITQT-1_CAMEL_NAME}/cmake)
+   set(_PolkitQt-1Config_INSTALL_DIR ${CMAKE_INSTALL_LIBDIR}/${POLKITQT-1_CAMEL_NAME}/cmake)
 endif(USE_COMMON_CMAKE_PACKAGE_CONFIG_DIR)
 
 
@@ -153,7 +148,7 @@ endif(USE_COMMON_CMAKE_PACKAGE_CONFIG_DIR)
 configure_package_config_file(PolkitQt-1Config.cmake.in
                               ${CMAKE_BINARY_DIR}/${POLKITQT-1_CAMEL_NAME}Config.cmake
                               INSTALL_DESTINATION ${_PolkitQt-1Config_INSTALL_DIR}
-                              PATH_VARS LIB_DESTINATION INCLUDE_DESTINATION
+                              PATH_VARS CMAKE_INSTALL_LIBDIR CMAKE_INSTALL_INCLUDEDIR
 )
 
 write_basic_package_version_file(${CMAKE_BINARY_DIR}/${POLKITQT-1_CAMEL_NAME}ConfigVersion.cmake
diff --git PolkitQt-1Config.cmake.in PolkitQt-1Config.cmake.in
index f39480c..e09678c 100644
--- PolkitQt-1Config.cmake.in
+++ PolkitQt-1Config.cmake.in
@@ -20,9 +20,9 @@ if(NOT POLKITQT-1_INSTALL_DIR)
    set(POLKITQT-1_INSTALL_DIR "@CMAKE_INSTALL_PREFIX@")
 endif(NOT POLKITQT-1_INSTALL_DIR)
 
-set_and_check(POLKITQT-1_INCLUDE_DIR "@PACKAGE_INCLUDE_DESTINATION@/@POLKITQT-1_INCLUDE_PATH@")
+set_and_check(POLKITQT-1_INCLUDE_DIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@/@POLKITQT-1_INCLUDE_PATH@")
 set_and_check(POLKITQT-1_INCLUDE_DIRS "${POLKITQT-1_INCLUDE_DIR}")
-set_and_check(POLKITQT-1_LIB_DIR "@PACKAGE_LIB_DESTINATION@")
+set_and_check(POLKITQT-1_LIB_DIR "@PACKAGE_CMAKE_INSTALL_LIBDIR@")
 set(POLKITQT-1_POLICY_FILES_INSTALL_DIR "${POLKITQT-1_INSTALL_DIR}/share/polkit-1/actions")
 ##################################
 
diff --git agent/CMakeLists.txt agent/CMakeLists.txt
index 8668688..c04e2da 100644
--- agent/CMakeLists.txt
+++ agent/CMakeLists.txt
@@ -25,8 +25,6 @@ set_target_properties(${POLKITQT-1_AGENT_PCNAME} PROPERTIES VERSION ${POLKITQT-1
                                 DEFINE_SYMBOL MAKE_POLKITQT1_LIB
                                 EXPORT_NAME Agent)
 
-target_include_directories(${POLKITQT-1_AGENT_PCNAME} INTERFACE $<INSTALL_INTERFACE:${INCLUDE_DESTINATION}/${POLKITQT-1_INCLUDE_PATH}>)
+target_include_directories(${POLKITQT-1_AGENT_PCNAME} INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/${POLKITQT-1_INCLUDE_PATH}>)
 
-install(TARGETS ${POLKITQT-1_AGENT_PCNAME} EXPORT ${POLKITQT-1_CAMEL_NAME}Export ARCHIVE DESTINATION ${LIB_DESTINATION}
-                               LIBRARY DESTINATION ${LIB_DESTINATION}
-                               RUNTIME DESTINATION bin)
+install(TARGETS ${POLKITQT-1_AGENT_PCNAME} EXPORT ${POLKITQT-1_CAMEL_NAME}Export)
diff --git cmake/modules/BasicFindPackageVersion.cmake.in cmake/modules/BasicFindPackageVersion.cmake.in
deleted file mode 100644
index ae5d312..0000000
--- cmake/modules/BasicFindPackageVersion.cmake.in
+++ /dev/null
@@ -1,30 +0,0 @@
-# This is a very basic file for the new style find_package() search mode,
-# i.e. Config-mode. It is used by MACRO_WRITE_BASIC_CMAKE_VERSION_FILE() from 
-# MacroWriteBasicCMakeVersionFile.cmake.
-# In this mode find_package() searches for a <package>Config.cmake 
-# file and an associated <package>Version.cmake file, which it loads to check 
-# the version number.
-# This file can be used with configure_file() to generate such a file for a project
-# with very basic logic.
-# It sets PACKAGE_VERSION_EXACT if the current version string and the requested
-# version string are exactly the same and it sets PACKAGE_VERSION_COMPATIBLE
-# if the current version is >= requested version.
-# If this is not good enough for your project, you need to write your own
-# improved <package>Version.cmake file.
-# This file requires the following three variables to be set:
-#   PROJECT_VERSION_MAJOR
-#   PROJECT_VERSION_MINOR
-#   PROJECT_VERSION_PATCH
-
-
-set(PACKAGE_VERSION @PROJECT_VERSION_MAJOR@.@PROJECT_VERSION_MINOR@.@PROJECT_VERSION_PATCH@)
-
-if("${PACKAGE_VERSION}" VERSION_LESS "${PACKAGE_FIND_VERSION}" )
-   set(PACKAGE_VERSION_COMPATIBLE FALSE)
-else("${PACKAGE_VERSION}" VERSION_LESS "${PACKAGE_FIND_VERSION}" )
-   set(PACKAGE_VERSION_COMPATIBLE TRUE)
-   if( "${PACKAGE_FIND_VERSION}" STREQUAL "${PACKAGE_VERSION}")
-      set(PACKAGE_VERSION_EXACT TRUE)
-   endif( "${PACKAGE_FIND_VERSION}" STREQUAL "${PACKAGE_VERSION}")
-endif("${PACKAGE_VERSION}" VERSION_LESS "${PACKAGE_FIND_VERSION}" )
-
diff --git cmake/modules/InstallSettings.cmake cmake/modules/InstallSettings.cmake
deleted file mode 100644
index 8c74317..0000000
--- cmake/modules/InstallSettings.cmake
+++ /dev/null
@@ -1,136 +0,0 @@
-# Copyright (c) 2008 Kevin Krammer <kevin.krammer@gmx.at>
-#
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-
-set(LIB_SUFFIX "" CACHE STRING "Define suffix of directory name (32/64)" )
-
-if (WIN32)
-# use relative install prefix to avoid hardcoded install paths in cmake_install.cmake files
-
-   set(LIB_INSTALL_DIR      "lib${LIB_SUFFIX}" )            # The subdirectory relative to the install prefix where libraries will be installed (default is ${EXEC_INSTALL_PREFIX}/lib${LIB_SUFFIX})
-
-   set(EXEC_INSTALL_PREFIX  "" )        # Base directory for executables and libraries
-   set(SHARE_INSTALL_PREFIX "share" )   # Base directory for files which go to share/
-   set(BIN_INSTALL_DIR      "bin"   )   # The install dir for executables (default ${EXEC_INSTALL_PREFIX}/bin)
-   set(SBIN_INSTALL_DIR     "sbin"  )   # The install dir for system executables (default ${EXEC_INSTALL_PREFIX}/sbin)
-
-   set(LIBEXEC_INSTALL_DIR  "${BIN_INSTALL_DIR}"          ) # The subdirectory relative to the install prefix where libraries will be installed (default is ${BIN_INSTALL_DIR})
-   set(INCLUDE_INSTALL_DIR  "include"                     ) # The subdirectory to the header prefix
-
-   set(PLUGIN_INSTALL_DIR       "lib${LIB_SUFFIX}/kde4"   ) #                "The subdirectory relative to the install prefix where plugins will be installed (default is ${LIB_INSTALL_DIR}/kde4)
-   set(CONFIG_INSTALL_DIR       "share/config"            ) # The config file install dir
-   set(DATA_INSTALL_DIR         "share/apps"              ) # The parent directory where applications can install their data
-   set(HTML_INSTALL_DIR         "share/doc/HTML"          ) # The HTML install dir for documentation
-   set(ICON_INSTALL_DIR         "share/icons"             ) # The icon install dir (default ${SHARE_INSTALL_PREFIX}/share/icons/)
-   set(KCFG_INSTALL_DIR         "share/config.kcfg"       ) # The install dir for kconfig files
-   set(LOCALE_INSTALL_DIR       "share/locale"            ) # The install dir for translations
-   set(MIME_INSTALL_DIR         "share/mimelnk"           ) # The install dir for the mimetype desktop files
-   set(SERVICES_INSTALL_DIR     "share/kde4/services"     ) # The install dir for service (desktop, protocol, ...) files
-   set(SERVICETYPES_INSTALL_DIR "share/kde4/servicetypes" ) # The install dir for servicestypes desktop files
-   set(SOUND_INSTALL_DIR        "share/sounds"            ) # The install dir for sound files
-   set(TEMPLATES_INSTALL_DIR    "share/templates"         ) # The install dir for templates (Create new file...)
-   set(WALLPAPER_INSTALL_DIR    "share/wallpapers"        ) # The install dir for wallpapers
-   set(DEMO_INSTALL_DIR         "share/demos"             ) # The install dir for demos
-   set(KCONF_UPDATE_INSTALL_DIR "share/apps/kconf_update" ) # The kconf_update install dir
-   set(AUTOSTART_INSTALL_DIR    "share/autostart"         ) # The install dir for autostart files
-
-   set(XDG_APPS_INSTALL_DIR      "share/applications/kde4"   ) # The XDG apps dir
-   set(XDG_DIRECTORY_INSTALL_DIR "share/desktop-directories" ) # The XDG directory
-   set(XDG_MIME_INSTALL_DIR      "share/mime/packages"       ) # The install dir for the xdg mimetypes
-
-   set(SYSCONF_INSTALL_DIR       "etc"                       ) # The kde sysconfig install dir (default /etc)
-   set(MAN_INSTALL_DIR           "share/man"                 ) # The kde man install dir (default ${SHARE_INSTALL_PREFIX}/man/)
-   set(INFO_INSTALL_DIR          "share/info"                ) # The kde info install dir (default ${SHARE_INSTALL_PREFIX}/info)")
-   set(DBUS_INTERFACES_INSTALL_DIR "share/dbus-1/interfaces" ) # The kde dbus interfaces install dir (default  ${SHARE_INSTALL_PREFIX}/dbus-1/interfaces)")
-   set(DBUS_SERVICES_INSTALL_DIR "share/dbus-1/services"     ) # The kde dbus services install dir (default  ${SHARE_INSTALL_PREFIX}/dbus-1/services)")
-
-else (WIN32)
-
-   # this macro implements some very special logic how to deal with the cache
-   # by default the various install locations inherit their value from theit "parent" variable
-   # so if you set CMAKE_INSTALL_PREFIX, then EXEC_INSTALL_PREFIX, PLUGIN_INSTALL_DIR will
-   # calculate their value by appending subdirs to CMAKE_INSTALL_PREFIX
-   # this would work completely without using the cache.
-   # but if somebody wants e.g. a different EXEC_INSTALL_PREFIX this value has to go into
-   # the cache, otherwise it will be forgotten on the next cmake run.
-   # Once a variable is in the cache, it doesn't depend on its "parent" variables
-   # anymore and you can only change it by editing it directly.
-   # this macro helps in this regard, because as long as you don't set one of the
-   # variables explicitely to some location, it will always calculate its value from its
-   # parents. So modifying CMAKE_INSTALL_PREFIX later on will have the desired effect.
-   # But once you decide to set e.g. EXEC_INSTALL_PREFIX to some special location
-   # this will go into the cache and it will no longer depend on CMAKE_INSTALL_PREFIX.
-   macro(_SET_FANCY _var _value _comment)
-      set(predefinedvalue "${_value}")
-
-      if (NOT DEFINED ${_var})
-         set(${_var} ${predefinedvalue})
-      else (NOT DEFINED ${_var})
-         set(${_var} "${${_var}}" CACHE PATH "${_comment}")
-      endif (NOT DEFINED ${_var})
-   endmacro(_SET_FANCY)
-
-
-   _set_fancy(EXEC_INSTALL_PREFIX  "${CMAKE_INSTALL_PREFIX}"                 "Base directory for executables and libraries")
-   _set_fancy(SHARE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}/share"           "Base directory for files which go to share/")
-   _set_fancy(BIN_INSTALL_DIR      "${EXEC_INSTALL_PREFIX}/bin"              "The install dir for executables (default ${EXEC_INSTALL_PREFIX}/bin)")
-   _set_fancy(SBIN_INSTALL_DIR     "${EXEC_INSTALL_PREFIX}/sbin"             "The install dir for system executables (default ${EXEC_INSTALL_PREFIX}/sbin)")
-   _set_fancy(LIB_INSTALL_DIR      "${EXEC_INSTALL_PREFIX}/lib${LIB_SUFFIX}" "The subdirectory relative to the install prefix where libraries will be installed (default is ${EXEC_INSTALL_PREFIX}/lib${LIB_SUFFIX})")
-   _set_fancy(LIBEXEC_INSTALL_DIR  "${LIB_INSTALL_DIR}/kde4/libexec"         "The subdirectory relative to the install prefix where libraries will be installed (default is ${LIB_INSTALL_DIR}/kde4/libexec)")
-   _set_fancy(INCLUDE_INSTALL_DIR  "${CMAKE_INSTALL_PREFIX}/include"         "The subdirectory to the header prefix")
-
-   _set_fancy(PLUGIN_INSTALL_DIR       "${LIB_INSTALL_DIR}/kde4"                "The subdirectory relative to the install prefix where plugins will be installed (default is ${LIB_INSTALL_DIR}/kde4)")
-   _set_fancy(CONFIG_INSTALL_DIR       "${SHARE_INSTALL_PREFIX}/config"         "The config file install dir")
-   _set_fancy(DATA_INSTALL_DIR         "${SHARE_INSTALL_PREFIX}/apps"           "The parent directory where applications can install their data")
-   _set_fancy(HTML_INSTALL_DIR         "${SHARE_INSTALL_PREFIX}/doc/HTML"       "The HTML install dir for documentation")
-   _set_fancy(ICON_INSTALL_DIR         "${SHARE_INSTALL_PREFIX}/icons"          "The icon install dir (default ${SHARE_INSTALL_PREFIX}/share/icons/)")
-   _set_fancy(KCFG_INSTALL_DIR         "${SHARE_INSTALL_PREFIX}/config.kcfg"    "The install dir for kconfig files")
-   _set_fancy(LOCALE_INSTALL_DIR       "${SHARE_INSTALL_PREFIX}/locale"         "The install dir for translations")
-   _set_fancy(MIME_INSTALL_DIR         "${SHARE_INSTALL_PREFIX}/mimelnk"        "The install dir for the mimetype desktop files")
-   _set_fancy(SERVICES_INSTALL_DIR     "${SHARE_INSTALL_PREFIX}/kde4/services"  "The install dir for service (desktop, protocol, ...) files")
-   _set_fancy(SERVICETYPES_INSTALL_DIR "${SHARE_INSTALL_PREFIX}/kde4/servicetypes" "The install dir for servicestypes desktop files")
-   _set_fancy(SOUND_INSTALL_DIR        "${SHARE_INSTALL_PREFIX}/sounds"         "The install dir for sound files")
-   _set_fancy(TEMPLATES_INSTALL_DIR    "${SHARE_INSTALL_PREFIX}/templates"      "The install dir for templates (Create new file...)")
-   _set_fancy(WALLPAPER_INSTALL_DIR    "${SHARE_INSTALL_PREFIX}/wallpapers"     "The install dir for wallpapers")
-   _set_fancy(DEMO_INSTALL_DIR         "${SHARE_INSTALL_PREFIX}/demos"          "The install dir for demos")
-   _set_fancy(KCONF_UPDATE_INSTALL_DIR "${DATA_INSTALL_DIR}/kconf_update"       "The kconf_update install dir")
-   _set_fancy(AUTOSTART_INSTALL_DIR    "${SHARE_INSTALL_PREFIX}/autostart"      "The install dir for autostart files")
-
-   _set_fancy(XDG_APPS_INSTALL_DIR     "${SHARE_INSTALL_PREFIX}/applications/kde4"         "The XDG apps dir")
-   _set_fancy(XDG_DIRECTORY_INSTALL_DIR "${SHARE_INSTALL_PREFIX}/desktop-directories"      "The XDG directory")
-   _set_fancy(XDG_MIME_INSTALL_DIR     "${SHARE_INSTALL_PREFIX}/mime/packages"  "The install dir for the xdg mimetypes")
-
-   _set_fancy(SYSCONF_INSTALL_DIR      "${CMAKE_INSTALL_PREFIX}/etc"            "The kde sysconfig install dir (default ${CMAKE_INSTALL_PREFIX}/etc)")
-   _set_fancy(MAN_INSTALL_DIR          "${SHARE_INSTALL_PREFIX}/man"            "The kde man install dir (default ${SHARE_INSTALL_PREFIX}/man/)")
-   _set_fancy(INFO_INSTALL_DIR         "${SHARE_INSTALL_PREFIX}/info"           "The kde info install dir (default ${SHARE_INSTALL_PREFIX}/info)")
-   _set_fancy(DBUS_INTERFACES_INSTALL_DIR      "${SHARE_INSTALL_PREFIX}/dbus-1/interfaces" "The kde dbus interfaces install dir (default  ${SHARE_INSTALL_PREFIX}/dbus-1/interfaces)")
-   _set_fancy(DBUS_SERVICES_INSTALL_DIR      "${SHARE_INSTALL_PREFIX}/dbus-1/services"     "The kde dbus services install dir (default  ${SHARE_INSTALL_PREFIX}/dbus-1/services)")
-
-endif (WIN32)
-
-# The INSTALL_TARGETS_DEFAULT_ARGS variable should be used when libraries are installed.
-# The arguments are also ok for regular executables, i.e. executables which don't go
-# into sbin/ or libexec/, but for installing executables the basic syntax 
-# INSTALL(TARGETS kate DESTINATION "${BIN_INSTALL_DIR}")
-# is enough, so using this variable there doesn't help a lot.
-# The variable must not be used for installing plugins.
-# Usage is like this:
-#    install(TARGETS kdecore kdeui ${INSTALL_TARGETS_DEFAULT_ARGS} )
-#
-# This will install libraries correctly under UNIX, OSX and Windows (i.e. dll's go
-# into bin/.
-# Later on it will be possible to extend this for installing OSX frameworks
-# The COMPONENT Devel argument has the effect that static libraries belong to the 
-# "Devel" install component. If we use this also for all install() commands
-# for header files, it will be possible to install
-#   -everything: make install OR cmake -P cmake_install.cmake
-#   -only the development files: cmake -DCOMPONENT=Devel -P cmake_install.cmake
-#   -everything except the development files: cmake -DCOMPONENT=Unspecified -P cmake_install.cmake
-# This can then also be used for packaging with cpack.
-
-set(INSTALL_TARGETS_DEFAULT_ARGS  RUNTIME DESTINATION "${BIN_INSTALL_DIR}"
-                                  LIBRARY DESTINATION "${LIB_INSTALL_DIR}"
-                                  ARCHIVE DESTINATION "${LIB_INSTALL_DIR}" COMPONENT Devel )
-
-
diff --git cmake/modules/MacroPushRequiredVars.cmake cmake/modules/MacroPushRequiredVars.cmake
deleted file mode 100644
index 650b566..0000000
--- cmake/modules/MacroPushRequiredVars.cmake
+++ /dev/null
@@ -1,47 +0,0 @@
-# this module defines two macros:
-# MACRO_PUSH_REQUIRED_VARS()
-# and
-# MACRO_POP_REQUIRED_VARS()
-# use these if you call cmake macros which use
-# any of the CMAKE_REQUIRED_XXX variables
-#
-# Usage:
-# MACRO_PUSH_REQUIRED_VARS()
-# SET(CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS} -DSOME_MORE_DEF)
-# CHECK_FUNCTION_EXISTS(...)
-# MACRO_POP_REQUIRED_VARS()
-
-# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>
-#
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-
-MACRO(MACRO_PUSH_REQUIRED_VARS)
-
-   IF(NOT DEFINED _PUSH_REQUIRED_VARS_COUNTER)
-      SET(_PUSH_REQUIRED_VARS_COUNTER 0)
-   ENDIF(NOT DEFINED _PUSH_REQUIRED_VARS_COUNTER)
-
-   MATH(EXPR _PUSH_REQUIRED_VARS_COUNTER "${_PUSH_REQUIRED_VARS_COUNTER}+1")
-
-   SET(_CMAKE_REQUIRED_INCLUDES_SAVE_${_PUSH_REQUIRED_VARS_COUNTER}    ${CMAKE_REQUIRED_INCLUDES})
-   SET(_CMAKE_REQUIRED_DEFINITIONS_SAVE_${_PUSH_REQUIRED_VARS_COUNTER} ${CMAKE_REQUIRED_DEFINITIONS})
-   SET(_CMAKE_REQUIRED_LIBRARIES_SAVE_${_PUSH_REQUIRED_VARS_COUNTER}   ${CMAKE_REQUIRED_LIBRARIES})
-   SET(_CMAKE_REQUIRED_FLAGS_SAVE_${_PUSH_REQUIRED_VARS_COUNTER}       ${CMAKE_REQUIRED_FLAGS})
-ENDMACRO(MACRO_PUSH_REQUIRED_VARS)
-
-MACRO(MACRO_POP_REQUIRED_VARS)
-
-# don't pop more than we pushed
-   IF("${_PUSH_REQUIRED_VARS_COUNTER}" GREATER "0")
-
-      SET(CMAKE_REQUIRED_INCLUDES    ${_CMAKE_REQUIRED_INCLUDES_SAVE_${_PUSH_REQUIRED_VARS_COUNTER}})
-      SET(CMAKE_REQUIRED_DEFINITIONS ${_CMAKE_REQUIRED_DEFINITIONS_SAVE_${_PUSH_REQUIRED_VARS_COUNTER}})
-      SET(CMAKE_REQUIRED_LIBRARIES   ${_CMAKE_REQUIRED_LIBRARIES_SAVE_${_PUSH_REQUIRED_VARS_COUNTER}})
-      SET(CMAKE_REQUIRED_FLAGS       ${_CMAKE_REQUIRED_FLAGS_SAVE_${_PUSH_REQUIRED_VARS_COUNTER}})
-
-      MATH(EXPR _PUSH_REQUIRED_VARS_COUNTER "${_PUSH_REQUIRED_VARS_COUNTER}-1")
-   ENDIF("${_PUSH_REQUIRED_VARS_COUNTER}" GREATER "0")
-
-ENDMACRO(MACRO_POP_REQUIRED_VARS)
-
diff --git cmake/modules/MacroWriteBasicCMakeVersionFile.cmake cmake/modules/MacroWriteBasicCMakeVersionFile.cmake
deleted file mode 100644
index 6f9e418..0000000
--- cmake/modules/MacroWriteBasicCMakeVersionFile.cmake
+++ /dev/null
@@ -1,22 +0,0 @@
-#  MACRO_WRITE_BASIC_CMAKE_VERSION_FILE( _filename _major _minor _patch)
-#    Writes a file for use as <package>ConfigVersion.cmake file to <_filename>.
-#    See the documentation of FIND_PACKAGE() for details on this.
-#    _filename is the output filename, it should be in the build tree.
-#    _major is the major version number of the project to be installed
-#    _minor is the minor version number of the project to be installed
-#    _patch is the patch version number of the project to be installed
-#
-
-# Copyright (c) 2008, Alexander Neundorf, <neundorf@kde.org>
-#
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-
-get_filename_component(_currentListFileDir ${CMAKE_CURRENT_LIST_FILE} PATH)
-
-function(MACRO_WRITE_BASIC_CMAKE_VERSION_FILE _filename _major _minor _patch)
-   set(PROJECT_VERSION_MAJOR ${_major})
-   set(PROJECT_VERSION_MINOR ${_minor})
-   set(PROJECT_VERSION_PATCH ${_patch})
-   configure_file(${_currentListFileDir}/BasicFindPackageVersion.cmake.in "${_filename}" @ONLY)
-endfunction(MACRO_WRITE_BASIC_CMAKE_VERSION_FILE _major _minor _patch)
diff --git core/CMakeLists.txt core/CMakeLists.txt
index 0317f04..f49b792 100644
--- core/CMakeLists.txt
+++ core/CMakeLists.txt
@@ -27,9 +27,6 @@ set_target_properties(${POLKITQT-1_CORE_PCNAME} PROPERTIES VERSION ${POLKITQT-1_
                                 DEFINE_SYMBOL MAKE_POLKITQT1_LIB
                                 EXPORT_NAME Core)
 
-target_include_directories(${POLKITQT-1_CORE_PCNAME} INTERFACE $<INSTALL_INTERFACE:${INCLUDE_DESTINATION}/${POLKITQT-1_INCLUDE_PATH}>)
-
-install(TARGETS ${POLKITQT-1_CORE_PCNAME} EXPORT ${POLKITQT-1_CAMEL_NAME}Export ARCHIVE DESTINATION ${LIB_DESTINATION}
-                               LIBRARY DESTINATION ${LIB_DESTINATION}
-                               RUNTIME DESTINATION bin)
+target_include_directories(${POLKITQT-1_CORE_PCNAME} INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/${POLKITQT-1_INCLUDE_PATH}>)
 
+install(TARGETS ${POLKITQT-1_CORE_PCNAME} EXPORT ${POLKITQT-1_CAMEL_NAME}Export)
diff --git examples/CMakeLists.txt examples/CMakeLists.txt
index b6e3db3..cc8f11f 100644
--- examples/CMakeLists.txt
+++ examples/CMakeLists.txt
@@ -1,5 +1,5 @@
 
-install(FILES org.qt.policykit.examples.policy DESTINATION ${CMAKE_INSTALL_FULL_DATAROOTDIR}/polkit-1/actions/)
+install(FILES org.qt.policykit.examples.policy DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/polkit-1/actions/)
 
 include_directories(
     ${CMAKE_SOURCE_DIR}/gui
@@ -44,7 +44,7 @@ macro(dbus_add_activation_system_service _sources)
         string(REGEX REPLACE "\\.service.*$" ".service" _output_file ${_i})
         set(_target ${CMAKE_CURRENT_BINARY_DIR}/${_output_file})
         configure_file(${_service_file} ${_target})
-        install(FILES ${_target} DESTINATION ${CMAKE_INSTALL_FULL_DATAROOTDIR}/dbus-1/system-services )
+        install(FILES ${_target} DESTINATION ${CMAKE_INSTALL__DATAROOTDIR}/dbus-1/system-services )
         #install(FILES ${_target} DESTINATION ${_install_dir})
     endforeach (_i ${ARGN})
 endmacro(dbus_add_activation_system_service _sources)
@@ -72,7 +72,7 @@ target_link_libraries(${POLKITQT-1_EXAMPLE_HELPER}
     ${POLKITQT-1_GUI_PCNAME}
 )
 
-install(TARGETS ${POLKITQT-1_EXAMPLE_HELPER} RUNTIME DESTINATION ${CMAKE_INSTALL_FULL_BINDIR})
+install(TARGETS ${POLKITQT-1_EXAMPLE_HELPER} RUNTIME DESTINATION ${CMAKE_INSTALL__BINDIR})
 
 dbus_add_activation_system_service(org.qt.policykit.examples.service.in)
 
diff --git gui/CMakeLists.txt gui/CMakeLists.txt
index fd84627..5f8e5c4 100644
--- gui/CMakeLists.txt
+++ gui/CMakeLists.txt
@@ -23,8 +23,6 @@ set_target_properties(${POLKITQT-1_GUI_PCNAME} PROPERTIES VERSION ${POLKITQT-1_L
                                 DEFINE_SYMBOL MAKE_POLKITQT1_LIB
                                 EXPORT_NAME Gui)
 
-target_include_directories(${POLKITQT-1_GUI_PCNAME} INTERFACE $<INSTALL_INTERFACE:${INCLUDE_DESTINATION}/${POLKITQT-1_INCLUDE_PATH}>)
+target_include_directories(${POLKITQT-1_GUI_PCNAME} INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/${POLKITQT-1_INCLUDE_PATH}>)
 
-install(TARGETS ${POLKITQT-1_GUI_PCNAME} EXPORT ${POLKITQT-1_CAMEL_NAME}Export ARCHIVE DESTINATION ${LIB_DESTINATION}
-                               LIBRARY DESTINATION ${LIB_DESTINATION}
-                               RUNTIME DESTINATION bin)
+install(TARGETS ${POLKITQT-1_GUI_PCNAME} EXPORT ${POLKITQT-1_CAMEL_NAME}Export)
diff --git polkit-qt-1.pc.cmake polkit-qt-1.pc.cmake
index 7cc55a9..ba8e46e 100644
--- polkit-qt-1.pc.cmake
+++ polkit-qt-1.pc.cmake
@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=@LIB_DESTINATION@
-includedir=@INCLUDE_DESTINATION@/@POLKITQT-1_INCLUDE_PATH@
+libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@/@POLKITQT-1_INCLUDE_PATH@
 
 Name: @POLKITQT-1_PCNAME@
 Description: Convenience library for using polkit with a Qt-styled API
diff --git polkit-qt-agent-1.pc.cmake polkit-qt-agent-1.pc.cmake
index 001925d..23b2cae 100644
--- polkit-qt-agent-1.pc.cmake
+++ polkit-qt-agent-1.pc.cmake
@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=@LIB_DESTINATION@
-includedir=@INCLUDE_DESTINATION@/@POLKITQT-1_INCLUDE_PATH@
+libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@/@POLKITQT-1_INCLUDE_PATH@
 
 Name: @POLKITQT-1_AGENT_PCNAME@
 Description: Convenience library for using polkit Agent with a Qt-styled API
diff --git polkit-qt-core-1.pc.cmake polkit-qt-core-1.pc.cmake
index ca435a6..fa501f0 100644
--- polkit-qt-core-1.pc.cmake
+++ polkit-qt-core-1.pc.cmake
@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=@LIB_DESTINATION@
-includedir=@INCLUDE_DESTINATION@/@POLKITQT-1_INCLUDE_PATH@
+libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@/@POLKITQT-1_INCLUDE_PATH@
 
 Name: @POLKITQT-1_CORE_PCNAME@
 Description: Convenience library for using polkit with a Qt-styled API, non-GUI classes
diff --git polkit-qt-gui-1.pc.cmake polkit-qt-gui-1.pc.cmake
index e7279d1..7261b0c 100644
--- polkit-qt-gui-1.pc.cmake
+++ polkit-qt-gui-1.pc.cmake
@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=@LIB_DESTINATION@
-includedir=@INCLUDE_DESTINATION@/@POLKITQT-1_INCLUDE_PATH@
+libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@/@POLKITQT-1_INCLUDE_PATH@
 
 Name: @POLKITQT-1_GUI_PCNAME@
 Description: Convenience library for using polkit with a Qt-styled API, GUI classes
diff --git polkit-qt5-1.pc.cmake polkit-qt5-1.pc.cmake
index 7cc55a9..ba8e46e 100644
--- polkit-qt5-1.pc.cmake
+++ polkit-qt5-1.pc.cmake
@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=@LIB_DESTINATION@
-includedir=@INCLUDE_DESTINATION@/@POLKITQT-1_INCLUDE_PATH@
+libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@/@POLKITQT-1_INCLUDE_PATH@
 
 Name: @POLKITQT-1_PCNAME@
 Description: Convenience library for using polkit with a Qt-styled API
diff --git polkit-qt5-agent-1.pc.cmake polkit-qt5-agent-1.pc.cmake
index fabc0db..709a24e 100644
--- polkit-qt5-agent-1.pc.cmake
+++ polkit-qt5-agent-1.pc.cmake
@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=@LIB_DESTINATION@
-includedir=@INCLUDE_DESTINATION@/@POLKITQT-1_INCLUDE_PATH@
+libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@/@POLKITQT-1_INCLUDE_PATH@
 
 Name: @POLKITQT-1_AGENT_PCNAME@
 Description: Convenience library for using polkit Agent with a Qt-styled API
diff --git polkit-qt5-core-1.pc.cmake polkit-qt5-core-1.pc.cmake
index 33687c2..588f267 100644
--- polkit-qt5-core-1.pc.cmake
+++ polkit-qt5-core-1.pc.cmake
@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=@LIB_DESTINATION@
-includedir=@INCLUDE_DESTINATION@/@POLKITQT-1_INCLUDE_PATH@
+libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@/@POLKITQT-1_INCLUDE_PATH@
 
 Name: @POLKITQT-1_CORE_PCNAME@
 Description: Convenience library for using polkit with a Qt-styled API, non-GUI classes
diff --git polkit-qt5-gui-1.pc.cmake polkit-qt5-gui-1.pc.cmake
index 4280226..1c012dd 100644
--- polkit-qt5-gui-1.pc.cmake
+++ polkit-qt5-gui-1.pc.cmake
@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=@LIB_DESTINATION@
-includedir=@INCLUDE_DESTINATION@/@POLKITQT-1_INCLUDE_PATH@
+libdir=${exec_prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@/@POLKITQT-1_INCLUDE_PATH@
 
 Name: @POLKITQT-1_GUI_PCNAME@
 Description: Convenience library for using polkit with a Qt-styled API, GUI classes
