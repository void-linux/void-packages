Index: tuxguitar-code/TuxGuitar-fluidsynth/jni/GNUmakefile
===================================================================
--- TuxGuitar-fluidsynth/jni/GNUmakefile	(revision 1799)
+++ TuxGuitar-fluidsynth/jni/GNUmakefile	(revision 1800)
@@ -1,5 +1,5 @@
 RM?=rm -f
-CFLAGS?=-I$(shell gcj -print-file-name=include/) -fPIC
+CFLAGS?=-I../../build-scripts/native-modules/common-include -fPIC
 LDFLAGS?=
 LDLIBS?=-lfluidsynth
 LDPATH?=-L/usr/lib
Index: tuxguitar-code/TuxGuitar-fluidsynth/jni/org_herac_tuxguitar_player_impl_midiport_fluidsynth_MidiSynth.c
===================================================================
--- TuxGuitar-fluidsynth/jni/org_herac_tuxguitar_player_impl_midiport_fluidsynth_MidiSynth.c	(revision 1799)
+++ TuxGuitar-fluidsynth/jni/org_herac_tuxguitar_player_impl_midiport_fluidsynth_MidiSynth.c	(revision 1800)
@@ -4,6 +4,9 @@
 #include <fluidsynth.h>
 #include "org_herac_tuxguitar_player_impl_midiport_fluidsynth_MidiSynth.h"
 
+#define FLUID_VERSION_GEN(major, minor, micro) ((major << 16) | (minor << 8) | (micro)) 
+#define FLUID_VERSION FLUID_VERSION_GEN(FLUIDSYNTH_VERSION_MAJOR, FLUIDSYNTH_VERSION_MINOR, FLUIDSYNTH_VERSION_MICRO) 
+
 typedef struct{
 	fluid_settings_t* settings;
 	fluid_synth_t* synth;
@@ -217,7 +220,7 @@
 			double value = 0;
 			const jbyte *jkey = (*env)->GetStringUTFChars(env, key, NULL);
 			
-			fluid_settings_getnum(handle->settings,(char *)jkey, &value );
+			fluid_settings_getnum(handle->settings, (char *)jkey, &value);
 			
 			(*env)->ReleaseStringUTFChars(env, key, jkey);
 			(*env)->CallVoidMethod( env, ref , mid , (jdouble)value );
@@ -236,7 +239,7 @@
 			int value = 0;
 			const jbyte *jkey = (*env)->GetStringUTFChars(env, key, NULL);
 			
-			fluid_settings_getint(handle->settings,(char *)jkey, &value );
+			fluid_settings_getint(handle->settings, (char *)jkey, &value);
 			
 			(*env)->ReleaseStringUTFChars(env, key, jkey);
 			(*env)->CallVoidMethod( env, ref , mid , (jint)value );
@@ -256,7 +259,8 @@
 			char *value = NULL;
 			const jbyte *jkey = (*env)->GetStringUTFChars(env, key, NULL);
 			
-			fluid_settings_getstr(handle->settings,(char *)jkey, &value );
+			fluid_settings_dupstr(handle->settings, (char *)jkey, &value);
+			
 			jvalue = (*env)->NewStringUTF(env, value);
 			
 			(*env)->ReleaseStringUTFChars(env, key, jkey);
@@ -273,11 +277,16 @@
 		jclass cl = (*env)->GetObjectClass(env, ref);
 		jmethodID mid = (*env)->GetMethodID(env, cl, "setValue", "(D)V");
 		if (mid != 0){
+			double value = 0;
 			const jbyte *jkey = (*env)->GetStringUTFChars(env, key, NULL);
-			double value = fluid_settings_getnum_default(handle->settings,(char *)jkey);
-			
+
+#if FLUID_VERSION >= FLUID_VERSION_GEN(2,0,0)
+			fluid_settings_getnum_default(handle->settings, (char *)jkey, &value);
+#else
+			value = fluid_settings_getnum_default(handle->settings, (char *)jkey);
+#endif
 			(*env)->ReleaseStringUTFChars(env, key, jkey);
-			(*env)->CallVoidMethod( env, ref , mid , (jdouble)value );
+			(*env)->CallVoidMethod( env, ref , mid , (jdouble) value );
 		}
 	}
 }
@@ -290,9 +299,14 @@
 		jclass cl = (*env)->GetObjectClass(env, ref);
 		jmethodID mid = (*env)->GetMethodID(env, cl, "setValue", "(I)V");
 		if (mid != 0){
+			int value = 0;
 			const jbyte *jkey = (*env)->GetStringUTFChars(env, key, NULL);
-			int value = fluid_settings_getint_default(handle->settings,(char *)jkey);
 			
+#if FLUID_VERSION >= FLUID_VERSION_GEN(2,0,0)
+			fluid_settings_getint_default(handle->settings, (char *)jkey, &value);
+#else
+			value = fluid_settings_getint_default(handle->settings, (char *)jkey);
+#endif
 			(*env)->ReleaseStringUTFChars(env, key, jkey);
 			(*env)->CallVoidMethod( env, ref , mid , (jint)value );
 		}
@@ -307,8 +321,14 @@
 		jclass cl = (*env)->GetObjectClass(env, ref);
 		jmethodID mid = (*env)->GetMethodID(env, cl, "setValue", "(Ljava/lang/String;)V");
 		if (mid != 0){
+			char *value = NULL;
 			const jbyte *jkey = (*env)->GetStringUTFChars(env, key, NULL);
-			char *value = fluid_settings_getstr_default(handle->settings,(char *)jkey);
+			
+#if FLUID_VERSION >= FLUID_VERSION_GEN(2,0,0)
+			fluid_settings_getstr_default(handle->settings,(char *)jkey, &value);
+#else
+			value = fluid_settings_getstr_default(handle->settings,(char *)jkey);
+#endif
 			jstring jvalue = (*env)->NewStringUTF(env, value);
 			
 			(*env)->ReleaseStringUTFChars(env, key, jkey);
@@ -331,7 +351,7 @@
 			double maximum = 0;
 			const jbyte *jkey = (*env)->GetStringUTFChars(env, key, NULL);
 			
-			fluid_settings_getnum_range(handle->settings,(char *)jkey, &minimum , &maximum );
+			fluid_settings_getnum_range(handle->settings,(char *)jkey, &minimum , &maximum);
 			
 			(*env)->ReleaseStringUTFChars(env, key, jkey);
 			(*env)->CallVoidMethod( env, minimumRef , midMin , (jdouble)minimum );
@@ -354,7 +374,7 @@
 			int maximum = 0;
 			const jbyte *jkey = (*env)->GetStringUTFChars(env, key, NULL);
 			
-			fluid_settings_getint_range(handle->settings,(char *)jkey, &minimum , &maximum );
+			fluid_settings_getint_range(handle->settings,(char *)jkey, &minimum , &maximum);
 			
 			(*env)->ReleaseStringUTFChars(env, key, jkey);
 			(*env)->CallVoidMethod( env, minimumRef , midMin , (jint)minimum );
