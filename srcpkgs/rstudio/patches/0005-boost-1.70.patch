https://github.com/zaphoyd/websocketpp/issues/794

--- src/cpp/ext/websocketpp/transport/asio/connection.hpp.orig	2019-03-05 23:41:04 UTC
+++ src/cpp/ext/websocketpp/transport/asio/connection.hpp
@@ -296,7 +296,7 @@ class connection : public config::socket_type::socket_
      */
     timer_ptr set_timer(long duration, timer_handler callback) {
         timer_ptr new_timer = lib::make_shared<boost::asio::deadline_timer>(
-            lib::ref(*m_io_service),
+            *m_io_service,
             boost::posix_time::milliseconds(duration)
         );
 
@@ -423,7 +423,7 @@ class connection : public config::socket_type::socket_
 
         if (config::enable_multithreading) {
             m_strand = lib::make_shared<boost::asio::io_service::strand>(
-                lib::ref(*io_service));
+                *io_service);
 
             m_async_read_handler = m_strand->wrap(lib::bind(
                 &type::handle_async_read, get_shared(),lib::placeholders::_1,
--- src/cpp/ext/websocketpp/transport/asio/endpoint.hpp.orig	2019-03-05 23:41:04 UTC
+++ src/cpp/ext/websocketpp/transport/asio/endpoint.hpp
@@ -184,7 +184,7 @@ class endpoint : public config::socket_type { (public)
         m_io_service = ptr;
         m_external_io_service = true;
         m_acceptor = lib::make_shared<boost::asio::ip::tcp::acceptor>(
-            lib::ref(*m_io_service));
+            *m_io_service);
 
         m_state = READY;
         ec = lib::error_code();
@@ -610,7 +610,7 @@ class endpoint : public config::socket_type { (public)
      */
     void start_perpetual() {
         m_work = lib::make_shared<boost::asio::io_service::work>(
-            lib::ref(*m_io_service)
+            *m_io_service
         );
     }
 
@@ -776,7 +776,7 @@ class endpoint : public config::socket_type { (public)
         // Create a resolver
         if (!m_resolver) {
             m_resolver = lib::make_shared<boost::asio::ip::tcp::resolver>(
-                lib::ref(*m_io_service));
+                *m_io_service);
         }
 
         std::string proxy = tcon->get_proxy();
--- src/cpp/ext/websocketpp/transport/asio/security/none.hpp.orig	2019-03-05 23:41:04 UTC
+++ src/cpp/ext/websocketpp/transport/asio/security/none.hpp
@@ -167,7 +167,7 @@ class connection : public lib::enable_shared_from_this
         }
 
         m_socket = lib::make_shared<boost::asio::ip::tcp::socket>(
-            lib::ref(*service));
+            *service);
 
         m_state = READY;
 
