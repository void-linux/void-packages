Index: 0ad-0.0.26-alpha/libraries/source/spidermonkey/patch.sh
===================================================================
--- 0ad-0.0.26-alpha.orig/libraries/source/spidermonkey/patch.sh
+++ 0ad-0.0.26-alpha/libraries/source/spidermonkey/patch.sh
@@ -75,6 +75,14 @@ patch -p1 < ../FixRpiUnalignedFpAccess.d
 # Note that this isn't quite the upstream patch to match our version.
 patch -p1 < ../FixRust150.diff
 
+patch -p1 <../python-3.11.diff
+
+rm -rf third_party/python/virtualenv
+# mkdir third_party/python/virtualenv/
+bsdtar -C third_party/python \
+	-xf ../virtualenv-20.0.31.tar.gz \
+	--strip-components=2 virtualenv-20.0.31/src
+
 # Patch those separately, as they might interfere with normal behaviour.
 if [ "$(uname -s)" = "FreeBSD" ];
 then
Index: 0ad-0.0.26-alpha/libraries/source/spidermonkey/python-3.11.diff
===================================================================
--- /dev/null
+++ 0ad-0.0.26-alpha/libraries/source/spidermonkey/python-3.11.diff
@@ -0,0 +1,92 @@
+Index: mozjs-78.6.0/python/mozbuild/mozbuild/util.py
+===================================================================
+--- mozjs-78.6.0.orig/python/mozbuild/mozbuild/util.py
++++ mozjs-78.6.0/python/mozbuild/mozbuild/util.py
+@@ -220,7 +220,7 @@ class FileAvoidWrite(BytesIO):
+     still occur, as well as diff capture if requested.
+     """
+ 
+-    def __init__(self, filename, capture_diff=False, dry_run=False, readmode='rU'):
++    def __init__(self, filename, capture_diff=False, dry_run=False, readmode='r'):
+         BytesIO.__init__(self)
+         self.name = filename
+         assert type(capture_diff) == bool
+Index: mozjs-78.6.0/python/mozbuild/mozbuild/action/process_define_files.py
+===================================================================
+--- mozjs-78.6.0.orig/python/mozbuild/mozbuild/action/process_define_files.py
++++ mozjs-78.6.0/python/mozbuild/mozbuild/action/process_define_files.py
+@@ -36,7 +36,7 @@ def process_define_file(output, input):
+             not config.substs.get('JS_STANDALONE'):
+         config = PartialConfigEnvironment(mozpath.join(topobjdir, 'js', 'src'))
+ 
+-    with open(path, 'rU') as input:
++    with open(path, 'r') as input:
+         r = re.compile('^\s*#\s*(?P<cmd>[a-z]+)(?:\s+(?P<name>\S+)(?:\s+(?P<value>\S+))?)?', re.U)
+         for l in input:
+             m = r.match(l)
+Index: mozjs-78.6.0/python/mozbuild/mozbuild/backend/base.py
+===================================================================
+--- mozjs-78.6.0.orig/python/mozbuild/mozbuild/backend/base.py
++++ mozjs-78.6.0/python/mozbuild/mozbuild/backend/base.py
+@@ -265,7 +265,7 @@ class BuildBackend(LoggingMixin):
+         return status
+ 
+     @contextmanager
+-    def _write_file(self, path=None, fh=None, readmode='rU'):
++    def _write_file(self, path=None, fh=None, readmode='r'):
+         """Context manager to write a file.
+ 
+         This is a glorified wrapper around FileAvoidWrite with integration to
+Index: mozjs-78.6.0/python/mozbuild/mozbuild/preprocessor.py
+===================================================================
+--- mozjs-78.6.0.orig/python/mozbuild/mozbuild/preprocessor.py
++++ mozjs-78.6.0/python/mozbuild/mozbuild/preprocessor.py
+@@ -517,7 +517,7 @@ class Preprocessor:
+ 
+         if args:
+             for f in args:
+-                with io.open(f, 'rU', encoding='utf-8') as input:
++                with io.open(f, 'r', encoding='utf-8') as input:
+                     self.processFile(input=input, output=out)
+             if depfile:
+                 mk = Makefile()
+@@ -807,7 +807,7 @@ class Preprocessor:
+                     args = self.applyFilters(args)
+                 if not os.path.isabs(args):
+                     args = os.path.join(self.curdir, args)
+-                args = io.open(args, 'rU', encoding='utf-8')
++                args = io.open(args, 'r', encoding='utf-8')
+             except Preprocessor.Error:
+                 raise
+             except Exception:
+@@ -862,7 +862,7 @@ def preprocess(includes=[sys.stdin], def
+     pp = Preprocessor(defines=defines,
+                       marker=marker)
+     for f in includes:
+-        with io.open(f, 'rU', encoding='utf-8') as input:
++        with io.open(f, 'r', encoding='utf-8') as input:
+             pp.processFile(input=input, output=output)
+     return pp.includes
+ 
+Index: mozjs-78.6.0/python/mozbuild/mozpack/files.py
+===================================================================
+--- mozjs-78.6.0.orig/python/mozbuild/mozpack/files.py
++++ mozjs-78.6.0/python/mozbuild/mozpack/files.py
+@@ -558,7 +558,7 @@ class PreprocessedFile(BaseFile):
+         pp = Preprocessor(defines=self.defines, marker=self.marker)
+         pp.setSilenceDirectiveWarnings(self.silence_missing_directive_warnings)
+ 
+-        with _open(self.path, 'rU') as input:
++        with _open(self.path, 'r') as input:
+             with _open(os.devnull, 'w') as output:
+                 pp.processFile(input=input, output=output)
+ 
+@@ -615,7 +615,7 @@ class PreprocessedFile(BaseFile):
+         pp = Preprocessor(defines=self.defines, marker=self.marker)
+         pp.setSilenceDirectiveWarnings(self.silence_missing_directive_warnings)
+ 
+-        with _open(self.path, 'rU') as input:
++        with _open(self.path, 'r') as input:
+             pp.processFile(input=input, output=dest, depfile=deps_out)
+ 
+         dest.close()
