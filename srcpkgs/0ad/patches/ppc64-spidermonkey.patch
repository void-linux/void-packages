--- libraries/source/spidermonkey/patch.sh
+++ libraries/source/spidermonkey/patch.sh
@@ -53,3 +53,4 @@ patch -p1  < ../FixTracelogger.diff
 # Based on: https://svnweb.freebsd.org/ports/head/sysutils/py-psutil121/files/patch-_psutil_bsd.c?revision=436575&view=markup
 # Related: https://bugzilla.mozilla.org/show_bug.cgi?id=1238983
 patch -p0 < ../FixpsutilFreeBSD.diff
+patch -p0 < ../ppc64.diff
--- /dev/null
+++ libraries/source/spidermonkey/ppc64.diff
@@ -0,0 +1,33 @@
+--- js/src/jit/CodeGenerator.cpp
++++ js/src/jit/CodeGenerator.cpp
+@@ -3464,12 +3464,12 @@ CodeGenerator::visitCallDirectEvalV(LCallDirectEvalV* lir)
+     callVM(DirectEvalValueInfo, lir);
+ }
+ 
+-// Registers safe for use before generatePrologue().
+-static const uint32_t EntryTempMask = Registers::TempMask & ~(1 << OsrFrameReg.code());
+-
+ void
+ CodeGenerator::generateArgumentsChecks(bool bailout)
+ {
++    // Registers safe for use before generatePrologue().
++    static const uint32_t EntryTempMask = Registers::TempMask & ~(1 << OsrFrameReg.code());
++
+     // This function can be used the normal way to check the argument types,
+     // before entering the function and bailout when arguments don't match.
+     // For debug purpose, this is can also be used to force/check that the
+--- js/src/jit/none/MacroAssembler-none.h
++++ js/src/jit/none/MacroAssembler-none.h
+@@ -131,6 +131,12 @@ class Assembler : public AssemblerShared
+     static void ToggleCall(CodeLocationLabel, bool) { MOZ_CRASH(); }
+ 
+     static uintptr_t GetPointer(uint8_t*) { MOZ_CRASH(); }
++
++    void verifyHeapAccessDisassembly(uint32_t begin, uint32_t end,
++                                     const Disassembler::HeapAccess &heapAccess)
++    {
++        MOZ_CRASH();
++    }
+ };
+ 
+ class Operand
