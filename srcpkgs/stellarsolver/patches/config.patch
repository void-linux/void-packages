--- a/stellarsolver.pc.cmake
+++ b/stellarsolver.pc.cmake
@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=@CMAKE_INSTALL_PREFIX@
-libdir=@PKG_CONFIG_LIBDIR@
-includedir=@INCLUDE_INSTALL_DIR@
+libdir=${exec_prefix}/lib
+includedir=${prefix}/include
 
 Name: stellarsolver
 Description: StellarSolver Internal Star Extraction and Plate Solving Library
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.5)
+cmake_minimum_required(VERSION 3.7)
 PROJECT(StellarSolver C CXX)
 set(CMAKE_CXX_STANDARD 17)
 if(APPLE)
@@ -80,9 +80,19 @@ option(BUILD_DEMOS "Build stellarsolver
 option(BUILD_TESTS "Build stellarsolver tests, instead of just the library" Off)
 option(BUILD_CLI "Build stellarsolver command line interface, instead of just the library" Off)
 
-find_package(CFITSIO REQUIRED)
-find_package(GSL REQUIRED)
-find_package(WCSLIB REQUIRED)
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(cfitsio REQUIRED IMPORTED_TARGET cfitsio>=3)
+pkg_check_modules(gsl REQUIRED IMPORTED_TARGET gsl)
+pkg_check_modules(wcslib REQUIRED IMPORTED_TARGET wcslib)
+set(CFITSIO_FOUND TRUE)
+set(CFITSIO_INCLUDE_DIR "${cfitsio_INCLUDE_DIRS}")
+set(CFITSIO_LIBRARIES PkgConfig::cfitsio)
+set(GSL_FOUND TRUE)
+set(GSL_INCLUDE_DIR "${gsl_INCLUDE_DIRS}")
+set(GSL_LIBRARIES PkgConfig::gsl)
+set(WCSLIB_FOUND TRUE)
+set(WCSLIB_INCLUDE_DIR "${wcslib_INCLUDE_DIRS}")
+set(WCSLIB_LIBRARIES PkgConfig::wcslib)
 
 # Option to choose between Qt5 and Qt6
 option(USE_QT5 "Use Qt5" ON)
@@ -96,10 +106,6 @@ else()
     set(LIBRARY_NAME stellarsolver6)
 endif()
 
-if (NOT CFITSIO_FOUND OR CFITSIO_VERSION_MAJOR LESS 3)
-  message(FATAL_ERROR "CFITSIO version too old, Please install cfitsio 3.x and try again. http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html")
-endif (NOT CFITSIO_FOUND OR CFITSIO_VERSION_MAJOR LESS 3)
-
 if (CFITSIO_FOUND)
   include_directories(${CFITSIO_INCLUDE_DIR})
 endif (CFITSIO_FOUND)
@@ -596,17 +602,39 @@ export(TARGETS stellarsolver
     NAMESPACE ${PROJECT_NAME}::
     FILE ${TARGET_EXPORT_NAME}.cmake)
 # 3. Configure the Include Directories
+file(WRITE
+    "${CMAKE_CURRENT_BINARY_DIR}/${TARGET_EXPORT_CONFIG}.cmake.in"
+    "
+@PACKAGE_INIT@
+
+include(CMakeFindDependencyMacro)
+find_dependency(PkgConfig)
+pkg_check_modules(cfitsio REQUIRED IMPORTED_TARGET cfitsio>=3)
+pkg_check_modules(gsl REQUIRED IMPORTED_TARGET gsl)
+pkg_check_modules(wcslib REQUIRED IMPORTED_TARGET wcslib)
+
+find_dependency(Qt6 COMPONENTS Core Network Widgets Concurrent)
+
+include("\${CMAKE_CURRENT_LIST_DIR}/${TARGET_EXPORT_NAME}.cmake")
+")
+configure_package_config_file(
+    "${CMAKE_CURRENT_BINARY_DIR}/${TARGET_EXPORT_CONFIG}.cmake.in"
+    "${CMAKE_CURRENT_BINARY_DIR}/${TARGET_EXPORT_CONFIG}.cmake"
+    INSTALL_DESTINATION ${ConfigPackageLocation}
+    PATH_VARS INCLUDE_INSTALL_DIR
+)
 target_include_directories(stellarsolver PUBLIC
     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
-    $<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/libstellarsolver>)
+    $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/include/libstellarsolver>)
 
 # 4. Install StellarSolver Config
 install(EXPORT ${TARGET_EXPORT_NAME}
-        FILE ${TARGET_EXPORT_CONFIG}.cmake
+    FILE ${TARGET_EXPORT_NAME}.cmake
         NAMESPACE ${PROJECT_NAME}::
         DESTINATION ${ConfigPackageLocation})
 
 # 5. Install StellarSolver Config Version
 install(FILES
+        "${CMAKE_CURRENT_BINARY_DIR}/${TARGET_EXPORT_CONFIG}.cmake"
         "${CMAKE_CURRENT_BINARY_DIR}/${TARGET_EXPORT_CONFIG}Version.cmake"
         DESTINATION ${ConfigPackageLocation})
