From 389b2578b27b1f3dc65952bf0d3f98e12410a8b8 Mon Sep 17 00:00:00 2001
From: Leon Henrik Plickat <leonhenrik.plickat@stud.uni-goettingen.de>
Date: Fri, 26 Nov 2021 13:45:06 +0100
Subject: [PATCH] Only include execinfo.h when GLIBC is used

---
 lswt.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/lswt.c b/lswt.c
index b61463d..f5fe78a 100644
--- a/lswt.c
+++ b/lswt.c
@@ -27,8 +27,11 @@
 #include <wayland-client.h>
 
 #ifdef __linux__
+#include <features.h>
+#ifdef __GLIBC__
 #include<execinfo.h>
 #endif
+#endif
 
 #include "xdg-output-unstable-v1.h"
 #include "wlr-foreign-toplevel-management-unstable-v1.h"
@@ -642,6 +645,7 @@ static void handle_error (int signum)
 	fputs(msg, stderr);
 
 #ifdef __linux__
+#ifdef __GLIBC__
 	fputs("Attempting to get backtrace:\n", stderr);
 
 	/* In some rare cases, getting a backtrace can also cause a segfault.
@@ -652,6 +656,7 @@ static void handle_error (int signum)
 	const int calls = backtrace(buffer, sizeof(buffer) / sizeof(void *));
 	backtrace_symbols_fd(buffer, calls, fileno(stderr));
 	fputs("\n", stderr);
+#endif
 #endif
 
 	/* Let the default handlers deal with the rest. */
-- 
2.32.0
