Implement qcopy_file_preserving using cp(1).

Done because importing the original upstream fix resulted in a 2kloc patch;
the function in upstream is "extern int",
the one in this patch is static,
so as soon as upstream publish a release that fixes this bug
this patch will signal its obsolescence by failing to compile.

--- a/utils/recutl.c
+++ b/utils/recutl.c
@@ -58,6 +58,33 @@
 #include <recutl.h>
 #include "read-file.h"
 
+#include <sys/wait.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+
+static int qcopy_file_preserving(const char *src, const char *dst)
+{
+        int stat_loc;
+        pid_t pid = fork();
+        if (pid < 0) {
+                perror("fork");
+                return -1;
+        }
+        if (pid == 0) {
+                execl("/bin/cp", "--", src, dst, (void *)0);
+                _exit(1);
+        }
+        if (pid != waitpid(pid, &stat_loc, 0)) {
+                perror("waitpid");
+                return -1;
+        }
+        if (!(WIFEXITED(stat_loc) && WEXITSTATUS(stat_loc) == 0)) {
+                return -1;
+        }
+        return 0;
+}
+
 /*
  * Global variables.
  */

