--- gcc-4.8.1/boehm-gc/os_dep.c.orig	2013-09-17 07:46:00.969884340 +0000
+++ gcc-4.8.1/boehm-gc/os_dep.c	2013-09-17 06:53:53.629884946 +0000
@@ -26,7 +26,7 @@
 #     define __KERNEL__
 #     include <asm/signal.h>
 #     undef __KERNEL__
-#   else
+#   elif defined(__GLIBC__)
       /* Kernels prior to 2.1.1 defined struct sigcontext_struct instead of */
       /* struct sigcontext.  libc6 (glibc2) uses "struct sigcontext" in     */
       /* prototypes, so we have to include the top-level sigcontext.h to    */
--- gcc-4.8.2/boehm-gc/dyn_load.c.orig	2014-02-17 14:13:09.519850231 +0200
+++ gcc-4.8.2/boehm-gc/dyn_load.c	2014-02-17 14:14:27.906093514 +0200
@@ -459,9 +459,7 @@
 /* For glibc 2.2.4+.  Unfortunately, it doesn't work for older	*/
 /* versions.  Thanks to Jakub Jelinek for most of the code.	*/
 
-# if (defined(LINUX) || defined (__GLIBC__)) /* Are others OK here, too? */ \
-     && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2) \
-         || (__GLIBC__ == 2 && __GLIBC_MINOR__ == 2 && defined(DT_CONFIG))) 
+# if (defined(LINUX) || defined (__GLIBC__))
 
 /* We have the header files for a glibc that includes dl_iterate_phdr.	*/
 /* It may still not be available in the library on the target system.   */
--- gcc-4.8.2/boehm-gc/include/private/gcconfig.h.orig	2014-02-17 14:14:36.026049422 +0200
+++ gcc-4.8.2/boehm-gc/include/private/gcconfig.h	2014-02-17 14:17:11.345207887 +0200
@@ -684,7 +684,7 @@
 #       ifdef __ELF__
 #            define DYNAMIC_LOADING
 #	     include <features.h>
-#	     if defined(__GLIBC__)&& __GLIBC__>=2
+#	     if 1
 #              define SEARCH_FOR_DATA_START
 #	     else /* !GLIBC2 */
                extern char **__environ;
@@ -1147,7 +1147,7 @@
 #              define DATASTART ((ptr_t)((((word) (_etext)) + 0xfff) & ~0xfff))
 #	     endif
 #	     include <features.h>
-#	     if defined(__GLIBC__) && __GLIBC__ >= 2
+#	     if 1
 #		 define SEARCH_FOR_DATA_START
 #	     else
      	         extern char **__environ;
@@ -1367,7 +1367,7 @@
 #       define HBLKSIZE 4096
 #     endif
 #     define USE_GENERIC_PUSH_REGS
-#     if __GLIBC__ == 2 && __GLIBC_MINOR__ >= 2 || __GLIBC__ > 2
+#     if 1
 #        define LINUX_STACKBOTTOM
 #     else
 #        define STACKBOTTOM 0x80000000
@@ -1858,7 +1858,7 @@
 #       ifdef __ELF__
 #            define DYNAMIC_LOADING
 #	     include <features.h>
-#	     if defined(__GLIBC__) && __GLIBC__ >= 2
+#	     if 1
 #		 define SEARCH_FOR_DATA_START
 #	     else
      	         extern char **__environ;
