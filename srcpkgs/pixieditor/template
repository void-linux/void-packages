# Template file for 'pixieditor'
pkgname=pixieditor
version=2.0.1.7
revision=1
archs="x86_64"
makedepends="icu-devel"
depends="ffmpeg"
short_desc="Universal editor for all 2d needs"
maintainer="Naiko <glclaritas@gmail.com>"
license="LGPL-3.0-only"
homepage="https://pixieditor.net"

# src/ submodules
_colorpicker_commit=db8aaff273239b21bf4c6f99b0162dcd1d742533
_drawie_commit=46be7a7eb2a93fc0fade23c8dcca20558209be6f
_pixiedocks_commit=87c3164a739b529dbbce199a7af761cbd11e5a58
_pixiparser_commit=d7a83f53f4a0e6a0e0d011cb045ab1f2075e759b

# external build tools
_wasi_sdk_ver=27
_wasi_sdk_arch="x86_64"
_dotnet_sdk_ver=8.0.413
_dotnet_sdk_arch="x64"

distfiles="https://github.com/PixiEditor/PixiEditor/archive/refs/tags/${version}.tar.gz
 https://github.com/PixiEditor/ColorPicker/archive/${_colorpicker_commit}.tar.gz>ColorPicker.tar.gz
 https://github.com/PixiEditor/Drawie/archive/${_drawie_commit}.tar.gz>Drawie.tar.gz
 https://github.com/PixiEditor/PixiDocks/archive/${_pixiedocks_commit}.tar.gz>PixiDocks.tar.gz
 https://github.com/PixiEditor/PixiParser/archive/${_pixiparser_commit}.tar.gz>PixiParser.tar.gz
 https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${_wasi_sdk_ver}/wasi-sdk-${_wasi_sdk_ver}.0-${_wasi_sdk_arch}-linux.tar.gz>wasi_sdk.tar.gz
 https://builds.dotnet.microsoft.com/dotnet/Sdk/${_dotnet_sdk_ver}/dotnet-sdk-${_dotnet_sdk_ver}-linux-${_dotnet_sdk_arch}.tar.gz>dotnet_sdk.tar.gz"

checksum="65fc93da778a676bb443b183fc5f9d4bec819c6f2cd73bfed9a249543c57aebc
 1747dff5a57b0c84ddc7bb51db16db08992bb936089f006f2266e8cb8bc1f540
 ec58141e5e55eafc147fd1c22e09f65d136a24a7d7146f5c5de1dc2ebacd7b71
 b0944981fb6ee7d1791300ab256e7911bb454353f1061c4ce3fc334a07e00722
 419672039b18f14f9530bb00c9056632aaf0bfe8b135607e77061546ff84c5f0
 b7d4d944c88503e4f21d84af07ac293e3440b1b6210bfd7fe78e0afd92c23bc2
 84ca524028e250f4b676f9ac41c85a34be40383d2f438372c4b5b8d28b61ac88"

skip_extraction="
 ColorPicker.tar.gz
 Drawie.tar.gz
 PixiDocks.tar.gz
 PixiParser.tar.gz
 wasi_sdk.tar.gz
 dotnet_sdk.tar.gz"

post_extract() {
	vsrcextract -C src/ColorPicker ColorPicker.tar.gz
	vsrcextract -C src/Drawie Drawie.tar.gz
	vsrcextract -C src/PixiDocks PixiDocks.tar.gz
	vsrcextract -C src/PixiParser PixiParser.tar.gz

	# put external build tools
	mkdir tools
	vsrcextract -C tools/wasi wasi_sdk.tar.gz
	vsrcextract -C tools/dotnet dotnet_sdk.tar.gz
}
do_build() {
	export WASI_SDK_PATH="${wrksrc}/tools/wasi"
	export DOTNET_ROOT="${wrksrc}/tools/dotnet"
	export PATH=$PATH:${XBPS_BUILDDIR}/${pkgname}-${version}/tools/dotnet
	export DOTNET_CLI_TELEMETRY_OPTOUT=1

	dotnet publish src/PixiEditor.Desktop/PixiEditor.Desktop.csproj -c Release --self-contained=true -r linux-x64
}
do_install() {
	_built_root=src/PixiEditor.Desktop/bin/Release/net8.0/linux-x64/publish

	vmkdir usr/bin
	vmkdir usr/lib/pixieditor
	vmkdir usr/share/applications
	vmkdir usr/share/icons/hicolor/512x512/apps

	# use system ffmpeg
	rm ${_built_root}/ThirdParty/Linux/ffmpeg/ffmpeg
	ln -s /usr/bin/ffmpeg ${_built_root}/ThirdParty/Linux/ffmpeg/ffmpeg

	vcopy ${_built_root}/* usr/lib/pixieditor
	vinstall ${_built_root}/Assets/PixiEditorLogo.png 644 usr/share/icons/hicolor/512x512/apps/ pixieditor.png
	vinstall ${FILESDIR}/pixieditor.desktop 644 usr/share/applications
	vbin ${FILESDIR}/pixieditor
}
