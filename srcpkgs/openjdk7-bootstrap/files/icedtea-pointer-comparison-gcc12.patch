--- openjdk.orig/hotspot/src/share/vm/opto/lcm.cpp
+++ openjdk/hotspot/src/share/vm/opto/lcm.cpp
@@ -60,7 +60,7 @@
 // Check whether val is not-null-decoded compressed oop,
 // i.e. will grab into the base of the heap if it represents NULL.
 static bool accesses_heap_base_zone(Node *val) {
-  if (Universe::narrow_oop_base() > 0) { // Implies UseCompressedOops.
+  if (Universe::narrow_oop_base() > (address)0) { // Implies UseCompressedOops.
     if (val && val->is_Mach()) {
       if (val->as_Mach()->ideal_Opcode() == Op_DecodeN) {
         // This assumes all Decodes with TypePtr::NotNull are matched to nodes that
--- openjdk.orig/hotspot/src/share/vm/runtime/virtualspace.cpp
+++ openjdk/hotspot/src/share/vm/runtime/virtualspace.cpp
@@ -527,7 +527,7 @@ ReservedHeapSpace::ReservedHeapSpace(siz
                 (UseCompressedOops && (Universe::narrow_oop_base() != NULL) &&
                  Universe::narrow_oop_use_implicit_null_checks()) ?
                   lcm(os::vm_page_size(), alignment) : 0) {
-  if (base() > 0) {
+  if (base() > (char*)0) {
     MemTracker::record_virtual_memory_type((address)base(), mtJavaHeap);
   }
 
@@ -546,7 +546,7 @@ ReservedHeapSpace::ReservedHeapSpace(con
                 (UseCompressedOops && (Universe::narrow_oop_base() != NULL) &&
                  Universe::narrow_oop_use_implicit_null_checks()) ?
                   lcm(os::vm_page_size(), prefix_align) : 0) {
-  if (base() > 0) {
+  if (base() > (char*)0) {
     MemTracker::record_virtual_memory_type((address)base(), mtJavaHeap);
   }
 
