setuptools for some reason is used as a variable and a module.

Initially this leads to "setuptools.findall" not being recognized as
a command related to the module at all.

Any use of module name in conditional statements also leads to error,
hence simple solution: rename the variable.

--- a/DisplayCAL/setup.py
+++ b/DisplayCAL/setup.py
@@ -453,7 +453,7 @@
     prefix = ""
     recordfile_name = None  # record installed files to this file
     sdist = "sdist" in sys.argv[1:]
-    setuptools = None
+    setools = None
     skip_postinstall = "--skip-postinstall" in sys.argv[1:]
     use_distutils = not bdist_bbfreeze and not do_py2app
     use_setuptools = (
@@ -480,7 +480,7 @@
             import setuptools
             from setuptools import setup, Extension
 
-            setuptools = True
+            setools = True
             print("using setuptools")
             current_findall = setuptools.findall
         except ImportError:
@@ -509,7 +509,7 @@
 
         distutils.filelist.findall = findall
 
-    if not setuptools:
+    if not setools:
         from distutils.core import setup, Extension
 
         print("using distutils")
@@ -945,7 +945,7 @@
     ext_modules = [RealDisplaySizeMM]
 
     requires = []
-    if not setuptools or sys.platform != "win32":
+    if not setools or sys.platform != "win32":
         # wxPython windows installer doesn't add egg-info entry, so
         # a dependency check from pkg_resources would always fail
         requires.append("wxPython (>= %s)" % ".".join(str(n) for n in wx_minversion))
@@ -1021,7 +1021,7 @@
         "version": msiversion if "bdist_msi" in sys.argv[1:] else version,
     }
 
-    if setuptools:
+    if setools:
         attrs["entry_points"] = {
             "gui_scripts": [
                 "%s = %s.main:main%s"
@@ -1278,7 +1278,7 @@
             attrs["options"]["py2exe"].update(
                 {"bundle_files": 3, "compressed": 0, "optimize": 0, "skip_archive": 1}
             )
-        if setuptools:
+        if setools:
             attrs["setup_requires"] = ["py2exe"]
         attrs["zipfile"] = os.path.join("lib", "library.zip")
 
@@ -1328,10 +1328,10 @@
         # site-packages (on Mac and Windows) and when we want to make them
         # absolute (Linux)
         linux = sys.platform not in ("darwin", "win32") and (
-            not cmd.root and setuptools
+            not cmd.root and setools
         )
         dar_win = (
-            sys.platform in ("darwin", "win32") and (cmd.root or not setuptools)
+            sys.platform in ("darwin", "win32") and (cmd.root or not setools)
         ) or bdist_win
         if (
             not do_uninstall
@@ -1380,7 +1380,7 @@
             # logic to find them
             paths = safe_glob(os.path.join(cmd.install_scripts, name))
             if sys.platform == "win32":
-                if setuptools:
+                if setools:
                     paths += safe_glob(os.path.join(cmd.install_scripts, f"{name}.exe"))
                     paths += safe_glob(
                         os.path.join(cmd.install_scripts, f"{name}-script.py")
@@ -1587,7 +1587,7 @@
         manifest_in.append("include " + os.path.join("tests", "*"))
         manifest_in.append("recursive-include theme *")
         manifest_in.append("recursive-include util *.cmd *.py *.sh")
-        if sys.platform == "win32" and not setuptools:
+        if sys.platform == "win32" and not setools:
             # Only needed under Windows
             manifest_in.append("global-exclude .svn/*")
         manifest_in.append("global-exclude *~")
