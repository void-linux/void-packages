diff '--color=auto' -ur Python-3.7.2.orig/Makefile.pre.in Python-3.7.2/Makefile.pre.in
--- Python-3.7.2.orig/Makefile.pre.in	2018-12-23 22:37:36.000000000 +0100
+++ Python-3.7.2/Makefile.pre.in	2019-01-11 16:02:48.375009386 +0100
@@ -1120,8 +1120,6 @@
 			upgrade) ensurepip="--upgrade" ;; \
 			install|*) ensurepip="" ;; \
 		esac; \
-		$(RUNSHARED) $(PYTHON_FOR_BUILD) -m ensurepip \
-			$$ensurepip --root=$(DESTDIR)/ ; \
 	fi
 
 altinstall: commoninstall
@@ -1130,8 +1128,6 @@
 			upgrade) ensurepip="--altinstall --upgrade" ;; \
 			install|*) ensurepip="--altinstall" ;; \
 		esac; \
-		$(RUNSHARED) $(PYTHON_FOR_BUILD) -m ensurepip \
-			$$ensurepip --root=$(DESTDIR)/ ; \
 	fi
 
 commoninstall:  check-clean-src @FRAMEWORKALTINSTALLFIRST@ \
@@ -1524,11 +1520,12 @@
 # Install the dynamically loadable modules
 # This goes into $(exec_prefix)
 sharedinstall: sharedmods
+	CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' \
 	$(RUNSHARED) $(PYTHON_FOR_BUILD) $(srcdir)/setup.py install \
 	   	--prefix=$(prefix) \
-		--install-scripts=$(BINDIR) \
-		--install-platlib=$(DESTSHARED) \
-		--root=$(DESTDIR)/
+		--install-scripts=$(DESTDIR)$(BINDIR) \
+		--install-platlib=$(DESTDIR)$(DESTSHARED) \
+		--root=/
 	-rm $(DESTDIR)$(DESTSHARED)/_sysconfigdata_$(ABIFLAGS)_$(MACHDEP)_$(MULTIARCH).py
 	-rm -r $(DESTDIR)$(DESTSHARED)/__pycache__
 
diff '--color=auto' -ur Python-3.7.2.orig/setup.py Python-3.7.2/setup.py
--- Python-3.7.2.orig/setup.py	2018-12-23 22:37:36.000000000 +0100
+++ Python-3.7.2/setup.py	2019-01-11 16:03:59.010588947 +0100
@@ -16,7 +16,7 @@
 from distutils.command.build_scripts import build_scripts
 from distutils.spawn import find_executable
 
-cross_compiling = "_PYTHON_HOST_PLATFORM" in os.environ
+cross_compiling = ("_PYTHON_HOST_PLATFORM" in os.environ) or ('PYTHONXCPREFIX' in os.environ)
 
 # Set common compiler and linker flags derived from the Makefile,
 # reserved for building the interpreter and the stdlib modules.
@@ -650,6 +650,11 @@
             for item in ldflags.split():
                 if item.startswith('-L'):
                     lib_dirs.append(item[2:])
+        
+        # Insert libraries and headers from XBPS_CROSS_BASE
+        if 'XBPS_CROSS_BASE' in os.environ:
+            lib_dirs += [os.environ['XBPS_CROSS_BASE'] + '/usr/lib']
+            inc_dirs += [os.environ['XBPS_CROSS_BASE'] + '/usr/include']
 
         #
         # The following modules are all pretty straightforward, and compile
