diff -ur a/Lib/test/test_math.py b/Lib/test/test_math.py
--- a/Lib/test/test_math.py	2024-10-07 01:02:14.000000000 -0400
+++ b/Lib/test/test_math.py	2024-11-24 21:10:44.322603023 -0500
@@ -2707,7 +2707,8 @@
     # properly: it doesn't use the right sign when the result is zero.
     @unittest.skipIf(
         sys.platform.startswith(("freebsd", "wasi", "netbsd"))
-        or (sys.platform == "android" and platform.machine() == "x86_64"),
+        or (sys.platform == "android" and platform.machine() == "x86_64")
+        or platform.libc_ver()[0] != 'glibc',
         f"this platform doesn't implement IEE 754-2008 properly")
     def test_fma_zero_result(self):
         nonnegative_finites = [0.0, 1e-300, 2.3, 1e300]
diff -ur a/Lib/test/test_re.py b/Lib/test/test_re.py
--- a/Lib/test/test_re.py	2024-10-07 01:02:14.000000000 -0400
+++ b/Lib/test/test_re.py	2024-11-24 21:11:47.190747775 -0500
@@ -4,6 +4,7 @@
                           warnings_helper, SHORT_TIMEOUT, CPUStopwatch, requires_resource)
 import locale
 import re
+import platform
 import string
 import sys
 import time
@@ -2016,7 +2017,8 @@
         self.assertEqual(re.fullmatch('[a-c]+', 'ABC', re.I).span(), (0, 3))
 
     @unittest.skipIf(
-        is_emscripten or is_wasi,
+        is_emscripten or is_wasi
+        or platform.libc_ver()[0] != 'glibc',
         "musl libc issue on Emscripten/WASI, bpo-46390"
     )
     def test_locale_caching(self):
@@ -2056,7 +2058,8 @@
         self.assertIsNone(re.match(b'(?Li)\xe5', b'\xc5'))
 
     @unittest.skipIf(
-        is_emscripten or is_wasi,
+        is_emscripten or is_wasi
+        or platform.libc_ver()[0] != 'glibc',
         "musl libc issue on Emscripten/WASI, bpo-46390"
     )
     def test_locale_compiled(self):
