# Template file for 'EternalTerminal'
pkgname=EternalTerminal
version=6.2.4
revision=1
# revisions used for the specific versions of submodules.
# they can be found in the external/ directory of the source code.
_sanitizers_gitrev="99e159ec9bc8dd362b08d18436bd40ff0648417b"
_threadpool_gitrev="9a42ec1329f259a5f4881a291db1dcb8f2ad9040"
build_wrksrc=EternalTerminal-et-v${version}
build_style=cmake
configure_args="-DUSE_SYSTEM_LIBS=ON -DDISABLE_TELEMETRY=ON -DDISABLE_SENTRY=ON
 -DBUILD_TESTING=OFF"
hostmakedepends="protobuf pkg-config"
makedepends="libsodium-devel protobuf-devel openssl-devel zlib-devel cxxopts
 msgpack-cxx json-c++"
short_desc="Re-Connectable secure remote shell"
maintainer="Orphaned <orphan@voidlinux.org>"
license="Apache-2.0"
homepage="https://eternalterminal.dev/"
distfiles="https://github.com/MisterTea/EternalTerminal/archive/refs/tags/et-v${version}.tar.gz
 https://github.com/arsenm/sanitizers-cmake/archive/${_sanitizers_gitrev}.tar.gz
 https://github.com/progschj/ThreadPool/archive/${_threadpool_gitrev}.tar.gz"
checksum="95cfb79bc2f25d19eb84ca3c28dba860bb52b3750334d373adeb2cd061de6ba6
 f9cf386638f455c5d2e7a835b95941201387d2531b8682942d59827663b58341
 954e0ecdac1aa0da1e0fa78577ff0d352e53094df43762fbc1884f76a7e1dcd2"
system_accounts="_eternal"
patch_args="-Np1 --directory=${build_wrksrc}"
# UnixSocketHandler.cpp:53 Error reading: 104 Connection reset by peer
# SocketHandler.cpp:91 Failed a call to writeAll: Broken pipe
make_check=no

if [ "$XBPS_TARGET_LIBC" = "musl" ]; then
	makedepends+=" libexecinfo-devel"
fi

if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
	makedepends+=" libatomic-devel"
fi

post_extract() {
	mv sanitizers-cmake-${_sanitizers_gitrev}/* \
		${build_wrksrc}/external/sanitizers-cmake
	mv ThreadPool-${_threadpool_gitrev}/* \
		${build_wrksrc}/external/ThreadPool
}

post_patch() {
	if [ "$XBPS_TARGET_LIBC" = "musl" ]; then
		# Use external libexecinfo
		vsed -i CMakeLists.txt \
			-e '/execinfo/!s/CORE_LIBRARIES$/& execinfo/'
	fi
	if [ -z "$XBPS_TARGET_NO_ATOMIC8" ]; then
		# Remove libatomic from LD if target arch supports atomics
		vsed -e '/  atomic$/d' -i CMakeLists.txt
	fi
}

post_install() {
	vsv etserver
}
