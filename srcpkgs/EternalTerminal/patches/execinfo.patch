diff --git CMakeLists.txt CMakeLists.txt
index b277dff..9ee989c 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -12,6 +12,12 @@ endif()
 
 option(CODE_COVERAGE "Enable code coverage" OFF)
 option(DISABLE_CRASH_LOG "Disable installing easylogging crash handler" OFF)
+option(ENABLE_EXECINFO "Enable execinfo support" OFF)
+
+if(ENABLE_EXECINFO)
+	SET(CMAKE_LINKER_FLAGS "${CMAKE_LINKER_FLAGS} -lexecinfo")
+	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_EXECINFO")
+endif()
 
 SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DET_VERSION='\"${PROJECT_VERSION}\"'")
 # For easylogging, disable default log file, enable crash log, ensure thread safe, and catch c++ exceptions
diff --git external_imported/easyloggingpp/src/easylogging++.cc external_imported/easyloggingpp/src/easylogging++.cc
index d763ee7..1237d9c 100644
--- external_imported/easyloggingpp/src/easylogging++.cc
+++ external_imported/easyloggingpp/src/easylogging++.cc
@@ -2786,7 +2786,7 @@ std::ostream& operator<<(std::ostream& os, const StackTrace& st) {
 }
 
 void StackTrace::generateNew(void) {
-#if ELPP_STACKTRACE
+#ifdef ENABLE_EXECINFO
   m_stack.clear();
   void* stack[kMaxStack];
   unsigned int size = backtrace(stack, kMaxStack);
diff --git external_imported/easyloggingpp/src/easylogging++.h external_imported/easyloggingpp/src/easylogging++.h
index 688d537..b4d754e 100644
--- external_imported/easyloggingpp/src/easylogging++.h
+++ external_imported/easyloggingpp/src/easylogging++.h
@@ -360,10 +360,10 @@ ELPP_INTERNAL_DEBUGGING_OUT_INFO << ELPP_INTERNAL_DEBUGGING_MSG(internalInfoStre
 #      include <codecvt>
 #  endif // ELPP_OS_WINDOWS
 #endif  // defined(ELPP_UNICODE)
-#if ELPP_STACKTRACE
+#ifdef ENABLE_EXECINFO
 #   include <cxxabi.h>
 #   include <execinfo.h>
-#endif  // ELPP_STACKTRACE
+#endif // ENABLE_EXECINFO
 #if ELPP_OS_ANDROID
 #   include <sys/system_properties.h>
 #endif  // ELPP_OS_ANDROID
