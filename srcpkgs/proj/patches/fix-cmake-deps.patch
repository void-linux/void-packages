--- a/cmake/project-config.cmake.in
+++ b/cmake/project-config.cmake.in
@@ -13,37 +13,6 @@ endif()
 
 include(CMakeFindDependencyMacro)
 
-# We cannot have a find_dependency() call between cmake_policy(PUSH)/cmake_policy(POP)
-# because find_dependency() issues a return() on failure, which results in
-# imbalanced push/pop
-# Cf https://gitlab.kitware.com/cmake/cmake/-/issues/17612
-cmake_policy(PUSH)
-cmake_policy(SET CMP0012 NEW)
-if("@ENABLE_TIFF@")
-    set(PROJ_CONFIG_FIND_TIFF_DEP ON)
-endif()
-if("@CURL_ENABLED@")
-    set(PROJ_CONFIG_FIND_CURL_DEP ON)
-endif()
-cmake_policy(POP)
-
-if(DEFINED PROJ_CONFIG_FIND_TIFF_DEP)
-    find_dependency(TIFF)
-endif()
-
-if(DEFINED PROJ_CONFIG_FIND_CURL_DEP)
-  # Chainload CURL usage requirements
-  find_dependency(CURL)
-  # Target CURL::libcurl only defined since CMake 3.12
-  if(NOT TARGET CURL::libcurl)
-      add_library(CURL::libcurl INTERFACE IMPORTED)
-      set_target_properties(CURL::libcurl PROPERTIES
-        INTERFACE_INCLUDE_DIRECTORIES "${CURL_INCLUDE_DIRS}"
-        INTERFACE_LINK_LIBRARIES      "${CURL_LIBRARIES}"
-      )
-  endif()
-endif()
-
 function(set_variable_from_rel_or_absolute_path var root rel_or_abs_path)
   if(IS_ABSOLUTE "${rel_or_abs_path}")
     set(${var} "${rel_or_abs_path}" PARENT_SCOPE)
