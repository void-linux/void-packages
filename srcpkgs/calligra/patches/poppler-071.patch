diff --git a/filters/karbon/pdf/PdfImport.cpp b/filters/karbon/pdf/PdfImport.cpp
index 48b08dfa32d..e910dae0756 100644
--- filters/karbon/pdf/PdfImport.cpp
+++ filters/karbon/pdf/PdfImport.cpp
@@ -88,9 +88,9 @@ KoFilter::ConversionStatus PdfImport::convert(const QByteArray& from, const QByt
     SvgOutputDev * dev = new SvgOutputDev(m_chain->outputFile());
     if (dev->isOk()) {
         int rotate = 0;
-        GBool useMediaBox = gTrue;
-        GBool crop = gFalse;
-        GBool printing = gFalse;
+        bool useMediaBox = true;
+        bool crop = false;
+        bool printing = false;
         pdfDoc->displayPages(dev, firstPage, lastPage, hDPI, vDPI, rotate, useMediaBox, crop, printing);
         dev->dumpContent();
     }
diff --git a/filters/karbon/pdf/SvgOutputDev.cpp b/filters/karbon/pdf/SvgOutputDev.cpp
index 5692824bc45..43205170991 100644
--- filters/karbon/pdf/SvgOutputDev.cpp
+++ filters/karbon/pdf/SvgOutputDev.cpp
@@ -39,7 +39,7 @@ class SvgOutputDev::Private
 {
 public:
     Private(const QString &fname)
-            : svgFile(fname), defs(0), body(0), state(gTrue)
+            : svgFile(fname), defs(0), body(0), state(true)
             , brush(Qt::SolidPattern) {}
 
     ~Private() {
@@ -52,7 +52,7 @@ public:
     QString defsData;
     QTextStream * defs;
     QTextStream * body;
-    GBool state;
+    bool state;
     QSizeF pageSize;
     QPen pen;
     QBrush brush;
@@ -62,7 +62,7 @@ SvgOutputDev::SvgOutputDev(const QString &fileName)
         : d(new Private(fileName))
 {
     if (! d->svgFile.open(QIODevice::WriteOnly)) {
-        d->state = gFalse;
+        d->state = false;
         return;
     }
 
@@ -75,24 +75,24 @@ SvgOutputDev::~SvgOutputDev()
     delete d;
 }
 
-GBool SvgOutputDev::isOk()
+bool SvgOutputDev::isOk()
 {
     return d->state;
 }
 
-GBool SvgOutputDev::upsideDown()
+bool SvgOutputDev::upsideDown()
 {
-    return gTrue;
+    return true;
 }
 
-GBool SvgOutputDev::useDrawChar()
+bool SvgOutputDev::useDrawChar()
 {
-    return gFalse;
+    return false;
 }
 
-GBool SvgOutputDev::interpretType3Chars()
+bool SvgOutputDev::interpretType3Chars()
 {
-    return gFalse;
+    return false;
 }
 
 void SvgOutputDev::startPage(int pageNum, GfxState *state, XRef */*xref*/)
@@ -480,7 +480,7 @@ void SvgOutputDev::drawString(GfxState * state, GooString * s)
 
 void SvgOutputDev::drawImage(GfxState *state, Object */*ref*/, Stream *str,
                              int width, int height, GfxImageColorMap *colorMap,
-                             int *maskColors, GBool /*inlineImg*/)
+                             int *maskColors, bool /*inlineImg*/)
 {
     ImageStream * imgStr = new ImageStream(str, width, colorMap->getNumPixelComps(), colorMap->getBits());
     imgStr->reset();
@@ -549,7 +549,7 @@ void SvgOutputDev::drawImage(GfxState *state, Object */*ref*/, Stream *str,
 
 void SvgOutputDev::drawImage(GfxState *state, Object *ref, Stream *str,
                              int width, int height, GfxImageColorMap *colorMap,
-                             GBool /*interpolate*/, int *maskColors, GBool inlineImg)
+                             bool /*interpolate*/, int *maskColors, bool inlineImg)
 {
     drawImage(state, ref, str, width, height, colorMap, maskColors, inlineImg);
 }
diff --git a/filters/karbon/pdf/SvgOutputDev.h b/filters/karbon/pdf/SvgOutputDev.h
index 2a4490848bf..cdb1d4e43b1 100644
--- filters/karbon/pdf/SvgOutputDev.h
+++ filters/karbon/pdf/SvgOutputDev.h
@@ -44,11 +44,11 @@ public:
     explicit SvgOutputDev(const QString &fileName);
     virtual ~SvgOutputDev();
 
-    GBool isOk();
+    bool isOk();
 
-    virtual GBool upsideDown();
-    virtual GBool useDrawChar();
-    virtual GBool interpretType3Chars();
+    virtual bool upsideDown();
+    virtual bool useDrawChar();
+    virtual bool interpretType3Chars();
     virtual void startPage(int pageNum, GfxState *state, XRef *xref);
     virtual void endPage();
 
@@ -63,10 +63,10 @@ public:
     // images
     virtual void drawImage(GfxState *state, Object *ref, Stream *str,
                            int width, int height, GfxImageColorMap *colorMap,
-                           int *maskColors, GBool inlineImg);
+                           int *maskColors, bool inlineImg);
     virtual void drawImage(GfxState *state, Object *ref, Stream *str,
                            int width, int height, GfxImageColorMap *colorMap,
-                           GBool interpolate, int *maskColors, GBool inlineImg);
+                           bool interpolate, int *maskColors, bool inlineImg);
 
     // styles
     virtual void updateAll(GfxState *state);

