Source: maxice8
Upstream: yes, this is adapted from upstream
Reason: allows compilation without using gobject-introspection to generate data
 thus avoiding a cross-breaking dependency on gobject-introspection

--- libnautilus-extension/meson.build
+++ libnautilus-extension/meson.build
@@ -73,22 +73,24 @@ libnautilus_extension = shared_library(
   install: true
 )
 
-gnome.generate_gir(
-  libnautilus_extension,
-  extra_args: [
-    '-DNAUTILUS_COMPILATION'
-  ],
-  sources: libnautilus_extension_sources,
-  nsversion: '3.0',
-  namespace: 'Nautilus',
-  includes: [
-    'Gtk-3.0',
-    'Gio-2.0',
-    'GLib-2.0'
-  ],
-  header: 'nautilus-extension.h',
-  install: true
-)
+if get_option('introspection')
+  gnome.generate_gir(
+    libnautilus_extension,
+    extra_args: [
+      '-DNAUTILUS_COMPILATION'
+    ],
+    sources: libnautilus_extension_sources,
+    nsversion: '3.0',
+    namespace: 'Nautilus',
+    includes: [
+      'Gtk-3.0',
+      'Gio-2.0',
+      'GLib-2.0'
+    ],
+    header: 'nautilus-extension.h',
+    install: true
+  )
+endif
 
 nautilus_extension = declare_dependency(
   sources: libnautilus_extension_enums[1],
--- meson_options.txt
+++ meson_options.txt
@@ -1,16 +1,74 @@
-option('docs', type: 'boolean', value: false)
-option('profiling', type: 'boolean', value: false)
-option('extensions', type: 'boolean', value: true)
-option('packagekit', type: 'boolean', value: true)
-option('selinux', type: 'boolean', value: false)
-option('tests', type: 'combo', choices: ['none', 'headless', 'all'], value: 'headless')
+##############
+# Extensions #
+##############
 option(
-  'profile',
+  'docs',
+  type: 'boolean',
+  value: false,
+  description: 'Build documentation for extension library',
+)
+option(
+  'extensions',
+  type: 'boolean',
+  value: true,
+  description: 'Build stock extensions',
+)
+option(
+  'introspection',
+  type: 'boolean',
+  value: true,
+  description: 'Build GObject introspection data for extension library',
+)
+##################
+# End extensions #
+##################
+
+############
+# Features #
+############
+option(
+  'packagekit',
+  type: 'boolean',
+  value: true,
+  description: 'Enable finding file type handlers using PackageKit',
+)
+option(
+  'selinux',
+  type: 'boolean',
+  value: false,
+  description: 'Enable SELinux context support in file properties dialog',
+)
+################
+# End features #
+################
+
+###########
+# Testing #
+###########
+option(
+  'profiling',
+  type: 'boolean',
+  value: false,
+  description: 'Enable performance profiling',
+)
+option(
+  'tests',
   type: 'combo',
   choices: [
-    'default',
-    'stable-flatpak',
-    'development'
+    'none',
+    'headless',
+    'all'
   ],
-  value: 'default'
+  value: 'headless',
+  description: 'Build selected tests',
+)
+###############
+# End testing #
+###############
+
+option(
+  'profile',
+  type: 'string',
+  value: '',
+  description: 'Build with specified application ID',
 )
