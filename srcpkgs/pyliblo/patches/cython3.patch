Taken from

  https://gitlab.archlinux.org/archlinux/packaging/packages/python-pyliblo

diff -urN pyliblo-0.10.0-orig/src/liblo.pxd pyliblo-0.10.0/src/liblo.pxd
--- pyliblo-0.10.0-orig/src/liblo.pxd	2015-03-14 23:32:24.000000000 -0300
+++ pyliblo-0.10.0/src/liblo.pxd	2023-08-02 04:17:47.601508337 -0400
@@ -53,20 +53,20 @@
     int lo_send_bundle_from(lo_address targ, lo_server serv, lo_bundle b)
 
     # server
-    lo_server lo_server_new_with_proto(char *port, int proto, lo_err_handler err_h)
+    lo_server lo_server_new_with_proto(char *port, int proto, void(*err_h)(int num, const_char *msg, const_char *where) except * nogil)
     void lo_server_free(lo_server s)
     char *lo_server_get_url(lo_server s)
     int lo_server_get_port(lo_server s)
     int lo_server_get_protocol(lo_server s)
-    lo_method lo_server_add_method(lo_server s, char *path, char *typespec, lo_method_handler h, void *user_data)
+    lo_method lo_server_add_method(lo_server s, char *path, char *typespec, int(*h)(const_char *path, const_char *types, lo_arg **argv, int argc, lo_message msg, void *user_data) except?-1 nogil, void *user_data)
     void lo_server_del_method(lo_server s, char *path, char *typespec)
-    int lo_server_add_bundle_handlers(lo_server s, lo_bundle_start_handler sh, lo_bundle_end_handler eh, void *user_data)
+    int lo_server_add_bundle_handlers(lo_server s, int(*sh)(lo_timetag time, void *user_data) except?-1 nogil , int(*eh)(void *user_data) except?-1 nogil, void *user_data)
     int lo_server_recv(lo_server s) nogil
     int lo_server_recv_noblock(lo_server s, int timeout) nogil
     int lo_server_get_socket_fd(lo_server s)
 
     # server thread
-    lo_server_thread lo_server_thread_new_with_proto(char *port, int proto, lo_err_handler err_h)
+    lo_server_thread lo_server_thread_new_with_proto(char *port, int proto, void(*err_h)(int num, const_char *msg, const_char *where) except * nogil)
     void lo_server_thread_free(lo_server_thread st)
     lo_server lo_server_thread_get_server(lo_server_thread st)
     void lo_server_thread_start(lo_server_thread st)
