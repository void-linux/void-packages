--- src/ne_openssl.c.orig	2020-04-02 09:38:00.420981981 +0200
+++ src/ne_openssl.c	2020-04-02 09:38:33.876330855 +0200
@@ -578,7 +578,7 @@ ne_ssl_context *ne_ssl_context_create(in
         /* enable workarounds for buggy SSL server implementations */
         SSL_CTX_set_options(ctx->ctx, SSL_OP_ALL);
         SSL_CTX_set_verify(ctx->ctx, SSL_VERIFY_PEER, verify_callback);
-#if OPENSSL_VERSION_NUMBER >= 0x10101000L
+#if !defined(LIBRESSL_VERSION_NUMBER) && OPENSSL_VERSION_NUMBER >= 0x10101000L
         SSL_CTX_set_post_handshake_auth(ctx->ctx, 1);
 #endif
     } else if (mode == NE_SSL_CTX_SERVER) {
--- src/ne_socket.c.orig	2020-04-02 09:39:23.413847326 +0200
+++ src/ne_socket.c	2020-04-02 09:45:41.358787728 +0200
@@ -610,7 +610,7 @@ static int error_ossl(ne_socket *sock, i
 /* OpenSSL I/O function implementations. */
 static int readable_ossl(ne_socket *sock, int secs)
 {
-#if OPENSSL_VERSION_NUMBER < 0x10101000L
+#if defined(LIBRESSL_VERSION_NUMBER) || OPENSSL_VERSION_NUMBER < 0x10101000L
     /* Sufficient for TLSv1.2 and earlier. */
     if (SSL_pending(sock->ssl))
 	return 0;
