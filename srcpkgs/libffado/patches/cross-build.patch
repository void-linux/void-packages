--- support/tools/SConscript.orig
+++ support/tools/SConscript
@@ -40,12 +40,12 @@
     else:
         e.PrependUnique( LIBS=["expat"] )
 
-e.Command( "static_info.txt", "ffado-diag", "support/tools/ffado-diag --static > $TARGET" )
+# e.Command( "static_info.txt", "ffado-diag", "support/tools/ffado-diag --static > $TARGET" )
 
 e.ScanReplace( "ffado-diag.in" )
 
 e.Install( "$bindir", "ffado-diag" )
-e.Install( "$libdatadir", "static_info.txt" )
+# e.Install( "$libdatadir", "static_info.txt" )
 
 if env['ENABLE_DICE']:
     e.Program( target = "ffado-set-nickname", source = "ffado-set-nickname.cpp" )
--- SConstruct.orig
+++ SConstruct
@@ -254,13 +254,6 @@
     env['REQUIRE_LIBAVC']=0
 
 if not env.GetOption('clean'):
-    #
-    # Check for working gcc and g++ compilers and their environment.
-    #
-    if not conf.CompilerCheck():
-        print("\nIt seems as if your system isn't even able to compile any C-/C++-programs. Probably you don't have gcc and g++ installed. Compiling a package from source without a working compiler is very hard to do, please install the needed packages.\nHint: on *ubuntu you need both gcc- and g++-packages installed, easiest solution is to install build-essential which depends on gcc and g++.")
-        Exit( 1 )
-
     # Check for pkg-config before using pkg-config to check for other dependencies.
     if not conf.CheckForPKGConfig():
         print("\nThe program 'pkg-config' could not be found.\nEither you have to install the corresponding package first or make sure that PATH points to the right directions.")
--- SConstruct.orig
+++ SConstruct
@@ -537,7 +537,7 @@
 env.Alias( "install", env['libdir'] )
 env.Alias( "install", env['includedir'] )
 env.Alias( "install", env['sharedir'] )
-env.Alias( "install", env['libdatadir'] )
+# env.Alias( "install", env['libdatadir'] )
 env.Alias( "install", env['bindir'] )
 env.Alias( "install", env['mandir'] )
 if env['BUILD_MIXER'] == 'true':
--- SConstruct.orig
+++ SConstruct
@@ -395,12 +395,7 @@
 
 # PyQT checks
 if env['BUILD_MIXER'] != 'false':
-    if  (    conf.CheckForApp( 'which pyuic4' ) \
-         and conf.CheckForPyModule( 'PyQt4' ) \
-         and conf.CheckForPyModule( 'dbus.mainloop.qt' )) \
-     or (    conf.CheckForApp( 'which pyuic5' ) \
-         and conf.CheckForPyModule( 'PyQt5' ) \
-         and conf.CheckForPyModule( 'dbus.mainloop.pyqt5' )):
+    if  conf.CheckForApp( 'which pyuic4' ) or conf.CheckForApp( 'which pyuic5' ):
         env['BUILD_MIXER'] = 'true'
     elif not env.GetOption('clean'):
         if env['BUILD_MIXER'] == 'auto':
