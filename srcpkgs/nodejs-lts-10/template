# Template file for 'nodejs-lts-10'
pkgname=nodejs-lts-10
version=10.23.1
revision=1
wrksrc="node-v${version}"
hostmakedepends="pkg-config python zlib-devel which $(vopt_if icu icu-devel)
 $(vopt_if ssl openssl-devel) $(vopt_if libuv libuv-devel)
 $(vopt_if http_parser http-parser-devel) $(vopt_if nghttp2 nghttp2-devel)
 $(vopt_if cares c-ares-devel)"
makedepends="zlib-devel python-devel $(vopt_if icu icu-devel)
 $(vopt_if ssl openssl-devel) $(vopt_if libuv libuv-devel)
 $(vopt_if http_parser http-parser-devel) $(vopt_if nghttp2 nghttp2-devel)
 $(vopt_if cares c-ares-devel)"
short_desc="Evented I/O for V8 javascript (Dubnium)"
maintainer="k4leg <d0xi@inbox.ru>"
license="MIT"
homepage="https://nodejs.org/"
distfiles="${homepage}/download/release/v${version}/node-v${version}.tar.xz"
checksum=88aa16f5af79615b183ca55ed81393763169e75d1fb96013cf1831895c6cedfa
python_version=2 #unverified

build_options="ssl libuv http_parser icu nghttp2 cares"
desc_option_ssl="Enable shared openssl"
desc_option_libuv="Enable shared libuv"
desc_option_http_parser="Enable shared http-parser"
desc_option_icu="Enable shared icu"
desc_option_nghttp2="Enable shared nghttp2"
desc_option_cares="Enable shared c-ares"
build_options_default="libuv http_parser icu nghttp2 cares"

replaces="iojs>=0"
conflicts="nodejs nodejs-lts"
provides="nodejs-runtime-0_1"

if [ "$XBPS_WORDSIZE" -ne "$XBPS_TARGET_WORDSIZE" ]; then
	nocross="host and target must have the same pointer size"
fi

if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
	makedepends+=" libatomic-devel"
fi
if [ "$XBPS_NO_ATOMIC8" ]; then
	hostmakedepends+=" libatomic-devel"
fi

CFLAGS="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
CXXFLAGS="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

do_configure() {
	local _args

	export LD="$CXX"
	if [ "$CROSS_BUILD" ]; then
		case "$XBPS_TARGET_MACHINE" in
			arm*) _args="--dest-cpu=arm" ;;
			aarch64*) _args="--dest-cpu=arm64" ;;
			ppc64*) _args="--dest-cpu=ppc64" ;;
			ppc*) _args="--dest-cpu=ppc" ;;
			mipsel*) _args="--dest-cpu=mipsel" ;;
			mips*) _args="--dest-cpu=mips" ;;
			i686*) _args="--dest-cpu=x86" ;;
			x86_64*) _args="--dest-cpu=x86_64" ;;
			*) msg_error "$pkgver: cannot be cross compiled for ${XBPS_TARGET_MACHINE}.\n" ;;
		esac
		_args+=" --without-snapshot"
	fi
	# their pregenerated asm is for ELFv1...
	case "$XBPS_TARGET_MACHINE" in
		ppc64|ppc64-musl) _args+=" --openssl-no-asm" ;;
	esac
	./configure --prefix=/usr --shared-zlib \
		$(vopt_if icu --with-intl=system-icu) \
		$(vopt_if http_parser --shared-http-parser) \
		$(vopt_if ssl --shared-openssl) \
		$(vopt_if libuv --shared-libuv) \
		$(vopt_if nghttp2 --shared-nghttp2) \
		$(vopt_if cares --shared-cares) ${_args}
}

do_build() {
	if [ "$CROSS_BUILD" ]; then
		make LD="$CXX" LDFLAGS+=-ldl ${makejobs} PORTABLE=1 V=1
	else
		make LD="$CXX" LDFLAGS+=-ldl ${makejobs} V=1
	fi
}

do_install() {
	make LD="$CXX" LDFLAGS+=-ldl DESTDIR="$DESTDIR" install
	rm $DESTDIR/usr/include/node/openssl -rf
	vlicense LICENSE
}

nodejs-lts-10-devel_package() {
	short_desc+=" (development files)"
	conflicts="nodejs-devel nodejs-lts-devel"
	pkg_install() {
		vmove usr/include
	}
}
