From 2a86dd618f864faaaa6f5b7e3c2f5528d33220d7 Mon Sep 17 00:00:00 2001
From: gi1242 <gi1242@2546c25a-1013-0410-928e-fe7b36fe29a8>
Date: Sat, 12 Mar 2011 06:34:37 +0000
Subject: [PATCH] inotify.h is now provided with libc6. Use that instead of
 shipping our own (Raphael Droz)

---
 src/Makefile           |   3 +-
 src/inotify-syscalls.h |  61 ----------------------
 src/inotify.h          | 113 -----------------------------------------
 src/main.c             |   3 +-
 4 files changed, 2 insertions(+), 178 deletions(-)
 delete mode 100644 src/inotify-syscalls.h
 delete mode 100644 src/inotify.h

diff --git src/Makefile src/Makefile
index 397857a..5ed7c42 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -11,7 +11,6 @@
 # Source files
 #
 headers 	= xnots.h
-extheaders	= inotify.h inotify-syscalls.h
 sources		= background.c list.c main.c notes.c options.c savegeom.c
 
 objects		= $(sources:.c=.o)
@@ -58,7 +57,7 @@ buildall: clean xnots
 #
 background.o:	$(headers)			background.c
 list.o:		$(headers)			list.c
-main.o:		$(headers) $(extheaders)	main.c
+main.o:		$(headers)			main.c
 notes.o:	$(headers)			notes.c
 options.o:	$(headers)			options.c
 savegeom.o:	$(headers)			savegeom.c
diff --git src/inotify-syscalls.h src/inotify-syscalls.h
deleted file mode 100644
index 1431d46..0000000
--- a/src/inotify-syscalls.h
+++ /dev/null
@@ -1,61 +0,0 @@
-#ifndef _LINUX_INOTIFY_SYSCALLS_H
-#define _LINUX_INOTIFY_SYSCALLS_H
-
-#include <sys/syscall.h>
-
-#if defined(__i386__)
-# define __NR_inotify_init	291
-# define __NR_inotify_add_watch	292
-# define __NR_inotify_rm_watch	293
-#elif defined(__x86_64__)
-# define __NR_inotify_init	253
-# define __NR_inotify_add_watch	254
-# define __NR_inotify_rm_watch	255
-#elif defined(__powerpc__) || defined(__powerpc64__)
-# define __NR_inotify_init	275
-# define __NR_inotify_add_watch	276
-# define __NR_inotify_rm_watch	277
-#elif defined (__ia64__)
-# define __NR_inotify_init	1277
-# define __NR_inotify_add_watch	1278
-# define __NR_inotify_rm_watch	1279
-#elif defined (__s390__)
-# define __NR_inotify_init	284
-# define __NR_inotify_add_watch	285
-# define __NR_inotify_rm_watch	286
-#elif defined (__alpha__)
-# define __NR_inotify_init	444
-# define __NR_inotify_add_watch	445
-# define __NR_inotify_rm_watch	446
-#elif defined (__sparc__) || defined (__sparc64__)
-# define __NR_inotify_init	151
-# define __NR_inotify_add_watch	152
-# define __NR_inotify_rm_watch	156
-#elif defined (__arm__)
-# define __NR_inotify_init	316
-# define __NR_inotify_add_watch	317
-# define __NR_inotify_rm_watch	318
-#elif defined (__sh__)
-# define __NR_inotify_init	290
-# define __NR_inotify_add_watch	291
-# define __NR_inotify_rm_watch	292
-#else
-# error "Unsupported architecture!"
-#endif
-
-static inline int inotify_init (void)
-{
-	return syscall (__NR_inotify_init);
-}
-
-static inline int inotify_add_watch (int fd, const char *name, __u32 mask)
-{
-	return syscall (__NR_inotify_add_watch, fd, name, mask);
-}
-
-static inline int inotify_rm_watch (int fd, __u32 wd)
-{
-	return syscall (__NR_inotify_rm_watch, fd, wd);
-}
-
-#endif /* _LINUX_INOTIFY_SYSCALLS_H */
diff --git src/inotify.h src/inotify.h
deleted file mode 100644
index 267c88b..0000000
--- a/src/inotify.h
+++ /dev/null
@@ -1,113 +0,0 @@
-/*
- * Inode based directory notification for Linux
- *
- * Copyright (C) 2005 John McCutchan
- */
-
-#ifndef _LINUX_INOTIFY_H
-#define _LINUX_INOTIFY_H
-
-#include <linux/types.h>
-
-/*
- * struct inotify_event - structure read from the inotify device for each event
- *
- * When you are watching a directory, you will receive the filename for events
- * such as IN_CREATE, IN_DELETE, IN_OPEN, IN_CLOSE, ..., relative to the wd.
- */
-struct inotify_event {
-	__s32		wd;		/* watch descriptor */
-	__u32		mask;		/* watch mask */
-	__u32		cookie;		/* cookie to synchronize two events */
-	__u32		len;		/* length (including nulls) of name */
-	char		name[0];	/* stub for possible name */
-};
-
-/* the following are legal, implemented events that user-space can watch for */
-#define IN_ACCESS		0x00000001	/* File was accessed */
-#define IN_MODIFY		0x00000002	/* File was modified */
-#define IN_ATTRIB		0x00000004	/* Metadata changed */
-#define IN_CLOSE_WRITE		0x00000008	/* Writtable file was closed */
-#define IN_CLOSE_NOWRITE	0x00000010	/* Unwrittable file closed */
-#define IN_OPEN			0x00000020	/* File was opened */
-#define IN_MOVED_FROM		0x00000040	/* File was moved from X */
-#define IN_MOVED_TO		0x00000080	/* File was moved to Y */
-#define IN_CREATE		0x00000100	/* Subfile was created */
-#define IN_DELETE		0x00000200	/* Subfile was deleted */
-#define IN_DELETE_SELF		0x00000400	/* Self was deleted */
-#define IN_MOVE_SELF		0x00000800	/* Self was moved */
-
-/* the following are legal events.  they are sent as needed to any watch */
-#define IN_UNMOUNT		0x00002000	/* Backing fs was unmounted */
-#define IN_Q_OVERFLOW		0x00004000	/* Event queued overflowed */
-#define IN_IGNORED		0x00008000	/* File was ignored */
-
-/* helper events */
-#define IN_CLOSE		(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE) /* close */
-#define IN_MOVE			(IN_MOVED_FROM | IN_MOVED_TO) /* moves */
-
-/* special flags */
-#define IN_ONLYDIR		0x01000000	/* only watch the path if it is a directory */
-#define IN_DONT_FOLLOW		0x02000000	/* don't follow a sym link */
-#define IN_MASK_ADD		0x20000000	/* add to the mask of an already existing watch */
-#define IN_ISDIR		0x40000000	/* event occurred against dir */
-#define IN_ONESHOT		0x80000000	/* only send event once */
-
-/*
- * All of the events - we build the list by hand so that we can add flags in
- * the future and not break backward compatibility.  Apps will get only the
- * events that they originally wanted.  Be sure to add new events here!
- */
-#define IN_ALL_EVENTS	(IN_ACCESS | IN_MODIFY | IN_ATTRIB | IN_CLOSE_WRITE | \
-			 IN_CLOSE_NOWRITE | IN_OPEN | IN_MOVED_FROM | \
-			 IN_MOVED_TO | IN_DELETE | IN_CREATE | IN_DELETE_SELF | \
-			 IN_MOVE_SELF)
-
-#ifdef __KERNEL__
-
-#include <linux/dcache.h>
-#include <linux/fs.h>
-#include <linux/config.h>
-
-#ifdef CONFIG_INOTIFY
-
-extern void inotify_inode_queue_event(struct inode *, __u32, __u32,
-				      const char *);
-extern void inotify_dentry_parent_queue_event(struct dentry *, __u32, __u32,
-					      const char *);
-extern void inotify_unmount_inodes(struct list_head *);
-extern void inotify_inode_is_dead(struct inode *);
-extern u32 inotify_get_cookie(void);
-
-#else
-
-static inline void inotify_inode_queue_event(struct inode *inode,
-					     __u32 mask, __u32 cookie,
-					     const char *filename)
-{
-}
-
-static inline void inotify_dentry_parent_queue_event(struct dentry *dentry,
-						     __u32 mask, __u32 cookie,
-						     const char *filename)
-{
-}
-
-static inline void inotify_unmount_inodes(struct list_head *list)
-{
-}
-
-static inline void inotify_inode_is_dead(struct inode *inode)
-{
-}
-
-static inline u32 inotify_get_cookie(void)
-{
-	return 0;
-}
-
-#endif	/* CONFIG_INOTIFY */
-
-#endif	/* __KERNEL __ */
-
-#endif	/* _LINUX_INOTIFY_H */
diff --git src/main.c src/main.c
index 9007d6d..5bf063e 100644
--- a/src/main.c
+++ b/src/main.c
@@ -10,8 +10,7 @@
 #include "xnots.h"
 #include <X11/extensions/Xrandr.h>
 
-#include "inotify.h"
-#include "inotify-syscalls.h"
+#include <sys/inotify.h>
 
 #include <dirent.h>
 #include <fnmatch.h>
