Add option to run as a non-forking daemon

See upstream issue: https://github.com/TigerVNC/tigervnc/issues/1649

--- a/unix/vncserver/vncsession.c	2021-11-09 02:51:28.000000000 -0500
+++ b/unix/vncserver/vncsession.c	2023-07-27 17:43:26.711000000 -0400
@@ -506,14 +506,23 @@
 
     const char *username, *display;
 
-    if ((argc != 3) || (argv[2][0] != ':')) {
+    int forking = 1;
+    if (argc == 4) {
+        if ((getopt(argc, argv, "D") == 'D') && (argv[3][0] == ':'))
+            forking = 0;
+        else {
+            fprintf(stderr, "Syntax:\n");
+            fprintf(stderr, "    %s [-D] <username> <display>\n", argv[0]);
+            return EX_USAGE;
+        }
+    } else if ((argc != 3) || (argv[2][0] != ':')) {
         fprintf(stderr, "Syntax:\n");
-        fprintf(stderr, "    %s <username> <display>\n", argv[0]);
+        fprintf(stderr, "    %s [-D] <username> <display>\n", argv[0]);
         return EX_USAGE;
     }
 
-    username = argv[1];
-    display = argv[2];
+    username = argv[argc - 2];
+    display = argv[argc - 1];
 
     if (geteuid() != 0) {
         fprintf(stderr, "This program needs to be run as root!\n");
@@ -529,8 +538,10 @@
         return EX_OSERR;
     }
 
-    if (begin_daemon() == -1)
-        return EX_OSERR;
+    if (forking) {
+        if (begin_daemon() == -1)
+            return EX_OSERR;
+    }
 
     openlog("vncsession", LOG_PID, LOG_AUTH);
 
@@ -581,7 +592,8 @@
         fclose(f);
     }
 
-    finish_daemon();
+    if (forking)
+        finish_daemon();
 
     while (1) {
         int status;
--- a/unix/vncserver/vncsession.man.in	2023-07-27 22:03:56.095000000 -0400
+++ b/unix/vncserver/vncsession.man.in	2023-07-27 22:11:53.605000000 -0400
@@ -3,6 +3,7 @@
 vncsession \- start a VNC server
 .SH SYNOPSIS
 .B vncsession
+.RI [-D]
 .RI < username >
 .RI <: display# >
 .SH DESCRIPTION
@@ -16,6 +17,14 @@
 is rarely called directly and is normally started by the system service
 manager.
 
+.SH -D OPTION
+.B vncsession
+by default forks and detaches so it normally is a systemd Type=forking service.
+If the -D option is used, it does not fork and detach. This option is provided
+for use with other types of systemd services such as Type=simple and Type=exec
+and for use with non-systemd system service managers that are not compatible
+with Type=forking services.
+
 .SH FILES
 Several VNC-related files are found in the directory $HOME/.vnc:
 .TP
