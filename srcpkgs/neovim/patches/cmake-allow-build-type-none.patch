Void uses the "None" build type to apply our chosen compile settings.

diff --git a/cmake/Util.cmake b/cmake/Util.cmake
index f09de78..f48f2d0 100644
--- a/cmake/Util.cmake
+++ b/cmake/Util.cmake
@@ -193,7 +193,7 @@ endfunction()
 # Passing CMAKE_BUILD_TYPE for multi-config generators will not only not be
 # used, but also generate a warning for the user.
 function(set_default_buildtype BUILD_TYPE)
-  set(allowableBuildTypes Debug Release MinSizeRel RelWithDebInfo)
+  set(allowableBuildTypes Debug Release MinSizeRel RelWithDebInfo None)
   if(NOT BUILD_TYPE IN_LIST allowableBuildTypes)
     message(FATAL_ERROR "Invalid build type: ${BUILD_TYPE}")
   endif()
diff --git a/runtime/lua/nvim/health.lua b/runtime/lua/nvim/health.lua
index 5bc0319..40a72c1 100644
--- a/runtime/lua/nvim/health.lua
+++ b/runtime/lua/nvim/health.lua
@@ -153,7 +153,7 @@ local function check_performance()
   local buildtype = vim.fn.matchstr(vim.fn.execute('version'), [[\v\cbuild type:?\s*[^\n\r\t ]+]])
   if buildtype == '' then
     health.error('failed to get build type from :version')
-  elseif vim.regex([[\v(MinSizeRel|Release|RelWithDebInfo)]]):match_str(buildtype) then
+  elseif vim.regex([[\v(MinSizeRel|Release|RelWithDebInfo|None)]]):match_str(buildtype) then
     health.ok(buildtype)
   else
     health.info(buildtype)
