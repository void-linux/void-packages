--- a/emote/__init__.py
+++ b/emote/__init__.py
@@ -9,10 +9,7 @@ from gi.repository import Gtk, Keybinder
 from emote import picker, css, emojis, user_data, config

 # Register updated emoji font
-if config.is_snap:
-    manimpango.register_font(f"{config.snap_root}/static/NotoColorEmoji.ttf")
-else:
-    manimpango.register_font("static/NotoColorEmoji.ttf")
+manimpango.register_font(f"{config.static_root}/NotoColorEmoji.ttf")

 settings = Gtk.Settings.get_default()

--- a/emote/config.py
+++ b/emote/config.py
@@ -6,3 +6,13 @@ is_dev = os.environ.get("ENV") == "dev"
 is_snap = os.environ.get("SNAP") is not None
 snap_root = os.environ.get("SNAP")
 is_wayland = os.environ.get("XDG_SESSION_TYPE", "").lower() == "wayland"
+
+if is_snap:
+    static_root = f"{snap_root}/static"
+elif is_dev:
+    static_root = os.path.dirname(os.path.dirname(__file__)) + "/static"
+else:
+    static_root = os.path.dirname(__file__) + "/static"
+
+if not os.path.exists(static_root):
+    raise Exception(f"Directory not found: {static_root}")
--- a/emote/css.py
+++ b/emote/css.py
@@ -11,11 +11,7 @@ def load_css():
     Load associated CSS for the window.
     """
     css_provider = Gtk.CssProvider()
-
-    if config.is_snap:
-        css_provider.load_from_path(f"{config.snap_root}/static/style.css")
-    else:
-        css_provider.load_from_path("static/style.css")
+    css_provider.load_from_path(f"{config.static_root}/style.css")

     screen = Gdk.Screen.get_default()
     styleContext = Gtk.StyleContext()
--- a/emote/emojis.py
+++ b/emote/emojis.py
@@ -236,14 +236,9 @@ def init():
     global all_emojis
     global emojis_by_category

-    filename = (
-        f"{config.snap_root}/static/emojis.csv"
-        if config.is_snap
-        else "static/emojis.csv"
-    )
-
-    with open(filename, newline="") as csvfile:
+    with open(f"{config.static_root}/emojis.csv", newline="") as csvfile:
         reader = csv.DictReader(csvfile)
+        skintone_templates = {}

         for row in reader:
             category = row["group"]
--- a/emote/picker.py
+++ b/emote/picker.py
@@ -318,12 +318,7 @@ class EmojiPicker(Gtk.Window):
         guide_window.connect("destroy", self.on_close_dialog)

     def open_about(self):
-        logo_path = (
-            f"{config.snap_root}/static/logo.svg"
-            if config.is_snap
-            else "static/logo.svg"
-        )
-        logo = Pixbuf.new_from_file(logo_path)
+        logo = Pixbuf.new_from_file(f"{config.static_root}/logo.svg")

         about_dialog = Gtk.AboutDialog(
             transient_for=self,
