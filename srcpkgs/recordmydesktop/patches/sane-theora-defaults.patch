# Use sane theora defaults
# https://bugzilla.redhat.com/show_bug.cgi?id=525155

--- a/src/rmd_initialize_data.c	2009-11-25 10:05:58.708779029 -0500
+++ b/src/rmd_initialize_data.c	2009-11-25 09:28:07.629507987 -0500
@@ -224,7 +224,7 @@ 
     args->channels             = 1;
     args->frequency            = 22050;
     args->buffsize             = 4096;
-    args->v_bitrate            = 45000;
+    args->v_bitrate            = 0;
     args->v_quality            = 63;
     args->s_quality            = 10;
 
--- a/src/rmd_parseargs.c	2009-11-25 10:06:07.409777969 -0500
+++ b/src/rmd_parseargs.c	2009-11-25 09:39:32.786757292 -0500
@@ -104,10 +104,10 @@ 
     "Encoding Options\n"
     "\t--on-the-fly-encoding\tEncode the audio-video data, while recording.\n"
     "\t--v_quality n\t\tA number from 0 to 63 for"
-    " desired encoded video quality(default 63).\n"
+    " desired encoded video quality(default 63).\n\t               (set quality to zero for bitrate controlled usage)\n"
 
-    "\t--v_bitrate n\t\tA number from 45000 to 2000000"
-    " for desired encoded video bitrate(default 45000).\n"
+    "\t--v_bitrate n\t\tA number from 0 to 200000000"
+    " for desired encoded video bitrate(default 0 = not rate controlled).\n"
 
     "\t--s_quality n\t\tDesired audio quality(-1 to 10).\n\n"
 
@@ -327,17 +327,17 @@ 
                  strcmp(argv[i], "-v_bitrate")  == 0) {
             if(i+1<argc){
                 int num=atoi(argv[i+1]);
-                if((num>=45000)&&(num<=2000000))
+                if((num>=0)&&(num<=200000000))
                     arg_return->v_bitrate=num;
                 else{
                     fprintf(stderr,"Argument Usage:"
-                                   " --v_bitrate n(number 45000-2000000)\n");
+                                   " --v_bitrate n(number 0-200000000)\n");
                     return FALSE;
                 }
             }
             else{
                 fprintf(stderr,"Argument Usage:"
-                               " --v_bitrate n(number 45000-2000000)\n");
+                               " --v_bitrate n(number 0-200000000)\n");
                 return FALSE;
             }
             i++;
