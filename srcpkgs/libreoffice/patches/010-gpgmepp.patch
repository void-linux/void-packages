Upstream: no
Description: we should always use full path
 (i.e.  gpgme++/context.h), however those file hierarchy is made
 by installation step, thus libreoffice must use the non-prefix
 for vendored file.
--- a/comphelper/source/misc/docpasswordhelper.cxx
+++ b/comphelper/source/misc/docpasswordhelper.cxx
@@ -39,9 +39,9 @@
 #include <string.h>
 
 #if HAVE_FEATURE_GPGME
-# include <context.h>
-# include <data.h>
-# include <decryptionresult.h>
+# include <gpgme++/context.h>
+# include <gpgme++/data.h>
+# include <gpgme++/decryptionresult.h>
 #endif
 
 using ::com::sun::star::uno::Sequence;
--- a/comphelper/source/misc/storagehelper.cxx
+++ b/comphelper/source/misc/storagehelper.cxx
@@ -59,10 +59,10 @@
 #include <o3tl/string_view.hxx>
 
 #if HAVE_FEATURE_GPGME
-# include <context.h>
-# include <encryptionresult.h>
-# include <key.h>
-# include <data.h>
+# include <gpgme++/context.h>
+# include <gpgme++/encryptionresult.h>
+# include <gpgme++/key.h>
+# include <gpgme++/data.h>
 #endif
 
 using namespace ::com::sun::star;
--- a/configure.ac
+++ b/configure.ac
@@ -12890,7 +12890,7 @@ elif test \( \( "$_os" = "Linux" -o "$_o
         SYSTEM_GPGMEPP=TRUE
 
         # C++ library doesn't come with fancy gpgmepp-config, check for headers the old-fashioned way
-        AC_CHECK_HEADER(gpgme++/gpgmepp_version.h, [ GPGMEPP_CFLAGS=-I/usr/include/gpgme++ ],
+        AC_CHECK_HEADER(gpgme++/gpgmepp_version.h, [],
             [AC_MSG_ERROR([gpgmepp headers not found, install gpgmepp >= 1.14 development package])], [])
         AC_CHECK_HEADER(gpgme.h, [],
             [AC_MSG_ERROR([gpgme headers not found, install gpgme development package])], [])
--- a/xmlsecurity/source/gpg/CertificateImpl.cxx
+++ b/xmlsecurity/source/gpg/CertificateImpl.cxx
@@ -16,8 +16,8 @@
 #include <officecfg/Office/Common.hxx>
 #include <svl/sigstruct.hxx>
 
-#include <context.h>
-#include <data.h>
+#include <gpgme++/context.h>
+#include <gpgme++/data.h>
 
 using namespace css;
 using namespace css::uno;
--- a/xmlsecurity/source/gpg/SEInitializer.cxx
+++ b/xmlsecurity/source/gpg/SEInitializer.cxx
@@ -12,7 +12,7 @@
 #include "SecurityEnvironment.hxx"
 #include "XMLSecurityContext.hxx"
 
-#include <global.h>
+#include <gpgme++/global.h>
 
 namespace com::sun::star::uno
 {
--- a/xmlsecurity/source/gpg/SecurityEnvironment.cxx
+++ b/xmlsecurity/source/gpg/SecurityEnvironment.cxx
@@ -24,8 +24,8 @@
 #include <tools/urlobj.hxx>
 #endif
 
-#include <key.h>
-#include <keylistresult.h>
+#include <gpgme++/key.h>
+#include <gpgme++/keylistresult.h>
 #include <libxml/xmlstring.h>
 #include <xmlsec/base64.h>
 #include <xmlsec/xmlsec.h>
@@ -38,7 +38,7 @@
 #if defined _MSC_VER && defined __clang__
 #pragma clang diagnostic pop
 #endif
-#include <context.h>
+#include <gpgme++/context.h>
 
 using namespace css;
 using namespace css::security;
--- a/xmlsecurity/source/gpg/CertificateImpl.hxx
+++ b/xmlsecurity/source/gpg/CertificateImpl.hxx
@@ -25,7 +25,7 @@
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored "-Wundef"
 #endif
-#include <key.h>
+#include <gpgme++/key.h>
 #if defined _MSC_VER && defined __clang__
 #pragma clang diagnostic pop
 #endif
--- a/xmlsecurity/source/gpg/xmlsignature_gpgimpl.cxx
+++ b/xmlsecurity/source/gpg/xmlsignature_gpgimpl.cxx
@@ -31,10 +31,10 @@
 #if defined _MSC_VER && defined __clang__
 #pragma clang diagnostic pop
 #endif
-#include <context.h>
-#include <data.h>
-#include <signingresult.h>
-#include <importresult.h>
+#include <gpgme++/context.h>
+#include <gpgme++/data.h>
+#include <gpgme++/signingresult.h>
+#include <gpgme++/importresult.h>
 
 #include <xmlelementwrapper_xmlsecimpl.hxx>
 #include <xmlsec/xmlstreamio.hxx>
