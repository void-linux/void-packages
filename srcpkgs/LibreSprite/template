# Template file for 'LibreSprite'
pkgname=LibreSprite
# NOTE: Using older verified commit for clip
_clipcommit=8175b5b941e93313d093dba7c68a905773e9e76b
_fliccommit=876ef60df5fec606f8eb0638ee893e4967db4673
_observablecommit=8e03c3cb060120b25517503e6c1d9072686d1cd3
# NOTE: Using newer commit for undo
_undocommit=c868a0238973f04564253133c1cd3689f9aa3913
_simpleinicommit=9fa7622f41e36105a4c767a7765bb24afec4d6be
# NOTE: Using newer verified commit for duktape
_duktapecommit=6f715553e706b61e611aa4ae8e6fe90626800dae
version=1.1
revision=1
build_style=cmake
build_helper="qemu"
configure_args="-DWITH_DESKTOP_INTEGRATION=ON -DCLIP_TESTS=OFF"
hostmakedepends="pkg-config git"
makedepends="libarchive-devel libpng-devel pixman-devel libcurl-devel SDL2_image-devel tinyxml2-devel zlib-devel SDL2-devel freetype-devel lua54-devel giflib-devel libjpeg-turbo-devel gtest-devel"
depends="desktop-file-utils hicolor-icon-theme"
short_desc="Animated sprite editor & pixel art tool -- GPL2 Aseprite fork"
maintainer="Mihail Ivanchev <contact@ivanchev.net>"
license="GPL-2.0-only"
homepage="https://libresprite.github.io/"
distfiles="https://github.com/LibreSprite/LibreSprite/archive/refs/tags/v${version}.tar.gz
https://github.com/aseprite/clip/archive/${_clipcommit}.tar.gz>clip.tar.gz
https://github.com/aseprite/flic/archive/${_fliccommit}.tar.gz>flic.tar.gz
https://github.com/dacap/observable/archive/${_observablecommit}.tar.gz>observable.tar.gz
https://github.com/aseprite/undo/archive/${_undocommit}.tar.gz>undo.tar.gz
https://github.com/aseprite/simpleini/archive/${_simpleinicommit}.tar.gz>simpleini.tar.gz
https://github.com/LibreSprite/duktape/archive/${_duktapecommit}.tar.gz>duktape.tar.gz"
checksum="5ffbb4c86da9f04921dbafb7f61d8031bc9002b786dc567df86f9d407f96b586
 9870ac989398c09586edbb8451acdab8d150edc34b089848bab25f96d924c53b
 e66ab8d28c630a80a2be2baf260f87481ca7b0d35101e74b3ef131f47989d1a9
 e56c7cb929d237db37a16e48de86dbd6c240cfaa392904d7d95cf4ccb18cdeb2
 98cedb5dd9469f1ac1b08f17cfbfd3e094ecf7e462707db1a6bc0ab2fcdf45d1
 ac06aaef6fb70412270eb9796af538f8486262b864a8c52f34da36571745831d
 711a5cb7e3d663d7673d635a11a3b38fe67cf63b1c9f7eb406ebd107a25b7004"
skip_extraction="clip flic observable undo simpleini duktape"
build_wrksrc=${pkgname}-${version}

post_extract() {
	vsrcextract -C ${build_wrksrc}/src/clip clip.tar.gz
	vsrcextract -C ${build_wrksrc}/src/flic flic.tar.gz
	vsrcextract -C ${build_wrksrc}/src/observable observable.tar.gz
	vsrcextract -C ${build_wrksrc}/src/undo undo.tar.gz
	vsrcextract -C ${build_wrksrc}/third_party/simpleini simpleini.tar.gz
	vsrcextract -C ${build_wrksrc}/third_party/duktape duktape.tar.gz
}

post_patch() {
        # When cross-compiling, the "gen" tool cannot be executed without emulation because
	# it'll be compiled for the target architecture. Instead, we change the absolute path
	# to it to the target "gen" so the add_custom_command would apply the
        # CROSSCOMPILING_EMULATOR property automatically. See:
        # https://cmake.org/cmake/help/latest/command/add_custom_command.html and
        # https://cmake.org/cmake/help/latest/prop_tgt/CROSSCOMPILING_EMULATOR.html
        # for more information.

	vsed -i src/app/CMakeLists.txt -e 's|${CMAKE_BINARY_DIR}/bin/gen|gen|g'
}
