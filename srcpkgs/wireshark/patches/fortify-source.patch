--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -766,21 +766,6 @@ else() # ! MSVC
 		list(APPEND WIRESHARK_COMMON_FLAGS -Qunused-arguments)
 	endif()
 
-	if(NOT CMAKE_BUILD_TYPE STREQUAL "Debug")
-		# _FORTIFY_SOURCE requires -O1 or higher, and the Debug
-		# build type has no optimization
-		if((CMAKE_C_COMPILER_ID STREQUAL "GNU" AND CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL "12.0") OR
-		   (CMAKE_C_COMPILER_ID MATCHES "Clang" AND CMAKE_C_COMPILER_VERSION VERSION_GREATER_EQUAL "9.0"))
-			# On some gcc < 12.0, test_compiler_flag will report that
-			# -D_FORTIFY_SOURCE=3 is valid, but actually trying to compile
-			# with it will give a warning that it has the same effect as
-			# -D_FORTIFY_SOURCE=2
-			list(APPEND WIRESHARK_COMMON_FLAGS
-			-U_FORTIFY_SOURCE	# Run-time buffer overflow detection. For dist like Ubuntu, U_FORTIFY_SOURCE must be input before D_FORTIFY_SOURCE
-			-D_FORTIFY_SOURCE=3				# Fortify sources with compile- and run-time checks for unsafe libc usage and buffer overflows. Requires -O1 or higher
-			)
-		endif()
-	endif()
 
 	# test_compiler_flag doesn't seem to test that a flag is supported on
 	# a cross-compiled target, only for the native architecture. (Thus
