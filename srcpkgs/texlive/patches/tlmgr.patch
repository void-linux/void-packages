Modified from Debian's tlmgr patch.
Src: https://raw.githubusercontent.com/debian-tex/texlive-nonbin/9767c8ba4ea64d671eb98ddff550498cd2ac3d51/texlive-base/debian/patches/debian-tlmgr-usermode.

Modifications:

* Drop Debian specific wording.
* Drop unnessecary manpage changes.
* Change /usr/share path to what we use.

Modified by fosslinux.

--- a/texk/texlive/linked_scripts/texlive/tlmgr.pl
+++ b/texk/texlive/linked_scripts/texlive/tlmgr.pl
@@ -20,7 +20,7 @@ $datrev =~ s/^.*Date: //;
 $datrev =~ s/ \(.*$//;
 $tlmgrversion = "$tlmgrrevision ($datrev)";
 
-our $Master;
+our $Master = "/usr/share/texmf-dist";
 our $loadmediasrcerror;
 our $packagelogfile;
 our $packagelogged;
@@ -39,38 +39,9 @@ END {
 }
 
 BEGIN {
-  $^W = 1;
   # make subprograms (including kpsewhich) have the right path:
-  my $kpsewhichname;
-  if ($^O =~ /^MSWin/i) {
-    # on w32 $0 and __FILE__ point directly to tlmgr.pl; they can be relative
-    $Master = __FILE__;
-    $Master =~ s!\\!/!g;
-    $Master =~ s![^/]*$!../../..!
-      unless ($Master =~ s!/texmf-dist/scripts/texlive/tlmgr\.pl$!!i);
-    $bindir = "$Master/bin/win32";
-    $kpsewhichname = "kpsewhich.exe";
-    # path already set by wrapper batchfile
-  } else {
-    $Master = __FILE__;
-    $Master =~ s,/*[^/]*$,,;
-    $bindir = $Master;
-    $Master = "$Master/../..";
-    # make subprograms (including kpsewhich) have the right path:
-    $ENV{"PATH"} = "$bindir:$ENV{PATH}";
-    $kpsewhichname = "kpsewhich";
-  }
-  if (-r "$bindir/$kpsewhichname") {
-    # if not in bootstrapping mode => kpsewhich exists, so use it to get $Master
-    chomp($Master = `kpsewhich -var-value=SELFAUTOPARENT`);
-  }
-
-  # if we have no directory in which to find our modules,
-  # no point in going on.
-  if (! $Master) {
-    die ("Could not determine directory of tlmgr executable, "
-         . "maybe shared library woes?\nCheck for error messages above");
-  }
+  $bindir = $Master;
+  $ENV{"PATH"} = "$bindir:$ENV{PATH}";
 
   $::installerdir = $Master;  # for config.guess et al., see TLUtils.pm
 
@@ -615,6 +586,13 @@ for the full story.\n";
     tldie("$prg: Try --help if you need it.\n");
   }
 
+  # automatically switch to user mode on Void, and warn
+  if (!$opts{"usermode"} && $action ne "init-usertree") {
+    $opts{"usermode"} = 1;
+    print "WARNING: switching to user mode!\n";
+    print "WARNING: normal mode unsupported on Void Linux.\n";
+  }
+
   #
   # the main tree we will be working on
   $::maintree = $Master;
@@ -6118,7 +6096,9 @@ sub action_postaction {
 # sets up the user tree for tlmgr in user mode
 sub action_init_usertree {
   # init_local_db but do not die if localtlpdb is not found!
-  init_local_db(2);
+  # we don't ship tlpdb in the system, so don't even
+  # try to initialize it.
+  # init_local_db(2);
   my $tlpdb = TeXLive::TLPDB->new;
   my $usertree;
   if ($opts{"usertree"}) {
@@ -6758,7 +6738,11 @@ sub init_local_db {
     if ($should_i_die == 2) {
       return undef;
     } else {
-      die("cannot setup TLPDB in $::maintree");
+      if ($opts{'usermode'}) {
+        die("$prg: user mode not initialized, please run `tlmgr init-usertree`\n");
+      } else {
+        die("cannot setup TLPDB in $::maintree");
+      }
     }
   }
   # setup the programs, for w32 we need the shipped wget/xz etc, so we
