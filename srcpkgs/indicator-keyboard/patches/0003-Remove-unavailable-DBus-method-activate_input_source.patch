From 65db4152bb88101a5ea205bec7e7593e5d24f440 Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Sat, 12 Apr 2014 14:23:53 -0400
Subject: [PATCH 3/6] Remove unavailable DBus method activate_input_source

---
 lib/Makefile.am          |  1 -
 lib/keyboard-plugin.vala | 23 -----------------------
 lib/main.vala            | 29 -----------------------------
 tests/main.vala          | 40 ----------------------------------------
 4 files changed, 93 deletions(-)
 delete mode 100644 lib/keyboard-plugin.vala

diff --git a/lib/Makefile.am b/lib/Makefile.am
index 4e5a86a..7fdbcb0 100644
--- a/lib/Makefile.am
+++ b/lib/Makefile.am
@@ -12,7 +12,6 @@ indicator_keyboard_service_SOURCES = main.vala            \
                                      ibus-menu.vala       \
                                      ibus-panel.vala      \
                                      indicator-menu.vala  \
-                                     keyboard-plugin.vala \
                                      window-stack.vala    \
                                      unity-session.vala   \
                                      unity-greeter.vala
diff --git a/lib/keyboard-plugin.vala b/lib/keyboard-plugin.vala
deleted file mode 100644
index 5ee8ea2..0000000
--- a/lib/keyboard-plugin.vala
+++ /dev/null
@@ -1,23 +0,0 @@
-/*
- * Copyright 2014 Canonical Ltd.
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, version 3 of the License.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
- * Authors: William Hua <william.hua@canonical.com>
- */
-
-[DBus (name="com.canonical.SettingsDaemon.Keyboard.Private")]
-public interface KeyboardPlugin : Object {
-
-	public abstract void activate_input_source (uint index) throws IOError;
-}
diff --git a/lib/main.vala b/lib/main.vala
index eab8d1c..d230d16 100644
--- a/lib/main.vala
+++ b/lib/main.vala
@@ -53,7 +53,6 @@ public class Indicator.Keyboard.Service : Object {
 	private IndicatorMenu? desktop_greeter_menu;
 	private IndicatorMenu? desktop_lockscreen_menu;
 
-	private KeyboardPlugin? keyboard_plugin;
 	private UnitySession? unity_session;
 	private UnityGreeter? unity_greeter;
 	private string? greeter_user;
@@ -110,12 +109,6 @@ public class Indicator.Keyboard.Service : Object {
 			}
 		} else {
 			Bus.watch_name (BusType.SESSION,
-			                "org.gnome.SettingsDaemon.Keyboard",
-			                BusNameWatcherFlags.NONE,
-			                handle_keyboard_name_appeared,
-			                handle_keyboard_name_vanished);
-
-			Bus.watch_name (BusType.SESSION,
 			                "com.canonical.Unity",
 			                BusNameWatcherFlags.NONE,
 			                handle_unity_name_appeared,
@@ -808,14 +801,6 @@ public class Indicator.Keyboard.Service : Object {
 		if (value != null) {
 			((!) active_action).set_state ((!) value);
 			update_indicator_action ();
-
-			if (keyboard_plugin != null) {
-				try {
-					((!) keyboard_plugin).activate_input_source (((!) value).get_uint32 ());
-				} catch (IOError error) {
-					warning ("error: %s", error.message);
-				}
-			}
 		}
 	}
 
@@ -1145,20 +1130,6 @@ public class Indicator.Keyboard.Service : Object {
 	}
 
 	[DBus (visible = false)]
-	private void handle_keyboard_name_appeared (DBusConnection connection, string name, string name_owner) {
-		try {
-			keyboard_plugin = Bus.get_proxy_sync (BusType.SESSION, name, "/org/gnome/SettingsDaemon/Keyboard");
-		} catch (IOError error) {
-			warning ("error: %s", error.message);
-		}
-	}
-
-	[DBus (visible = false)]
-	private void handle_keyboard_name_vanished (DBusConnection connection, string name) {
-		keyboard_plugin = null;
-	}
-
-	[DBus (visible = false)]
 	private void handle_unity_name_appeared (DBusConnection connection, string name, string name_owner) {
 		try {
 			var session = Bus.get_proxy_sync<UnitySession> (BusType.SESSION, name, "/com/canonical/Unity/Session");
diff --git a/tests/main.vala b/tests/main.vala
index e2782d1..2d9a265 100644
--- a/tests/main.vala
+++ b/tests/main.vala
@@ -137,45 +137,6 @@ public class Tests : Object, Fixture {
 		}
 	}
 
-	public void test_activate_input_source () {
-		try {
-			var current = 0;
-			var sources = "[('xkb', 'us'), ('xkb', 'ca+eng'), ('xkb', 'epo'), ('ibus', 'pinyin')]";
-			Process.spawn_command_line_sync (@"gsettings set org.gnome.desktop.input-sources current $current");
-			Process.spawn_command_line_sync (@"gsettings set org.gnome.desktop.input-sources sources \"$sources\"");
-		} catch (SpawnError error) {
-			Test.message ("error: %s", error.message);
-			Test.fail ();
-			return;
-		}
-
-		var action_group = DBusActionGroup.get ((!) _connection,
-		                                        "com.canonical.indicator.keyboard",
-		                                        "/com/canonical/indicator/keyboard");
-		action_group.list_actions ();
-		action_group.activate_action ("current", new Variant.uint32 (2));
-
-		var loop = new MainLoop (null, false);
-		Timeout.add_seconds (TIMEOUT_S, () => { loop.quit (); return false; });
-		loop.run ();
-
-		var state = action_group.get_action_state ("current");
-		var current = state.get_uint32 ();
-		stderr.printf ("current = %u\n", current);
-		assert (current == 2);
-
-		try {
-			string output;
-			Process.spawn_command_line_sync ("gsettings get org.gnome.desktop.input-sources current", out output);
-			stderr.printf ("output = \"%s\"\n", output);
-			assert (strcmp (output, "uint32 2\n") == 0);
-		} catch (SpawnError error) {
-			Test.message ("error: %s", error.message);
-			Test.fail ();
-			return;
-		}
-	}
-
 	public void test_activate_character_map () {
 		var action_group = DBusActionGroup.get ((!) _connection,
 		                                        "com.canonical.indicator.keyboard",
@@ -636,7 +597,6 @@ public int main (string[] args) {
 
 	Test.init (ref args);
 
-	Test.add_data_func ("/indicator-keyboard-service/activate-input-source", Fixture.create<Tests> (Tests.test_activate_input_source));
 	Test.add_data_func ("/indicator-keyboard-service/activate-character-map", Fixture.create<Tests> (Tests.test_activate_character_map));
 	Test.add_data_func ("/indicator-keyboard-service/activate-keyboard-layout-chart", Fixture.create<Tests> (Tests.test_activate_keyboard_layout_chart));
 	Test.add_data_func ("/indicator-keyboard-service/activate-text-entry-settings", Fixture.create<Tests> (Tests.test_activate_text_entry_settings));
-- 
2.9.3

