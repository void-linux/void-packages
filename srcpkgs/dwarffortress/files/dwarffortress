#!/bin/sh
## dwarf fortress wrapper written and maintained by
# Robert Stancil <robert.stancil@mavs.uta.edu>
#
# MIT License
#
# Copyright (c) 2019 Robert Stancil <robert.stancil@mavs.uta.edu>
#
# Modified by: Rutpiv <roger_freitas@live.com> in 2024 to adjust symlink
# creation and preserve existing save data by backing up old directories.
#
# Modified by: Rutpiv <roger_freitas@live.com> in 2025 to add versioning
# for update management, adapting to the fact that dwarfort no longer
# supports symlinks.
# Also ensured backup of version 51 layout where saves were stored in the
# same folder as game files, since from version 52 onward saves moved to
# separate folders, improving user data handling.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##

set -e

usage() {
  printf "Usage:\n %s [-f]\nOptions:\n -f\tForce full recreate of user data\n" "$0"
}

# Default values
_FORCE=no
XDG_BASE="${XDG_DATA_HOME:-$HOME/.local/share}"
DATA_DIR="$XDG_BASE/dwarffortress"
SYS_DIR="/usr/share/dwarffortress"
BIN_PATH="/usr/bin/dwarfort"
LIB_DIR="/usr/lib/dwarffortress/libs"
VERSION_FILE="version.txt"

# Parse options
while getopts "f" opt; do
  case "$opt" in
    f) _FORCE=yes ;;
    *) usage; exit 1 ;;
  esac
done

# Prevent running as root
if [ "$(id -u)" -eq 0 ]; then
  echo "[ERROR] Do not run as root." >&2
  usage
  exit 1
fi

# Ensure system directories exist
if [ ! -d "$SYS_DIR" ] || [ ! -x "$BIN_PATH" ] || [ ! -d "$LIB_DIR" ]; then
  echo "[ERROR] Dwarf Fortress not installed properly." >&2
  exit 1
fi

# Create user data dir if missing
if [ ! -d "$DATA_DIR" ]; then
  _FORCE=yes
fi

# Read system version
if [ ! -r "$SYS_DIR/$VERSION_FILE" ]; then
  echo "[ERROR] Cannot read $SYS_DIR/$VERSION_FILE" >&2
  exit 1
fi
SYS_VERSION=$(cat "$SYS_DIR/$VERSION_FILE")

# Read user version if present
if [ -r "$DATA_DIR/$VERSION_FILE" ]; then
  USER_VERSION=$(cat "$DATA_DIR/$VERSION_FILE")
else
  USER_VERSION=""
fi

# Determine if we need to rebuild
if [ "$_FORCE" = "yes" ] || [ "$SYS_VERSION" != "$USER_VERSION" ]; then
  TIMESTAMP=$(date +%Y%m%d%H%M%S)

  if [ "$_FORCE" = "yes" ] && [ "$SYS_VERSION" = "$USER_VERSION" ]; then
    echo "[INFO] Forcing reinstall of user data (version: $SYS_VERSION)"
  else
    echo "[INFO] Updating user data: ${USER_VERSION:-none} â†’ $SYS_VERSION"
  fi

  # Backup legacy layout if present
  if [ -d "$DATA_DIR" ]; then
    if [ -f "$DATA_DIR/df" ] || [ -d "$DATA_DIR/save" ]; then
      BACKUP_PATH="$XDG_BASE/dwarffortress_legacy_backup_$TIMESTAMP.tar.gz"
      tar -czf "$BACKUP_PATH" -C "$XDG_BASE" dwarffortress
      echo "[INFO] Legacy layout backed up to $BACKUP_PATH"
    fi
  fi

  # Recreate skeleton
  rm -rf "$DATA_DIR"
  cp -r "$SYS_DIR" "$DATA_DIR"
  for lib in "$LIB_DIR"/*; do
    ln -sf "$lib" "$DATA_DIR"
  done
  cp "$BIN_PATH" "$DATA_DIR"
fi

echo "[INFO] Launching Dwarf Fortress..."
exec "$DATA_DIR/run_df"
