# Template file for 'kodi'
pkgname=kodi
version=20.2
revision=1
_codename="Nexus"
build_style=cmake
configure_args="-DWITH_FFMPEG=/usr -DENABLE_LDGOLD=OFF
 -DAPP_RENDER_SYSTEM=gl -DENABLE_INTERNAL_CROSSGUID=ON
 -DCROSSGUID_URL=${XBPS_SRCDISTDIR}/${pkgname}-${version}/crossguid-ca1bf4b810e2d188d04cb6286f957008ee1b7681.tar.gz
 -Dlibdvdcss_URL=${XBPS_SRCDISTDIR}/${pkgname}-${version}/libdvdcss-1.4.3-Next-Nexus-Alpha2-2.tar.gz
 -Dlibdvdread_URL=${XBPS_SRCDISTDIR}/${pkgname}-${version}/libdvdread-6.1.3-Next-Nexus-Alpha2-2.tar.gz
 -Dlibdvdnav_URL=${XBPS_SRCDISTDIR}/${pkgname}-${version}/libdvdnav-6.1.1-Next-Nexus-Alpha2-2.tar.gz"
make_build_target="all"
short_desc="Software media player and entertainment hub for digital media"
maintainer="Orphaned <orphan@voidlinux.org>"
license="GPL-2.0-or-later"
homepage="http://www.kodi.tv"
distfiles="https://github.com/xbmc/xbmc/archive/${version}-${_codename}.tar.gz"
checksum=4e81abf81172812bc8891f69a7a80a2b846298cecaae7b5009725e28a3040c23
# Add CrossGUID dependency
distfiles+=" https://mirrors.xmission.com/kodi/build-deps/sources/crossguid-ca1bf4b810e2d188d04cb6286f957008ee1b7681.tar.gz"
checksum+=" 6be27e0b3a4907f0cd3cfadec255ee1b925569e1bd06e67a4d2f4267299b69c4"
# Add libdvdcss dependency
distfiles+=" https://github.com/xbmc/libdvdcss/archive/1.4.3-Next-Nexus-Alpha2-2.tar.gz>libdvdcss-1.4.3-Next-Nexus-Alpha2-2.tar.gz"
checksum+=" f38c4a4e7a4f4da6d8e83b8852489aa3bb6588a915dc41f5ee89d9aad305a06e"
# Add libdvdread dependency
distfiles+=" https://github.com/xbmc/libdvdread/archive/6.1.3-Next-Nexus-Alpha2-2.tar.gz>libdvdread-6.1.3-Next-Nexus-Alpha2-2.tar.gz"
checksum+=" 719130091e3adc9725ba72df808f24a14737a009dca5a4c38c601c0c76449b62"
# Add libdvdnav dependency
distfiles+=" https://github.com/xbmc/libdvdnav/archive/6.1.1-Next-Nexus-Alpha2-2.tar.gz>libdvdnav-6.1.1-Next-Nexus-Alpha2-2.tar.gz"
checksum+=" 584f62a3896794408d46368e2ecf2c6217ab9c676ce85921b2d68b8961f49dfc"
skip_extraction="crossguid-ca1bf4b810e2d188d04cb6286f957008ee1b7681.tar.gz libdvdcss-1.4.3-Next-Nexus-Alpha2-2.tar.gz
 libdvdread-6.1.3-Next-Nexus-Alpha2-2.tar.gz libdvdnav-6.1.1-Next-Nexus-Alpha2-2.tar.gz"
python_version=3
LDFLAGS="-Wl,-z,stack-size=1048576"

if [ "$XBPS_WORDSIZE" = 32 ]; then
	LDFLAGS+=" -Wl,--no-keep-memory"
fi

lib32disabled=yes
archs="i686* x86_64* aarch64* ppc64* armv6l* armv7l*"

hostmakedepends="
 automake libtool pkg-config gperf cmake gettext zip unzip nasm yasm python3-devel
 gettext-devel libltdl-devel curl flatbuffers swig openjdk11 which wayland-scanner++"
makedepends="
 eudev-libudev-devel pcre-devel expat-devel libpng-devel libjpeg-turbo-devel
 libXrandr-devel avahi-libs-devel pulseaudio-devel samba-devel tiff-devel
 libmariadbclient-devel libmpeg2-devel wavpack-devel zlib-devel lzo-devel
 libXmu-devel glew-devel fribidi-devel sqlite-devel libcdio-devel freetype-devel
 jasper-devel faac-devel SDL2_image-devel faad2-devel libmodplug-devel openssl-devel
 libmad-devel fontconfig-devel libXinerama-devel libsamplerate-devel libmms-devel
 enca-devel boost-devel libcurl-devel libva-devel libvdpau-devel libass-devel
 libbluetooth-devel yajl-devel libplist-devel librtmp-devel tinyxml-devel
 taglib-devel libcap-devel lame-devel libbluray-devel libnfs-devel ffmpeg-devel
 giflib-devel libxslt-devel gnutls-devel libssh-devel libmicrohttpd-devel
 libcec-devel dcadec-devel flatbuffers-devel fmt-devel lcms2-devel
 libfstrcmp-devel rapidjson libcdio-paranoia spdlog libwaylandpp-devel
 libinput-devel libdav1d-devel gtest-devel python3-devel"

# The following dependencies are dlopen(3)ed.
depends="libbluray libmad libvorbis libcurl libflac libmodplug libass libmpeg2
 lame librtmp libnfs>=1.9.7 libplist>=1.12"
depends+=" glxinfo hicolor-icon-theme desktop-file-utils xdpyinfo"

# Disable this test on all architectures
# https://github.com/void-linux/void-packages/commit/3c0332ab330e30a2c280de2258ed9bf60a9c2e09/checks/2101961295/logs
_gtest_filter="-TestCPUInfo.GetCPUFrequency"
_gtest_filter+=":TestWebServer.CanGetCachedFileWithOlderIfModifiedSince"
_gtest_filter+=":TestWebServer.CanGetCachedFileWithNewerIfModifiedSinceForcingNoCache"
_gtest_filter+=":TestWebServer.CanGetCachedFileWithExactIfUnmodifiedSince"
_gtest_filter+=":TestWebServer.CanGetCachedFileWithNewerIfUnmodifiedSince"
_gtest_filter+=":TestWebServer.CanGetRangedFileRange0_First"
_gtest_filter+=":TestWebServer.CanGetRangedFileRangeFirst_Second"
_gtest_filter+=":TestWebServer.CanGetRangedFileRange_Last"
_gtest_filter+=":TestWebServer.CanGetRangedFileRangeFirstSecond"
_gtest_filter+=":TestWebServer.CanGetRangedFileRangeFirstSecondLast"

case "$XBPS_TARGET_MACHINE" in
	i686)
		# Additionaly disable these tests on i686 architecutre
		# https://github.com/void-linux/void-packages/commit/3c0332ab330e30a2c280de2258ed9bf60a9c2e09/checks/2101961301/logs
		_gtest_filter+=":TestDateTime.SetFromDBTime"
		_gtest_filter+=":TestDateTime.SetDateTime"
		_gtest_filter+=":TestDateTime.Reset"
		;;
esac

if [ -z "$CROSS_BUILD" ]; then
	make_build_target+=" kodi-test"
else
	hostmakedepends+=" libmariadbclient-devel SDL2_image-devel lzo-devel
	 libwaylandpp-devel"
fi

if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
	configure_args+=" -DCMAKE_EXE_LINKER_FLAGS=-latomic"
	LDFLAGS+=" -latomic"
fi

pre_configure() {
	if [ "$CROSS_BUILD" ]; then
	find -type f | \
		grep "configure\.ac\|Makefile\|cmake\|config\.site" | \
		xargs sed -i  -e "s;-isystem;-I;g"
	fi

	. /etc/profile.d/openjdk.sh

	# Build tools needed to run on the host
	if [ "$CROSS_BUILD" ]; then
		for i in JsonSchemaBuilder TexturePacker; do
			CC= LD= CXX= LDFLAGS= CFLAGS= CXXFLAGS= \
				make -C tools/depends/native/$i native/$i
			mv tools/depends/native/$i/native/$i tools/$i
			make -C tools/depends/native/$i distclean
		done
		configure_args+="
		 -DWITH_JSONSCHEMABUILDER:PATH=$wrksrc/tools/JsonSchemaBuilder
		 -DWITH_TEXTUREPACKER:PATH=$wrksrc/tools/TexturePacker"
	fi
}

do_check() {
	./build/kodi-test --gtest_filter="${_gtest_filter}"
}

kodi-devel_package() {
	short_desc+=" - development files"
	depends="${sourcepkg}>=${version}_${revision}"
	pkg_install() {
		vmove usr/include
		vmove usr/share/kodi/cmake
	}
}

kodi-rpi_package() {
	build_style=meta
	short_desc+=" (transitional dummy package)"
	depends="${sourcepkg}>=${version}_${revision}"
}
