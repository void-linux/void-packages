# Template file for 'nginx-mod-brotli'
pkgname=nginx-mod-brotli
version=0.1.4
revision=1
_nginx_version=1.18.0
create_wrksrc=yes
build_wrksrc="nginx-${_nginx_version}"
build_style=gnu-makefile
make_build_args="modules"
makedepends="pcre-devel brotli-devel"
depends="nginx"
short_desc="Nginx module for Brotli compression"
maintainer="Joel Beckmeyer <joel@beckmeyer.us>"
license="BSD-2-Clause"
homepage="https://github.com/GetPageSpeed/ngx_brotli"
distfiles="https://nginx.org/download/nginx-${_nginx_version}.tar.gz
 https://github.com/GetPageSpeed/ngx_brotli/archive/v${version}.tar.gz"
checksum="4c373e7ab5bf91d34a4f11a0c9496561061ba5eee6020db272a17a7228d35f99
 190f5435685ec064c1264825f6f8611d94d5f2753f1ade653a703ca8525bb4a4"

if [ "$CROSS_BUILD" ]; then
	hostmakedepends="${makedepends}"
fi

do_configure() {
	cd ${wrksrc}/${build_wrksrc}
	if [ "$CROSS_BUILD" ]; then
		# fake configure run on host
		unset CC CPP LD CFLAGS CPPFLAGS LDFLAGS
	fi

	./configure --with-compat \
		--add-dynamic-module=../ngx_brotli-${version}
}

pre_build() {
	if [ "$CROSS_BUILD" ]; then
		case "$XBPS_TARGET_MACHINE" in
			arm*) cp "${FILESDIR}/ngx_auto_config.h.armv6l" objs/ngx_auto_config.h;;
			aarch64*) cp "${FILESDIR}/ngx_auto_config.h.aarch64" objs/ngx_auto_config.h;;
		esac
	fi

	sed -i 's/-lcrypt/$(LDFLAGS) &/' objs/Makefile
}

do_install() {
	vmkdir usr/lib/nginx
	vinstall objs/ngx_http_brotli_filter_module.so 644 usr/lib/nginx
	vinstall objs/ngx_http_brotli_static_module.so 644 usr/lib/nginx

	vlicense LICENSE
}
