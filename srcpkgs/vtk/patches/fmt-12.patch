--- a/ThirdParty/ioss/vtkioss/Ioss_Utils.C
+++ b/ThirdParty/ioss/vtkioss/Ioss_Utils.C
@@ -162,13 +162,15 @@ std::ostream &Ioss::Utils::get_debug_str
 void Ioss::Utils::time_and_date(char *time_string, char *date_string, size_t length)
 {
   std::time_t t    = std::time(nullptr);
-  std::string time = fmt::format("{:%H:%M:%S}", fmt::localtime(t));
+  std::tm tm = { };
+  localtime_r(&t, &tm);
+  std::string time = fmt::format("{:%H:%M:%S}", tm);
   std::string date;
   if (length >= 10) {
-    date = fmt::format("{:%Y/%m/%d}", fmt::localtime(t));
+    date = fmt::format("{:%Y/%m/%d}", tm);
   }
   else {
-    date = fmt::format("{:%y/%m/%d}", fmt::localtime(t));
+    date = fmt::format("{:%y/%m/%d}", tm);
   }
   copy_string(time_string, time, 9);
   copy_string(date_string, date, length + 1);
--- a/ThirdParty/ioss/vtkioss/cgns/Iocgns_Utils.C
+++ b/ThirdParty/ioss/vtkioss/cgns/Iocgns_Utils.C
@@ -1076,8 +1076,10 @@ size_t Iocgns::Utils::common_write_metad
 
   CGERR(cg_goto(file_ptr, base, "end"));
   std::time_t t    = std::time(nullptr);
-  std::string date = fmt::format("{:%Y/%m/%d}", fmt::localtime(t));
-  std::string time = fmt::format("{:%H:%M:%S}", fmt::localtime(t));
+  std::tm tm = {};
+  localtime_r(&t, &tm);
+  std::string date = fmt::format("{:%Y/%m/%d}", tm);
+  std::string time = fmt::format("{:%H:%M:%S}", tm);
 
   std::string code_version = region.get_optional_property("code_version", "unknown");
   std::string code_name    = region.get_optional_property("code_name", "unknown");
