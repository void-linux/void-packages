diff -up chromium-122.0.6261.29/components/autofill/core/common/unique_ids.h.me chromium-122.0.6261.29/components/autofill/core/common/unique_ids.h
--- chromium-122.0.6261.29/components/autofill/core/common/unique_ids.h.me	2024-02-13 13:07:24.982184485 +0100
+++ chromium-122.0.6261.29/components/autofill/core/common/unique_ids.h	2024-02-13 13:07:45.510551589 +0100
@@ -137,7 +137,7 @@ struct GlobalId {
 
   friend constexpr auto operator<=>(const GlobalId<RendererId>& lhs,
                                     const GlobalId<RendererId>& rhs) = default;
-  friend constexpr bool operator==(const GlobalId<RendererId>& lhs,
+  friend bool operator==(const GlobalId<RendererId>& lhs,
                                    const GlobalId<RendererId>& rhs) = default;
 };
 
diff -up chromium-122.0.6261.29/base/types/strong_alias.h.me chromium-122.0.6261.29/base/types/strong_alias.h
--- chromium-122.0.6261.29/base/types/strong_alias.h.me	2024-02-13 14:13:20.311374288 +0100
+++ chromium-122.0.6261.29/base/types/strong_alias.h	2024-02-13 12:30:38.596913951 +0100
@@ -110,7 +110,7 @@ class StrongAlias {
   // a `StrongAlias<W>`.
   friend constexpr auto operator<=>(const StrongAlias& lhs,
                                     const StrongAlias& rhs) = default;
-  friend constexpr bool operator==(const StrongAlias& lhs,
+  friend bool operator==(const StrongAlias& lhs,
                                    const StrongAlias& rhs) = default;
 
   // Hasher to use in std::unordered_map, std::unordered_set, etc.
diff -up chromium-122.0.6261.29/components/performance_manager/resource_attribution/query_params.h.constexpr chromium-122.0.6261.29/components/performance_manager/resource_attribution/query_params.h
--- chromium-122.0.6261.29/components/performance_manager/resource_attribution/query_params.h.constexpr	2024-02-07 19:49:31.000000000 +0100
+++ chromium-122.0.6261.29/components/performance_manager/resource_attribution/query_params.h	2024-02-13 11:12:52.913338699 +0100
@@ -67,7 +67,7 @@ struct QueryParams {
   QueryParams(const QueryParams& other);
   QueryParams& operator=(const QueryParams& other);
 
-  friend constexpr bool operator==(const QueryParams&,
+  friend bool operator==(const QueryParams&,
                                    const QueryParams&) = default;
 
   // Resource types to measure.
diff -up chromium-123.0.6312.46/components/performance_manager/resource_attribution/context_collection.h.me chromium-123.0.6312.46/components/performance_manager/resource_attribution/context_collection.h
--- chromium-123.0.6312.46/components/performance_manager/resource_attribution/context_collection.h.me	2024-03-17 11:57:22.097161565 +0100
+++ chromium-123.0.6312.46/components/performance_manager/resource_attribution/context_collection.h	2024-03-17 22:18:25.442101825 +0100
@@ -28,7 +28,7 @@ class ContextCollection {
   ContextCollection(const ContextCollection& other);
   ContextCollection& operator=(const ContextCollection& other);
 
-  friend constexpr bool operator==(const ContextCollection&,
+  friend bool operator==(const ContextCollection&,
                                    const ContextCollection&) = default;
 
   // Adds `context` to the collection.
diff -up chromium-123.0.6312.46/components/autofill/core/browser/metrics/log_event.h.me chromium-123.0.6312.46/components/autofill/core/browser/metrics/log_event.h
--- chromium-123.0.6312.46/components/autofill/core/browser/metrics/log_event.h.me	2024-03-16 23:38:10.437128249 +0100
+++ chromium-123.0.6312.46/components/autofill/core/browser/metrics/log_event.h	2024-03-16 23:59:50.868080652 +0100
@@ -57,7 +57,7 @@ struct IsRequired {
   // This function is not defined and consteval. Therefore, any evaluation will
   // fail and fail at compile time.
   template <typename T>
-  consteval operator T();  // NOLINT
+  operator T();  // NOLINT
 };
 
 }  // namespace internal
