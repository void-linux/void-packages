Patch-Source: https://github.com/archlinux/svntogit-packages/blob/79b774aedeaecd4d31b2adb84e3e4b901dc980aa/trunk/download-bubble-typename.patch
--
diff --git a/chrome/browser/download/bubble/download_bubble_update_service.cc b/chrome/browser/download/bubble/download_bubble_update_service.cc
index 13460309d0e..a18d2f8a272 100644
--- a/chrome/browser/download/bubble/download_bubble_update_service.cc
+++ b/chrome/browser/download/bubble/download_bubble_update_service.cc
@@ -87,7 +87,7 @@ ItemSortKey GetSortKey(const Item& item) {
 // Helper to get an iterator to the last element in the cache. The cache
 // must not be empty.
 template <typename Item>
-SortedItems<Item>::iterator GetLastIter(SortedItems<Item>& cache) {
+typename SortedItems<Item>::iterator GetLastIter(SortedItems<Item>& cache) {
   CHECK(!cache.empty());
   auto it = cache.end();
   return std::prev(it);
@@ -656,9 +656,9 @@ bool DownloadBubbleUpdateService::RemoveItemFromCacheImpl(
 }
 
 template <typename Id, typename Item>
-SortedItems<Item>::iterator
+typename SortedItems<Item>::iterator
 DownloadBubbleUpdateService::RemoveItemFromCacheByIter(
-    SortedItems<Item>::iterator iter,
+    typename SortedItems<Item>::iterator iter,
     SortedItems<Item>& cache,
     IterMap<Id, Item>& iter_map) {
   CHECK(iter != cache.end());
diff --git a/chrome/browser/download/bubble/download_bubble_update_service.h b/chrome/browser/download/bubble/download_bubble_update_service.h
index 4c3c0bc1193..38048873aa9 100644
--- a/chrome/browser/download/bubble/download_bubble_update_service.h
+++ b/chrome/browser/download/bubble/download_bubble_update_service.h
@@ -179,8 +179,8 @@ class DownloadBubbleUpdateService
 
   // Removes item if we already have the iterator to it. Returns next iterator.
   template <typename Id, typename Item>
-  SortedItems<Item>::iterator RemoveItemFromCacheByIter(
-      SortedItems<Item>::iterator iter,
+  typename SortedItems<Item>::iterator RemoveItemFromCacheByIter(
+      typename SortedItems<Item>::iterator iter,
       SortedItems<Item>& cache,
       IterMap<Id, Item>& iter_map);
 
