diff -up chromium-120.0.6099.56/base/metrics/persistent_histogram_allocator.cc.no_matching_constructor chromium-120.0.6099.56/base/metrics/persistent_histogram_allocator.cc
--- chromium-120.0.6099.56/base/metrics/persistent_histogram_allocator.cc.no_matching_constructor	2023-11-29 22:39:40.000000000 +0100
+++ chromium-120.0.6099.56/base/metrics/persistent_histogram_allocator.cc	2023-12-03 17:31:25.748420189 +0100
@@ -218,13 +218,13 @@ PersistentSparseHistogramDataManager::Lo
     // The sample-record could be for any sparse histogram. Add the reference
     // to the appropriate collection for later use.
     if (found_id == match_id) {
-      found_records.emplace_back(ref, value);
+      found_records.emplace_back() = {ref, value};
       found = true;
     } else {
       std::vector<ReferenceAndSample>* samples =
           GetSampleMapRecordsWhileLocked(found_id);
       CHECK(samples);
-      samples->emplace_back(ref, value);
+      samples->emplace_back() = {ref, value};
     }
   }
 
diff -up chromium-120.0.6099.56/base/trace_event/trace_log.cc.no_matching_constructor chromium-120.0.6099.56/base/trace_event/trace_log.cc
--- chromium-120.0.6099.56/base/trace_event/trace_log.cc.no_matching_constructor	2023-11-29 22:39:40.000000000 +0100
+++ chromium-120.0.6099.56/base/trace_event/trace_log.cc	2023-12-03 17:31:25.749420208 +0100
@@ -2191,8 +2191,8 @@ void TraceLog::SetTraceBufferForTesting(
 #if BUILDFLAG(USE_PERFETTO_CLIENT_LIBRARY)
 void TraceLog::OnSetup(const perfetto::DataSourceBase::SetupArgs& args) {
   AutoLock lock(track_event_lock_);
-  track_event_sessions_.emplace_back(args.internal_instance_index, *args.config,
-                                     args.backend_type);
+  track_event_sessions_.emplace_back() = {args.internal_instance_index, *args.config,
+                                     args.backend_type};
 }
 
 void TraceLog::OnStart(const perfetto::DataSourceBase::StartArgs&) {
diff -up chromium-120.0.6099.56/chrome/browser/content_settings/one_time_permission_provider.cc.no_matching_constructor chromium-120.0.6099.56/chrome/browser/content_settings/one_time_permission_provider.cc
--- chromium-120.0.6099.56/chrome/browser/content_settings/one_time_permission_provider.cc.no_matching_constructor	2023-11-29 22:39:47.000000000 +0100
+++ chromium-120.0.6099.56/chrome/browser/content_settings/one_time_permission_provider.cc	2023-12-03 17:31:25.749420208 +0100
@@ -226,8 +226,8 @@ void OneTimePermissionProvider::OnSuspen
 
       while (rule_iterator && rule_iterator->HasNext()) {
         auto rule = rule_iterator->Next();
-        patterns_to_delete.emplace_back(setting_type, rule->primary_pattern,
-                                        rule->secondary_pattern);
+        patterns_to_delete.emplace_back() = {setting_type, rule->primary_pattern,
+                                        rule->secondary_pattern};
         permissions::PermissionUmaUtil::RecordOneTimePermissionEvent(
             setting_type,
             permissions::OneTimePermissionEvent::EXPIRED_ON_SUSPEND);
@@ -329,8 +329,8 @@ void OneTimePermissionProvider::DeleteEn
     auto rule = rule_iterator->Next();
     if (rule->primary_pattern.Matches(origin_gurl) &&
         rule->secondary_pattern.Matches(origin_gurl)) {
-      patterns_to_delete.emplace_back(
-          content_setting_type, rule->primary_pattern, rule->secondary_pattern);
+      patterns_to_delete.emplace_back() = {
+          content_setting_type, rule->primary_pattern, rule->secondary_pattern};
       permissions::PermissionUmaUtil::RecordOneTimePermissionEvent(
           content_setting_type, trigger_event);
     }
diff -up chromium-120.0.6099.56/chrome/browser/enterprise/profile_management/profile_management_navigation_throttle.cc.no_matching_constructor chromium-120.0.6099.56/chrome/browser/enterprise/profile_management/profile_management_navigation_throttle.cc
--- chromium-120.0.6099.56/chrome/browser/enterprise/profile_management/profile_management_navigation_throttle.cc.no_matching_constructor	2023-11-29 22:39:48.000000000 +0100
+++ chromium-120.0.6099.56/chrome/browser/enterprise/profile_management/profile_management_navigation_throttle.cc	2023-12-03 17:31:25.749420208 +0100
@@ -67,8 +67,8 @@ base::flat_map<std::string, SAMLProfileA
   // TODO(crbug.com/1445072): Add actual domains with attribute names.
   profile_attributes->insert(std::make_pair(
       "supported.test",
-      SAMLProfileAttributes("placeholderName", "placeholderDomain",
-                            "placeholderToken")));
+      SAMLProfileAttributes{"placeholderName", "placeholderDomain",
+                            "placeholderToken"}));
 
   // Extract domains and attributes from the command line switch.
   const base::CommandLine& command_line =
diff -up chromium-120.0.6099.56/chrome/browser/ui/omnibox/chrome_omnibox_client.cc.no_matching_constructor chromium-120.0.6099.56/chrome/browser/ui/omnibox/chrome_omnibox_client.cc
--- chromium-120.0.6099.56/chrome/browser/ui/omnibox/chrome_omnibox_client.cc.no_matching_constructor	2023-11-29 22:39:52.000000000 +0100
+++ chromium-120.0.6099.56/chrome/browser/ui/omnibox/chrome_omnibox_client.cc	2023-12-03 17:31:25.749420208 +0100
@@ -474,10 +474,10 @@ void ChromeOmniboxClient::OnAutocomplete
               alternative_nav_match);
 
   // Store the details necessary to open the omnibox match via browser commands.
-  location_bar_->set_navigation_params(LocationBar::NavigationParams(
+  location_bar_->set_navigation_params(LocationBar::NavigationParams{
       destination_url, disposition, transition, match_selection_timestamp,
       destination_url_entered_without_scheme,
-      destination_url_entered_with_http_scheme));
+      destination_url_entered_with_http_scheme});
 
   if (browser_) {
     auto navigation = chrome::OpenCurrentURL(browser_);
diff -up chromium-120.0.6099.56/chrome/browser/ui/safety_hub/menu_notification_service.cc.no_matching_constructor chromium-120.0.6099.56/chrome/browser/ui/safety_hub/menu_notification_service.cc
--- chromium-120.0.6099.56/chrome/browser/ui/safety_hub/menu_notification_service.cc.no_matching_constructor	2023-11-29 22:39:52.000000000 +0100
+++ chromium-120.0.6099.56/chrome/browser/ui/safety_hub/menu_notification_service.cc	2023-12-03 17:31:25.756420342 +0100
@@ -148,8 +148,8 @@ SafetyHubMenuNotificationService::GetNot
   // The information related to showing the notification needs to be persisted
   // as well.
   SaveNotificationsToPrefs();
-  return MenuNotificationEntry(notification_to_show->GetNotificationCommandId(),
-                               notification_to_show->GetNotificationString());
+  return MenuNotificationEntry{notification_to_show->GetNotificationCommandId(),
+                               notification_to_show->GetNotificationString()};
 }
 
 absl::optional<ResultMap>
diff -up chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_ask_view.cc.no_matching_constructor chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_ask_view.cc
--- chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_ask_view.cc.no_matching_constructor	2023-11-29 22:39:53.000000000 +0100
+++ chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_ask_view.cc	2023-12-03 17:31:25.749420208 +0100
@@ -55,12 +55,12 @@ std::vector<EmbeddedPermissionPromptAskV
 EmbeddedPermissionPromptAskView::GetButtonsConfiguration() const {
   std::vector<ButtonConfiguration> buttons;
   if (base::FeatureList::IsEnabled(permissions::features::kOneTimePermission)) {
-    buttons.emplace_back(
+    buttons.emplace_back() = {
         l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW_THIS_TIME),
-        ButtonType::kAllowThisTime, ui::ButtonStyle::kTonal);
+        ButtonType::kAllowThisTime, ui::ButtonStyle::kTonal};
   }
-  buttons.emplace_back(l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW),
-                       ButtonType::kAllow, ui::ButtonStyle::kTonal);
+  buttons.emplace_back() = {l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW),
+                       ButtonType::kAllow, ui::ButtonStyle::kTonal};
   return buttons;
 }
 
diff -up chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_base_view.h.no_matching_constructor chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_base_view.h
--- chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_base_view.h.no_matching_constructor	2023-11-29 22:39:53.000000000 +0100
+++ chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_base_view.h	2023-12-03 17:31:25.750420227 +0100
@@ -86,6 +86,7 @@ class EmbeddedPermissionPromptBaseView :
   struct RequestLineConfiguration {
     const raw_ptr<const gfx::VectorIcon> icon;
     std::u16string message;
+    RequestLineConfiguration(auto i, auto m) : icon(i), message(m) { }
   };
 
   struct ButtonConfiguration {
diff -up chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_policy_view.cc.no_matching_constructor chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_policy_view.cc
--- chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_policy_view.cc.no_matching_constructor	2023-11-29 22:39:53.000000000 +0100
+++ chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_policy_view.cc	2023-12-03 17:31:25.750420227 +0100
@@ -48,8 +48,8 @@ EmbeddedPermissionPromptPolicyView::GetR
 std::vector<EmbeddedPermissionPromptPolicyView::ButtonConfiguration>
 EmbeddedPermissionPromptPolicyView::GetButtonsConfiguration() const {
   std::vector<ButtonConfiguration> buttons;
-  buttons.emplace_back(l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_OK_LABEL),
-                       ButtonType::kPolicyOK, ui::ButtonStyle::kTonal);
+  buttons.emplace_back() = {l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_OK_LABEL),
+                       ButtonType::kPolicyOK, ui::ButtonStyle::kTonal};
   return buttons;
 }
 
diff -up chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_denied_view.cc.no_matching_constructor chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_denied_view.cc
--- chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_denied_view.cc.no_matching_constructor	2023-11-29 22:39:53.000000000 +0100
+++ chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_denied_view.cc	2023-12-03 17:31:25.756420342 +0100
@@ -63,18 +63,18 @@ EmbeddedPermissionPromptPreviouslyDenied
 std::vector<EmbeddedPermissionPromptPreviouslyDeniedView::ButtonConfiguration>
 EmbeddedPermissionPromptPreviouslyDeniedView::GetButtonsConfiguration() const {
   std::vector<ButtonConfiguration> buttons;
-  buttons.emplace_back(
+  buttons.emplace_back() = {
       l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_CONTINUE_NOT_ALLOWING),
-      ButtonType::kContinueNotAllowing, ui::ButtonStyle::kTonal);
+      ButtonType::kContinueNotAllowing, ui::ButtonStyle::kTonal};
 
   if (base::FeatureList::IsEnabled(permissions::features::kOneTimePermission)) {
-    buttons.emplace_back(
+    buttons.emplace_back() = {
         l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW_THIS_TIME),
-        ButtonType::kAllowThisTime, ui::ButtonStyle::kTonal);
+        ButtonType::kAllowThisTime, ui::ButtonStyle::kTonal};
   } else {
-    buttons.emplace_back(
+    buttons.emplace_back() = {
         l10n_util::GetStringUTF16(IDS_PERMISSION_ALLOW_THIS_TIME),
-        ButtonType::kAllow, ui::ButtonStyle::kTonal);
+        ButtonType::kAllow, ui::ButtonStyle::kTonal};
   }
   return buttons;
 }
diff -up chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_granted_view.cc.no_matching_constructor chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_granted_view.cc
--- chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_granted_view.cc.no_matching_constructor	2023-11-29 22:39:53.000000000 +0100
+++ chromium-120.0.6099.56/chrome/browser/ui/views/permissions/embedded_permission_prompt_previously_granted_view.cc	2023-12-03 17:31:25.750420227 +0100
@@ -57,13 +57,13 @@ EmbeddedPermissionPromptPreviouslyGrante
 std::vector<EmbeddedPermissionPromptPreviouslyGrantedView::ButtonConfiguration>
 EmbeddedPermissionPromptPreviouslyGrantedView::GetButtonsConfiguration() const {
   std::vector<ButtonConfiguration> buttons;
-  buttons.emplace_back(
+  buttons.emplace_back() = {
       l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_CONTINUE_ALLOWING),
-      ButtonType::kContinueAllowing, ui::ButtonStyle::kTonal);
+      ButtonType::kContinueAllowing, ui::ButtonStyle::kTonal};
 
-  buttons.emplace_back(
+  buttons.emplace_back() = {
       l10n_util::GetStringUTF16(IDS_EMBEDDED_PROMPT_STOP_ALLOWING),
-      ButtonType::kStopAllowing, ui::ButtonStyle::kTonal);
+      ButtonType::kStopAllowing, ui::ButtonStyle::kTonal};
   return buttons;
 }
 
diff -up chromium-120.0.6099.56/chrome/test/chromedriver/capabilities.cc.no_matching_constructor chromium-120.0.6099.56/chrome/test/chromedriver/capabilities.cc
--- chromium-120.0.6099.56/chrome/test/chromedriver/capabilities.cc.no_matching_constructor	2023-11-29 22:39:54.000000000 +0100
+++ chromium-120.0.6099.56/chrome/test/chromedriver/capabilities.cc	2023-12-03 17:31:25.750420227 +0100
@@ -346,7 +346,7 @@ Status ParseMobileEmulation(const base::
                         "'version' field of type string");
         }
 
-        brands.emplace_back(*brand, *version);
+        brands.emplace_back() = {*brand, *version};
       }
 
       client_hints.brands = std::move(brands);
@@ -384,7 +384,7 @@ Status ParseMobileEmulation(const base::
                         "a 'version' field of type string");
         }
 
-        full_version_list.emplace_back(*brand, *version);
+        full_version_list.emplace_back() = {*brand, *version};
       }
 
       client_hints.full_version_list = std::move(full_version_list);
diff -up chromium-120.0.6099.56/components/autofill/core/browser/contact_info_sync_util.cc.no_matching_constructor chromium-120.0.6099.56/components/autofill/core/browser/contact_info_sync_util.cc
--- chromium-120.0.6099.56/components/autofill/core/browser/contact_info_sync_util.cc.no_matching_constructor	2023-11-29 22:39:57.000000000 +0100
+++ chromium-120.0.6099.56/components/autofill/core/browser/contact_info_sync_util.cc	2023-12-03 17:31:25.750420227 +0100
@@ -197,9 +197,9 @@ class ContactInfoProfileSetter {
       CHECK(observations.empty());
       for (const sync_pb::ContactInfoSpecifics::Observation& proto_observation :
            metadata.observations()) {
-        observations.emplace_back(proto_observation.type(),
+        observations.emplace_back() = {static_cast<unsigned char>(proto_observation.type()),
                                   ProfileTokenQuality::FormSignatureHash(
-                                      proto_observation.form_hash()));
+                                      proto_observation.form_hash())};
       }
     }
   }
diff -up chromium-120.0.6099.56/components/autofill/core/browser/webdata/autofill_table.cc.no_matching_constructor chromium-120.0.6099.56/components/autofill/core/browser/webdata/autofill_table.cc
--- chromium-120.0.6099.56/components/autofill/core/browser/webdata/autofill_table.cc.no_matching_constructor	2023-11-29 22:39:57.000000000 +0100
+++ chromium-120.0.6099.56/components/autofill/core/browser/webdata/autofill_table.cc	2023-12-03 17:31:25.751420246 +0100
@@ -1763,10 +1763,10 @@ std::unique_ptr<AutofillProfile> Autofil
     }
 
     base::span<const uint8_t> observations_data = s.ColumnBlob(3);
-    field_type_values.emplace_back(
+    field_type_values.emplace_back() = {
         type, s.ColumnString16(1), s.ColumnInt(2),
         std::vector<uint8_t>(observations_data.begin(),
-                             observations_data.end()));
+                             observations_data.end())};
 
     if (type == ADDRESS_HOME_COUNTRY) {
       country_code = base::UTF16ToUTF8(s.ColumnString16(1));
diff -up chromium-120.0.6099.56/components/password_manager/core/browser/password_manager.cc.no_matching_constructor chromium-120.0.6099.56/components/password_manager/core/browser/password_manager.cc
--- chromium-120.0.6099.56/components/password_manager/core/browser/password_manager.cc.no_matching_constructor	2023-11-29 22:39:58.000000000 +0100
+++ chromium-120.0.6099.56/components/password_manager/core/browser/password_manager.cc	2023-12-03 17:31:25.751420246 +0100
@@ -630,7 +630,7 @@ void PasswordManager::OnUserModifiedNonP
   // |driver| might be empty on iOS or in tests.
   int driver_id = driver ? driver->GetId() : 0;
   possible_usernames_.Put(
-      PossibleUsernameFieldIdentifier(driver_id, renderer_id),
+      PossibleUsernameFieldIdentifier{driver_id, renderer_id},
       PossibleUsernameData(GetSignonRealm(driver->GetLastCommittedURL()),
                            renderer_id, value, base::Time::Now(), driver_id,
                            autocomplete_attribute_has_username, is_likely_otp));
diff -up chromium-120.0.6099.56/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc.no_matching_constructor chromium-120.0.6099.56/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc
--- chromium-120.0.6099.56/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc.no_matching_constructor	2023-11-29 22:40:01.000000000 +0100
+++ chromium-120.0.6099.56/components/viz/service/display_embedder/skia_output_surface_impl_on_gpu.cc	2023-12-03 17:31:25.751420246 +0100
@@ -1567,7 +1567,7 @@ void SkiaOutputSurfaceImplOnGpu::CopyOut
 
       // Issue readbacks from the surfaces:
       for (size_t i = 0; i < CopyOutputResult::kNV12MaxPlanes; ++i) {
-        SkISize size(plane_surfaces[i]->width(), plane_surfaces[i]->height());
+        SkISize size{plane_surfaces[i]->width(), plane_surfaces[i]->height()};
         SkImageInfo dst_info = SkImageInfo::Make(
             size, (i == 0) ? kAlpha_8_SkColorType : kR8G8_unorm_SkColorType,
             kUnpremul_SkAlphaType);
diff -up chromium-120.0.6099.56/content/browser/download/save_package.cc.no_matching_constructor chromium-120.0.6099.56/content/browser/download/save_package.cc
--- chromium-120.0.6099.56/content/browser/download/save_package.cc.no_matching_constructor	2023-11-29 22:40:01.000000000 +0100
+++ chromium-120.0.6099.56/content/browser/download/save_package.cc	2023-12-03 17:31:25.752420265 +0100
@@ -767,8 +767,8 @@ void SavePackage::Finish() {
   if (download_) {
     std::vector<download::DownloadSaveItemData::ItemInfo> files;
     for (auto& item : saved_success_items_) {
-      files.emplace_back(item.second->full_path(), item.second->url(),
-                         item.second->referrer().url);
+      files.emplace_back() = {item.second->full_path(), item.second->url(),
+                         item.second->referrer().url};
     }
     download::DownloadSaveItemData::AttachItemData(download_, std::move(files));
   }
diff -up chromium-120.0.6099.56/content/browser/interest_group/interest_group_storage.cc.no_matching_constructor chromium-120.0.6099.56/content/browser/interest_group/interest_group_storage.cc
--- chromium-120.0.6099.56/content/browser/interest_group/interest_group_storage.cc.no_matching_constructor	2023-11-29 22:40:01.000000000 +0100
+++ chromium-120.0.6099.56/content/browser/interest_group/interest_group_storage.cc	2023-12-03 17:31:25.752420265 +0100
@@ -3002,10 +3002,10 @@ DoGetKAnonymityData(sql::Database& db,
 
   std::vector<StorageInterestGroup::KAnonymityData> k_anon_data;
   while (interest_group_kanon_query.Step()) {
-    k_anon_data.emplace_back(
+    k_anon_data.emplace_back() = {
         /*key=*/interest_group_kanon_query.ColumnString(0),
         /*is_k_anonymous=*/interest_group_kanon_query.ColumnBool(1),
-        /*last_updated=*/interest_group_kanon_query.ColumnTime(2));
+        /*last_updated=*/interest_group_kanon_query.ColumnTime(2)};
   }
   if (!interest_group_kanon_query.Succeeded()) {
     return absl::nullopt;
diff -up chromium-120.0.6099.56/content/browser/renderer_host/render_frame_host_impl.cc.no_matching_constructor chromium-120.0.6099.56/content/browser/renderer_host/render_frame_host_impl.cc
--- chromium-120.0.6099.56/content/browser/renderer_host/render_frame_host_impl.cc.no_matching_constructor	2023-11-29 22:40:01.000000000 +0100
+++ chromium-120.0.6099.56/content/browser/renderer_host/render_frame_host_impl.cc	2023-12-03 20:49:28.059042672 +0100
@@ -8685,7 +8685,7 @@ void RenderFrameHostImpl::SendFencedFram
   for (const blink::FencedFrame::ReportingDestination& destination :
        destinations) {
     SendFencedFrameReportingBeaconInternal(
-        DestinationEnumEvent(event_type, event_data), destination,
+        DestinationEnumEvent{event_type, event_data}, destination,
         /*from_renderer=*/true, attribution_reporting_runtime_features);
   }
 }
@@ -8720,7 +8720,7 @@ void RenderFrameHostImpl::SendFencedFram
   }
 
   SendFencedFrameReportingBeaconInternal(
-      DestinationURLEvent(destination_url),
+      DestinationURLEvent{destination_url},
       blink::FencedFrame::ReportingDestination::kBuyer,
       /*from_renderer=*/true, attribution_reporting_runtime_features);
 }
@@ -8820,7 +8820,7 @@ void RenderFrameHostImpl::MaybeSendFence
         data = info->data;
       }
       initiator_rfh->SendFencedFrameReportingBeaconInternal(
-          AutomaticBeaconEvent(event_type, data), destination,
+          AutomaticBeaconEvent{event_type, data}, destination,
           /*from_renderer=*/false, attribution_reporting_features,
           navigation_request.GetNavigationId());
     }
@@ -8832,7 +8832,7 @@ void RenderFrameHostImpl::MaybeSendFence
     for (blink::FencedFrame::ReportingDestination destination :
          info->destinations) {
       initiator_rfh->SendFencedFrameReportingBeaconInternal(
-          AutomaticBeaconEvent(event_type, info->data), destination,
+          AutomaticBeaconEvent{event_type, info->data}, destination,
           /*from_renderer=*/false, info->attribution_reporting_runtime_features,
           navigation_request.GetNavigationId());
     }
diff -up chromium-120.0.6099.56/net/dns/host_resolver_cache.cc.no_matching_constructor chromium-120.0.6099.56/net/dns/host_resolver_cache.cc
--- chromium-120.0.6099.56/net/dns/host_resolver_cache.cc.no_matching_constructor	2023-11-29 22:40:07.000000000 +0100
+++ chromium-120.0.6099.56/net/dns/host_resolver_cache.cc	2023-12-03 17:31:25.754420303 +0100
@@ -368,7 +368,7 @@ void HostResolverCache::Set(
 
   std::string domain_name = result->domain_name();
   entries_.emplace(
-      Key(std::move(domain_name), network_anonymization_key),
+      Key{std::move(domain_name), network_anonymization_key},
       Entry(std::move(result), source, secure, staleness_generation));
 
   if (entries_.size() > max_entries_) {
diff -up chromium-120.0.6099.56/third_party/blink/renderer/platform/fonts/font_palette.h.no_matching_constructor chromium-120.0.6099.56/third_party/blink/renderer/platform/fonts/font_palette.h
--- chromium-120.0.6099.56/third_party/blink/renderer/platform/fonts/font_palette.h.no_matching_constructor	2023-11-29 22:40:12.000000000 +0100
+++ chromium-120.0.6099.56/third_party/blink/renderer/platform/fonts/font_palette.h	2023-12-03 17:31:25.754420303 +0100
@@ -96,7 +96,7 @@ class PLATFORM_EXPORT FontPalette : publ
       Color::ColorSpace color_interpolation_space,
       absl::optional<Color::HueInterpolationMethod> hue_interpolation_method) {
     return base::AdoptRef(new FontPalette(
-        start, end, NonNormalizedPercentages(start_percentage, end_percentage),
+        start, end, NonNormalizedPercentages{start_percentage, end_percentage},
         normalized_percentage, alpha_multiplier, color_interpolation_space,
         hue_interpolation_method));
   }
@@ -170,7 +170,7 @@ class PLATFORM_EXPORT FontPalette : publ
       double normalized_percentage) {
     double end_percentage = normalized_percentage * 100.0;
     double start_percentage = 100.0 - end_percentage;
-    return NonNormalizedPercentages(start_percentage, end_percentage);
+    return NonNormalizedPercentages{start_percentage, end_percentage};
   }
 
   double GetAlphaMultiplier() const {
diff -up chromium-120.0.6099.56/third_party/blink/renderer/platform/fonts/palette_interpolation.cc.no_matching_constructor chromium-120.0.6099.56/third_party/blink/renderer/platform/fonts/palette_interpolation.cc
--- chromium-120.0.6099.56/third_party/blink/renderer/platform/fonts/palette_interpolation.cc.no_matching_constructor	2023-11-29 22:40:12.000000000 +0100
+++ chromium-120.0.6099.56/third_party/blink/renderer/platform/fonts/palette_interpolation.cc	2023-12-03 17:31:25.755420323 +0100
@@ -31,7 +31,7 @@ Vector<FontPalette::FontPaletteOverride>
         color_interpolation_space, hue_interpolation_method, start_color,
         end_color, percentage, alpha_multiplier);
 
-    FontPalette::FontPaletteOverride result_color_record(i, result_color);
+    FontPalette::FontPaletteOverride result_color_record{static_cast<int>(i), result_color};
     result_color_records.push_back(result_color_record);
   }
   return result_color_records;
diff -up chromium-120.0.6099.56/third_party/pdfium/core/fpdfapi/render/cpdf_renderstatus.cpp.no_matching_constructor chromium-120.0.6099.56/third_party/pdfium/core/fpdfapi/render/cpdf_renderstatus.cpp
--- chromium-120.0.6099.56/third_party/pdfium/core/fpdfapi/render/cpdf_renderstatus.cpp.no_matching_constructor	2023-11-29 22:41:46.000000000 +0100
+++ chromium-120.0.6099.56/third_party/pdfium/core/fpdfapi/render/cpdf_renderstatus.cpp	2023-12-03 17:31:25.756420342 +0100
@@ -491,7 +491,7 @@ void CPDF_RenderStatus::ProcessClipPath(
     } else {
       m_pDevice->SetClip_PathFill(
           *pPath, &mtObj2Device,
-          CFX_FillRenderOptions(ClipPath.GetClipType(i)));
+          CFX_FillRenderOptions{ClipPath.GetClipType(i)});
     }
   }
 
diff -up chromium-120.0.6099.56/ui/base/wayland/color_manager_util.h.no_matching_constructor chromium-120.0.6099.56/ui/base/wayland/color_manager_util.h
--- chromium-120.0.6099.56/ui/base/wayland/color_manager_util.h.no_matching_constructor	2023-11-29 22:40:44.000000000 +0100
+++ chromium-120.0.6099.56/ui/base/wayland/color_manager_util.h	2023-12-03 17:31:25.755420323 +0100
@@ -52,53 +52,53 @@ constexpr auto kChromaticityMap = base::
     zcr_color_manager_v1_chromaticity_names,
     PrimaryVersion>(
     {{ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT601_525_LINE,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::SMPTE170M,
-                     kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::SMPTE170M,
+                     kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT601_625_LINE,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::BT470BG,
-                     kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::BT470BG,
+                     kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTE170M,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::SMPTE170M,
-                     kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::SMPTE170M,
+                     kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT709,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::BT709, kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::BT709, kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT2020,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::BT2020, kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::BT2020, kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SRGB,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::BT709, kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::BT709, kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_DISPLAYP3,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::P3, kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::P3, kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_ADOBERGB,
-      PrimaryVersion(gfx::ColorSpace::PrimaryID::ADOBE_RGB,
-                     kDefaultSinceVersion)},
+      PrimaryVersion{gfx::ColorSpace::PrimaryID::ADOBE_RGB,
+                     kDefaultSinceVersion}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_WIDE_GAMUT_COLOR_SPIN,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::WIDE_GAMUT_COLOR_SPIN,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_WIDE_GAMUT_COLOR_SPIN_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_WIDE_GAMUT_COLOR_SPIN_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT470M,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::BT470M,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT470M_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_BT470M_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTE240M,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::SMPTE240M,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTE240M_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTE240M_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_XYZ_D50,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::XYZ_D50,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_XYZ_D50_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_XYZ_D50_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST428_1,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::SMPTEST428_1,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST428_1_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST428_1_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST431_2,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::SMPTEST431_2,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST431_2_SINCE_VERSION)},
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_SMPTEST431_2_SINCE_VERSION}},
      {ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_FILM,
-      PrimaryVersion(
+      PrimaryVersion{
           gfx::ColorSpace::PrimaryID::FILM,
-          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_FILM_SINCE_VERSION)}});
+          ZCR_COLOR_MANAGER_V1_CHROMATICITY_NAMES_FILM_SINCE_VERSION}}});
 
 // A map from the zcr_color_manager_v1 eotf_names enum values
 // representing well-known EOTFs, to their equivalent TransferIDs.
@@ -107,68 +107,68 @@ constexpr auto kEotfMap = base::MakeFixe
     zcr_color_manager_v1_eotf_names,
     TransferVersion>({
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LINEAR,
-     TransferVersion(gfx::ColorSpace::TransferID::LINEAR,
-                     kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::LINEAR,
+                     kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB,
-     TransferVersion(gfx::ColorSpace::TransferID::SRGB, kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::SRGB, kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR,
-     TransferVersion(gfx::ColorSpace::TransferID::SRGB_HDR,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::SRGB_HDR,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709,
-     TransferVersion(gfx::ColorSpace::TransferID::BT709,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::BT709,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2087,
-     TransferVersion(gfx::ColorSpace::TransferID::GAMMA24,
-                     kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::GAMMA24,
+                     kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_ADOBERGB,
      // This is ever so slightly inaccurate. The number ought to be
      // 2.19921875f, not 2.2
-     TransferVersion(gfx::ColorSpace::TransferID::GAMMA22,
-                     kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::GAMMA22,
+                     kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_PQ,
-     TransferVersion(gfx::ColorSpace::TransferID::PQ, kDefaultSinceVersion)},
+     TransferVersion{gfx::ColorSpace::TransferID::PQ, kDefaultSinceVersion}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG,
-     TransferVersion(gfx::ColorSpace::TransferID::HLG,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::HLG,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE170M,
-     TransferVersion(gfx::ColorSpace::TransferID::SMPTE170M,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE170M_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::SMPTE170M,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE170M_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE240M,
-     TransferVersion(gfx::ColorSpace::TransferID::SMPTE240M,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE240M_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::SMPTE240M,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTE240M_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTEST428_1,
-     TransferVersion(
+     TransferVersion{
          gfx::ColorSpace::TransferID::SMPTEST428_1,
-         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTEST428_1_SINCE_VERSION)},
+         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SMPTEST428_1_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG,
-     TransferVersion(gfx::ColorSpace::TransferID::LOG,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::LOG,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SQRT,
-     TransferVersion(gfx::ColorSpace::TransferID::LOG_SQRT,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SQRT_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::LOG_SQRT,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LOG_SQRT_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_IEC61966_2_4,
-     TransferVersion(
+     TransferVersion{
          gfx::ColorSpace::TransferID::IEC61966_2_4,
-         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_IEC61966_2_4_SINCE_VERSION)},
+         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_IEC61966_2_4_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT1361_ECG,
-     TransferVersion(gfx::ColorSpace::TransferID::BT1361_ECG,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT1361_ECG_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::BT1361_ECG,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT1361_ECG_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_10,
-     TransferVersion(gfx::ColorSpace::TransferID::BT2020_10,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_10_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::BT2020_10,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_10_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_12,
-     TransferVersion(gfx::ColorSpace::TransferID::BT2020_12,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_12_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::BT2020_12,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2020_12_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SCRGB_LINEAR_80_NITS,
-     TransferVersion(
+     TransferVersion{
          gfx::ColorSpace::TransferID::SCRGB_LINEAR_80_NITS,
-         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SCRGB_LINEAR_80_NITS_SINCE_VERSION)},
+         ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SCRGB_LINEAR_80_NITS_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA18,
-     TransferVersion(gfx::ColorSpace::TransferID::GAMMA18,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA18_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::GAMMA18,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA18_SINCE_VERSION}},
     {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA28,
-     TransferVersion(gfx::ColorSpace::TransferID::GAMMA28,
-                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA28_SINCE_VERSION)},
+     TransferVersion{gfx::ColorSpace::TransferID::GAMMA28,
+                     ZCR_COLOR_MANAGER_V1_EOTF_NAMES_GAMMA28_SINCE_VERSION}},
 });
 
 // A map from the SDR zcr_color_manager_v1 eotf_names enum values
@@ -177,18 +177,18 @@ constexpr auto kEotfMap = base::MakeFixe
 constexpr auto kTransferMap =
     base::MakeFixedFlatMap<zcr_color_manager_v1_eotf_names, TransferFnVersion>({
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LINEAR,
-         TransferFnVersion(SkNamedTransferFn::kLinear, kDefaultSinceVersion)},
+         TransferFnVersion{SkNamedTransferFn::kLinear, kDefaultSinceVersion}},
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB,
-         TransferFnVersion(SkNamedTransferFnExt::kSRGB, kDefaultSinceVersion)},
+         TransferFnVersion{SkNamedTransferFnExt::kSRGB, kDefaultSinceVersion}},
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709,
-         TransferFnVersion(
+         TransferFnVersion{
              SkNamedTransferFnExt::kRec709,
-             ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709_SINCE_VERSION)},
+             ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT709_SINCE_VERSION}},
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_BT2087,
-         TransferFnVersion(gamma24, kDefaultSinceVersion)},
+         TransferFnVersion{gamma24, kDefaultSinceVersion}},
         {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_ADOBERGB,
-         TransferFnVersion(SkNamedTransferFnExt::kA98RGB,
-                           kDefaultSinceVersion)},
+         TransferFnVersion{SkNamedTransferFnExt::kA98RGB,
+                           kDefaultSinceVersion}},
     });
 
 // A map from the HDR zcr_color_manager_v1 eotf_names enum values
@@ -197,70 +197,70 @@ constexpr auto kTransferMap =
 constexpr auto kHDRTransferMap =
     base::MakeFixedFlatMap<zcr_color_manager_v1_eotf_names, TransferFnVersion>(
         {{ZCR_COLOR_MANAGER_V1_EOTF_NAMES_LINEAR,
-          TransferFnVersion(SkNamedTransferFn::kLinear, kDefaultSinceVersion)},
+          TransferFnVersion{SkNamedTransferFn::kLinear, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR,
-          TransferFnVersion(
+          TransferFnVersion{
               SkNamedTransferFnExt::kSRGB,
-              ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR_SINCE_VERSION)},
+              ZCR_COLOR_MANAGER_V1_EOTF_NAMES_SRGB_HDR_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_PQ,
-          TransferFnVersion(SkNamedTransferFn::kPQ, kDefaultSinceVersion)},
+          TransferFnVersion{SkNamedTransferFn::kPQ, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG,
-          TransferFnVersion(SkNamedTransferFn::kHLG,
-                            ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG_SINCE_VERSION)},
+          TransferFnVersion{SkNamedTransferFn::kHLG,
+                            ZCR_COLOR_MANAGER_V1_EOTF_NAMES_HLG_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_EOTF_NAMES_EXTENDEDSRGB10,
-          TransferFnVersion(
+          TransferFnVersion{
               SkNamedTransferFnExt::kSRGBExtended1023Over510,
-              ZCR_COLOR_MANAGER_V1_EOTF_NAMES_EXTENDEDSRGB10_SINCE_VERSION)}});
+              ZCR_COLOR_MANAGER_V1_EOTF_NAMES_EXTENDEDSRGB10_SINCE_VERSION}}});
 
 // A map from zcr_color_manager_v1 matrix_names enum values to
 // gfx::ColorSpace::MatrixIDs.
 constexpr auto kMatrixMap =
     base::MakeFixedFlatMap<zcr_color_manager_v1_matrix_names, MatrixVersion>(
         {{ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_RGB,
-          MatrixVersion(gfx::ColorSpace::MatrixID::RGB, kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::RGB, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT709,
-          MatrixVersion(gfx::ColorSpace::MatrixID::BT709,
-                        kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::BT709,
+                        kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT470BG,
-          MatrixVersion(
+          MatrixVersion{
               gfx::ColorSpace::MatrixID::BT470BG,
-              ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT470BG_SINCE_VERSION)},
+              ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT470BG_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT2020_NCL,
-          MatrixVersion(gfx::ColorSpace::MatrixID::BT2020_NCL,
-                        kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::BT2020_NCL,
+                        kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_BT2020_CL,
-          MatrixVersion(gfx::ColorSpace::MatrixID::BT2020_CL,
-                        kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::BT2020_CL,
+                        kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_FCC,
-          MatrixVersion(gfx::ColorSpace::MatrixID::FCC, kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::FCC, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YCOCG,
-          MatrixVersion(gfx::ColorSpace::MatrixID::YCOCG,
-                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YCOCG_SINCE_VERSION)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::YCOCG,
+                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YCOCG_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YDZDX,
-          MatrixVersion(gfx::ColorSpace::MatrixID::YDZDX,
-                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YDZDX_SINCE_VERSION)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::YDZDX,
+                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_YDZDX_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_GBR,
-          MatrixVersion(gfx::ColorSpace::MatrixID::GBR,
-                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_GBR_SINCE_VERSION)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::GBR,
+                        ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_GBR_SINCE_VERSION}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_SMPTE170M,
-          MatrixVersion(gfx::ColorSpace::MatrixID::SMPTE170M,
-                        kDefaultSinceVersion)},
+          MatrixVersion{gfx::ColorSpace::MatrixID::SMPTE170M,
+                        kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_MATRIX_NAMES_SMPTE240M,
-          MatrixVersion(gfx::ColorSpace::MatrixID::SMPTE240M,
-                        kDefaultSinceVersion)}});
+          MatrixVersion{gfx::ColorSpace::MatrixID::SMPTE240M,
+                        kDefaultSinceVersion}}});
 
 // A map from zcr_color_manager_v1 range_names enum values to
 // gfx::ColorSpace::RangeIDs.
 constexpr auto kRangeMap =
     base::MakeFixedFlatMap<zcr_color_manager_v1_range_names, RangeVersion>(
         {{ZCR_COLOR_MANAGER_V1_RANGE_NAMES_LIMITED,
-          RangeVersion(gfx::ColorSpace::RangeID::LIMITED,
-                       kDefaultSinceVersion)},
+          RangeVersion{gfx::ColorSpace::RangeID::LIMITED,
+                       kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_RANGE_NAMES_FULL,
-          RangeVersion(gfx::ColorSpace::RangeID::FULL, kDefaultSinceVersion)},
+          RangeVersion{gfx::ColorSpace::RangeID::FULL, kDefaultSinceVersion}},
          {ZCR_COLOR_MANAGER_V1_RANGE_NAMES_DERIVED,
-          RangeVersion(gfx::ColorSpace::RangeID::DERIVED,
-                       kDefaultSinceVersion)}});
+          RangeVersion{gfx::ColorSpace::RangeID::DERIVED,
+                       kDefaultSinceVersion}}});
 
 zcr_color_manager_v1_chromaticity_names ToColorManagerChromaticity(
     gfx::ColorSpace::PrimaryID primaryID,
@@ -283,4 +283,4 @@ zcr_color_manager_v1_eotf_names ToColorM
 
 }  // namespace ui::wayland
 
-#endif  // UI_BASE_WAYLAND_COLOR_MANAGER_UTIL_H_
\ Kein Zeilenumbruch am Dateiende.
+#endif  // UI_BASE_WAYLAND_COLOR_MANAGER_UTIL_H_
diff -up chromium-120.0.6099.56/ui/gtk/gtk_ui.cc.no_matching_constructor chromium-120.0.6099.56/ui/gtk/gtk_ui.cc
--- chromium-120.0.6099.56/ui/gtk/gtk_ui.cc.no_matching_constructor	2023-11-29 22:40:44.000000000 +0100
+++ chromium-120.0.6099.56/ui/gtk/gtk_ui.cc	2023-12-03 17:31:25.756420342 +0100
@@ -1013,11 +1013,11 @@ ui::DisplayConfig GtkUi::GetDisplayConfi
     GdkRectangle geometry;
     gdk_monitor_get_geometry(monitor, &geometry);
     int monitor_scale = std::max(1, gdk_monitor_get_scale_factor(monitor));
-    config.display_geometries.emplace_back(
+    config.display_geometries.emplace_back() = {
         gfx::Rect(monitor_scale * geometry.x, monitor_scale * geometry.y,
                   monitor_scale * geometry.width,
                   monitor_scale * geometry.height),
-        monitor_scale * font_scale);
+        static_cast<float>(monitor_scale * font_scale)};
   }
   return config;
 }
