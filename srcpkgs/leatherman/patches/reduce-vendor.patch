Still vendor rapidjson, facter depends on older API
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -66,11 +66,10 @@ file(GLOB_RECURSE ALL_LEATHERMAN_SOURCES
 add_subdirectory(locales)
 
 add_leatherman_dir(catch EXCLUDE_FROM_VARS)
-add_leatherman_dir(nowide)
 add_leatherman_dir(util)
 add_leatherman_dir(locale)
 add_leatherman_dir(logging)
 add_leatherman_dir(rapidjson)
 add_leatherman_dir(json_container)
 add_leatherman_dir(file_util)
 add_leatherman_dir(curl)
--- a/util/CMakeLists.txt
+++ b/util/CMakeLists.txt
@@ -1,10 +1,8 @@
-find_package(Boost 1.54 REQUIRED date_time chrono system)
+find_package(Boost 1.54 REQUIRED date_time chrono system nowide)
 
 add_leatherman_deps(${Boost_LIBRARIES})
 add_leatherman_includes("${Boost_INCLUDE_DIRS}")
 
-leatherman_dependency(nowide)
-
 if(WIN32)
     set(PLATFORM_SRCS "src/windows/time.cc" "src/windows/environment.cc" "src/windows/scoped_handle.cc")
     set(PLATFORM_TESTS "tests/windows/environment.cc")
--- a/json_container/CMakeLists.txt
+++ b/json_container/CMakeLists.txt
@@ -1,11 +1,11 @@
-find_package(Boost 1.54 REQUIRED COMPONENTS regex)
+find_package(Boost 1.54 REQUIRED COMPONENTS regex nowide)
 
 add_leatherman_deps("${Boost_LIBRARIES}")
 add_leatherman_includes("${Boost_INCLUDE_DIRS}")
 
 leatherman_dependency(rapidjson)
 leatherman_dependency(locale)
 
 add_leatherman_library("src/json_container.cc")
 add_leatherman_headers("inc/leatherman")
-add_leatherman_test("tests/json_container_test.cc")
\ No newline at end of file
+add_leatherman_test("tests/json_container_test.cc")
--- a/logging/CMakeLists.txt
+++ b/logging/CMakeLists.txt
@@ -1,10 +1,10 @@
-find_package(Boost 1.54 REQUIRED COMPONENTS log log_setup thread date_time filesystem system chrono regex)
+find_package(Boost 1.54 REQUIRED COMPONENTS log log_setup thread date_time
+	filesystem system chrono regex nowide)
 find_package(Threads)
 
 add_leatherman_deps(${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
 add_leatherman_includes("${Boost_INCLUDE_DIRS}")
 
-leatherman_dependency(nowide)
 leatherman_dependency(locale)
 
 if (CMAKE_SYSTEM_NAME MATCHES "Linux" OR CMAKE_SYSTEM_NAME MATCHES "SunOS")
--- a/execution/CMakeLists.txt
+++ b/execution/CMakeLists.txt
@@ -1,4 +1,4 @@
-find_package(Boost 1.54 REQUIRED COMPONENTS regex filesystem system)
+find_package(Boost 1.54 REQUIRED COMPONENTS regex filesystem system nowide)
 
 add_leatherman_deps("${Boost_LIBRARIES}")
 if ("${CMAKE_SYSTEM_NAME}" MATCHES "SunOS")
@@ -10,7 +10,6 @@ endif()
 add_leatherman_includes("${Boost_INCLUDE_DIRS}")
 
 leatherman_dependency(util)
-leatherman_dependency(nowide)
 leatherman_dependency(locale)
 leatherman_dependency(logging)
 leatherman_dependency(file_util)
--- a/file_util/CMakeLists.txt
+++ b/file_util/CMakeLists.txt
@@ -1,9 +1,8 @@
-find_package(Boost 1.54 REQUIRED COMPONENTS regex filesystem system)
+find_package(Boost 1.54 REQUIRED COMPONENTS regex filesystem system nowide)
 
 add_leatherman_deps("${Boost_LIBRARIES}")
 add_leatherman_includes("${Boost_INCLUDE_DIRS}")
 
-leatherman_dependency(nowide)
 leatherman_dependency(locale)
 leatherman_dependency(logging)
 leatherman_dependency(util)
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -1,4 +1,5 @@
-set(BOOST_REQUIRED_COMPONENTS system date_time chrono log log_setup thread filesystem regex)
+set(BOOST_REQUIRED_COMPONENTS system date_time chrono log log_setup thread
+	filesystem regex nowide)
 if (LEATHERMAN_USE_LOCALES)
     set(BOOST_REQUIRED_COMPONENTS ${BOOST_REQUIRED_COMPONENTS} locale)
 endif()
--- a/file_util/src/file.cc
+++ b/file_util/src/file.cc
@@ -1,6 +1,6 @@
 #include <leatherman/file_util/file.hpp>
 #include <boost/nowide/fstream.hpp>
-#include <boost/nowide/cenv.hpp>
+#include <boost/nowide/cstdlib.hpp>
 #include <boost/filesystem.hpp>
 #include <sstream>
 #include <leatherman/logging/logging.hpp>
--- a/util/src/environment.cc
+++ b/util/src/environment.cc
@@ -1,5 +1,5 @@
 #include <leatherman/util/environment.hpp>
-#include <boost/nowide/cenv.hpp>
+#include <boost/nowide/cstdlib.hpp>
 #include <stdexcept>
 
 using namespace std;
--- a/util/tests/environment.cc
+++ b/util/tests/environment.cc
@@ -1,6 +1,6 @@
 #include <catch.hpp>
 #include <leatherman/util/environment.hpp>
-#include <boost/nowide/cenv.hpp>
+#include <boost/nowide/cstdlib.hpp>
 
 using namespace std;
 using namespace leatherman::util;
