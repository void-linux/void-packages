As stated by srcpkgs/flightgear/patches/musl-fenv.patch:
"""
Simply disabling the code which enables floating point exceptions
is probably wrong, but I don't have a replacement for the
non-posix functions fegetexcept(3) and feenableexcept(3).
"""

--- a/src/OSD/OSD_signal.cxx.orig	2022-07-22 10:53:38.000000000 +0200
+++ b/src/OSD/OSD_signal.cxx	2022-10-06 09:19:02.286414340 +0200
@@ -761,7 +761,7 @@ typedef void (* SIG_PFV) (int);
 
 #include <signal.h>
 
-#if !defined(__ANDROID__) && !defined(__QNX__) && !defined(__EMSCRIPTEN__)
+#if !defined(__ANDROID__) && !defined(__QNX__) && !defined(__EMSCRIPTEN__) &&  defined(__GLIBC__)
   #include <sys/signal.h>
 #endif
 
@@ -977,7 +977,7 @@ static void SegvHandler(const int theSig
 //=======================================================================
 void OSD::SetFloatingSignal (Standard_Boolean theFloatingSignal)
 {
-#if defined (__linux__)
+#if defined (__linux__) && defined(__GLIBC__)
   feclearexcept (FE_ALL_EXCEPT);
   if (theFloatingSignal)
   {
@@ -1010,7 +1010,7 @@ void OSD::SetFloatingSignal (Standard_Bo
 //=======================================================================
 Standard_Boolean OSD::ToCatchFloatingSignals()
 {
-#if defined (__linux__)
+#if defined (__linux__) && defined(__GLIBC__)
   return (fegetexcept() & _OSD_FPX) != 0;
 #else
   return Standard_False;
