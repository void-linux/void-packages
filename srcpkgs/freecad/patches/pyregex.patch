--- a/src/Mod/BIM/importers/importIFClegacy.py
+++ b/src/Mod/BIM/importers/importIFClegacy.py
@@ -1433,9 +1433,9 @@
             entity = {}
             raw_entity_str = m.groups()[0]
 
-            entity["name"] = re.search("(.*?)[;|\s]", raw_entity_str).groups()[0].upper()
+            entity["name"] = re.search(r"(.*?)[;|\s]", raw_entity_str).groups()[0].upper()
 
-            subtypeofmatch = re.search(".*SUBTYPE OF \((.*?)\);", raw_entity_str)
+            subtypeofmatch = re.search(r".*SUBTYPE OF \((.*?)\);", raw_entity_str)
             entity["supertype"] = subtypeofmatch.groups()[0].upper() if subtypeofmatch else None
 
             # find the shortest string matched from the end of the entity type header to the
--- a/src/Mod/CAM/CAMTests/TestPathPost.py
+++ b/src/Mod/CAM/CAMTests/TestPathPost.py
@@ -40,7 +40,7 @@
 
 
 class TestFileNameGenerator(unittest.TestCase):
-    """
+    r"""
     String substitution allows the following:
     %D ... directory of the active document
     %d ... name of the active document (with extension)
--- a/src/Mod/CAM/Path/Post/scripts/gcode_pre.py
+++ b/src/Mod/CAM/Path/Post/scripts/gcode_pre.py
@@ -191,7 +191,7 @@
     p = re.compile(r"[mM]+?\s?0?6\s?T\d*\s")
 
     # split the gcode on tool changes
-    paths = re.split("([mM]+?\s?0?6\s?T\d*\s)", gcode)
+    paths = re.split(r"([mM]+?\s?0?6\s?T\d*\s)", gcode)
 
     # iterate the gcode sections and add customs for each
     toolnumber = 0
--- a/src/Mod/Robot/KukaExporter.py
+++ b/src/Mod/Robot/KukaExporter.py
@@ -21,7 +21,7 @@
 DECL LDAT LCPDAT1={VEL 2.0,ACC 100.0,APO_DIST 100.0,APO_FAC 50.0,ORI_TYP #VAR}
 """
 
-HeaderSrc = """&ACCESS RVP
+HeaderSrc = r"""&ACCESS RVP
 &REL 1
 &PARAM TEMPLATE = C:\KRC\Roboter\Template\ExpertVorgabe
 &PARAM EDITMASK = *
