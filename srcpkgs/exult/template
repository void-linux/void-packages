# Template file for 'exult'
pkgname=exult
version=1.12.0
revision=1
build_style=gnu-configure
configure_args="--disable-tools --enable-lto --datadir=/usr/share"
hostmakedepends="automake autoconf autoconf-archive libtool pkg-config"
makedepends="fluidsynth-devel libmt32emu-devel libogg-devel libpng-devel libvorbis-devel SDL2-devel SDL2_image-devel zlib-devel"
short_desc="Free runtime for the Ultima 7 game series"
maintainer="Vincent Legoll <vincent.legoll@gmail.com>"
license="GPL-2.0-only"
homepage="http://www.exult.info/"
changelog=https://raw.githubusercontent.com/exult/exult/refs/heads/master/NEWS
distfiles="https://github.com/exult/exult/archive/refs/tags/v${version}.tar.gz"
checksum="1734fb8fc76696c7697f00d53e1c5c04b889ab4cabd95e4a3e0380bc35ee5392"

# Cross-compilation fails with:
# checking for expack... no
# While cross compiling you need to have a build system native
# expack in your path to generate Exult's data files.
# After you natively compiled Exult you will find expack in the tools subfolder.
# configure: error: Could not find expack in your path, cannot generate data files.
nocross="Requires a build system native tool to generate Exult's data files"

case "${XBPS_TARGET_MACHINE}" in
i686) broken="test suite failure" ;;
esac

# You can configure the path to the copy of the original game(s)
# in the ~/.exult.cfg file, like the following

# <config>
#   <disk>
#     <game>
#       <blackgate>
#         <path>/home/user/Downloads/Games/Ultima7/Ultima7</path>
#       </blackgate>
#     </game>
#   </disk>
# </config>

# See the README file in https://github.com/exult/exult for more infos

pre_configure() {
	autoreconf -fi
}

do_install() {
	vbin exult
	vinstall data/exult.flx 0644 usr/share/exult
	vinstall data/exult_bg.flx 0644 usr/share/exult
	vinstall data/exult_si.flx 0644 usr/share/exult
}
