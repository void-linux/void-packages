Source: Hoshpak
Upstream: https://trac.filezilla-project.org/ticket/11760
Reason: Reverts upstream changes that lead to compilation failures
--- src/interface/queue.cpp	2018-10-02 12:09:20.545473576 +0200
+++ src/interface/queue.cpp	2018-10-02 12:11:39.761472912 +0200
@@ -330,7 +330,7 @@
 void CFileItem::SetTargetFile(wxString const& file)
 {
 	if (!file.empty() && file != m_sourceFile) {
-		m_targetFile = fz::sparse_optional<std::wstring>(fz::to_wstring(file));
+		m_targetFile = fz::sparse_optional<std::wstring>(to_wstring(file));
 	}
 	else {
 		m_targetFile.clear();
--- src/interface/state.cpp	2018-10-02 12:12:10.641029712 +0200
+++ src/interface/state.cpp	2018-10-02 12:13:08.456200318 +0200
@@ -780,12 +780,12 @@
 		fz::local_filesys::type type = fz::local_filesys::get_file_info(fz::to_native(file), is_link, &size, 0, 0);
 		if (type == fz::local_filesys::file) {
 			std::wstring localFile;
-			CLocalPath const localPath(fz::to_wstring(file), &localFile);
+			CLocalPath const localPath(to_wstring(file), &localFile);
 			mainFrame.GetQueue()->QueueFile(queueOnly, false, localFile, wxEmptyString, localPath, path, state.GetServer(), size);
 			mainFrame.GetQueue()->QueueFile_Finish(!queueOnly);
 		}
 		else if (type == fz::local_filesys::dir) {
-			CLocalPath localPath(fz::to_wstring(file));
+			CLocalPath localPath(to_wstring(file));
 			if (localPath.HasParent()) {
 
 				CServerPath remotePath = path;
@@ -863,7 +863,7 @@
 		fz::local_filesys::type type = fz::local_filesys::get_file_info(fz::to_native(file), is_link, &size, 0, 0);
 		if (type == fz::local_filesys::file) {
 			std::wstring name;
-			CLocalPath sourcePath(fz::to_wstring(file), &name);
+			CLocalPath sourcePath(to_wstring(file), &name);
 			if (name.empty()) {
 				continue;
 			}
@@ -880,7 +880,7 @@
 			}
 		}
 		else if (type == fz::local_filesys::dir) {
-			CLocalPath sourcePath(fz::to_wstring(file));
+			CLocalPath sourcePath(to_wstring(file));
 			if (sourcePath == path || sourcePath.GetParent() == path) {
 				continue;
 			}
