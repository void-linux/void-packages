As void doesn't support multiarch, remove the glibc specific $LIB dynamic string
token, which otherwise breaks musl.
diff --git a/meson.build.orig b/meson.build
index 7172ee4..7af3373 100644
--- a/meson.build
+++ b/meson.build
@@ -39,19 +39,7 @@ pipewire_configdir = pipewire_sysconfdir / 'pipewire'
 pipewire_confdatadir = pipewire_datadir / 'pipewire'
 modules_install_dir = pipewire_libdir / pipewire_name
 
-if host_machine.system() == 'linux'
-  # glibc ld.so interprets ${LIB} in a library loading path with an
-  # appropriate value for the current architecture, typically something
-  # like lib, lib64 or lib/x86_64-linux-gnu.
-  # This allows the same pw-jack script to work for both 32- and 64-bit
-  # applications on biarch/multiarch distributions, by setting something
-  # like LD_LIBRARY_PATH='/usr/${LIB}/pipewire-0.3/jack'.
-  # Note that ${LIB} is a special token expanded by the runtime linker,
-  # not an environment variable, and must be passed through literally.
-  modules_install_dir_dlopen = prefix / '${LIB}' / pipewire_name
-else
-  modules_install_dir_dlopen = modules_install_dir
-endif
+modules_install_dir_dlopen = modules_install_dir
 
 spa_plugindir = pipewire_libdir / spa_name
 spa_datadir = pipewire_datadir / spa_name
