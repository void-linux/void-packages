From 3e574b314a7d73801fe3aac012cf6671bb1f5575 Mon Sep 17 00:00:00 2001
From: Wim Taymans <wtaymans@redhat.com>
Date: Mon, 15 Sep 2025 10:32:56 +0200
Subject: [PATCH 1/4] Revert "impl-node: improve the node unprepare function"

This reverts commit 839383d0dde8016f64c6b596917b971b4d1c37b0.
---
 src/pipewire/impl-node.c | 16 ++++++----------
 1 file changed, 6 insertions(+), 10 deletions(-)

diff --git a/src/pipewire/impl-node.c b/src/pipewire/impl-node.c
index 89bb03686..e5636d561 100644
--- a/src/pipewire/impl-node.c
+++ b/src/pipewire/impl-node.c
@@ -219,21 +219,17 @@ do_node_unprepare(struct spa_loop *loop, bool async, uint32_t seq,
 {
 	struct pw_impl_node *this = user_data;
 	struct pw_node_target *t;
-	int old_state, new_state;
+	int old_state;
 	uint64_t trigger = 0;
 
 	pw_log_trace("%p: unprepare %d remote:%d exported:%d", this, this->rt.prepared,
 			this->remote, this->exported);
 
-	/* The remote client will INACTIVE itself and remove itself from the loop to avoid
-	 * being scheduled.
-	 * The server will mark remote nodes as FINISHED. This will make sure the node will not
-	 * trigger the peers anymore when it will stop because we do that on the server side
-	 * because the client might simply be dead and not able to resume anything.
-	 */
-	new_state = this->remote ? PW_NODE_ACTIVATION_FINISHED : PW_NODE_ACTIVATION_INACTIVE;
-
-	old_state = SPA_ATOMIC_XCHG(this->rt.target.activation->status, new_state);
+	/* We mark ourself as finished now, this will avoid going further into the process loop
+	 * in case our fd was ready (removing ourselfs from the loop should avoid that as well).
+	 * If we were supposed to be scheduled make sure we continue the graph for the peers we
+	 * were supposed to trigger */
+	old_state = SPA_ATOMIC_XCHG(this->rt.target.activation->status, PW_NODE_ACTIVATION_INACTIVE);
 	if (PW_NODE_ACTIVATION_PENDING_TRIGGER(old_state))
 		trigger = get_time_ns(this->rt.target.system);
 
-- 
2.51.0

