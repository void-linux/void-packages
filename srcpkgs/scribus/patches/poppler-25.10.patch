--- a/scribus/plugins/import/pdf/slaoutput.cpp
+++ b/scribus/plugins/import/pdf/slaoutput.cpp
@@ -33,6 +33,14 @@ for which a new license (GPL+exception)
 
 namespace
 {
+std::size_t goo_string_len(const GooString *str)
+{
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 10, 0)
+	return str->size();
+#else
+	return str->getLength();
+#endif
+}
 	// Compute the intersection of two paths while considering the fillrule of each of them.
 	// QPainterPath has the right interface to do the operation but is currently buggy.
 	// See for example https://bugreports.qt.io/browse/QTBUG-83102. Thus this function
@@ -4080,25 +4088,25 @@ void SlaOutputDev::pushGroup(const QStri
 
 QString SlaOutputDev::UnicodeParsedString(const GooString *s1) const
 {
-	if (!s1 || s1->getLength() == 0)
+	if (!s1 || goo_string_len(s1) == 0)
 		return QString();
 	bool isUnicode;
 	int i;
 	Unicode u;
 	QString result;
-	if ((s1->getChar(0) & 0xff) == 0xfe && (s1->getLength() > 1 && (s1->getChar(1) & 0xff) == 0xff))
+	if ((s1->getChar(0) & 0xff) == 0xfe && (goo_string_len(s1) > 1 && (s1->getChar(1) & 0xff) == 0xff))
 	{
 		isUnicode = true;
 		i = 2;
-		result.reserve((s1->getLength() - 2) / 2);
+		result.reserve((goo_string_len(s1) - 2) / 2);
 	}
 	else
 	{
 		isUnicode = false;
 		i = 0;
-		result.reserve(s1->getLength());
+		result.reserve(goo_string_len(s1));
 	}
-	while (i < s1->getLength())
+	while (i < goo_string_len(s1))
 	{
 		if (isUnicode)
 		{
--- a/scribus/plugins/import/pdf/importpdf.cpp
+++ b/scribus/plugins/import/pdf/importpdf.cpp
@@ -65,6 +65,16 @@ for which a new license (GPL+exception)
 #include "ui/multiprogressdialog.h"
 #include "ui/propertiespalette.h"
 
+static inline
+std::size_t goo_string_len(const GooString *str)
+{
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 10, 0)
+	return str->size();
+#else
+	return str->getLength();
+#endif
+}
+
 PdfPlug::PdfPlug(ScribusDoc* doc, int flags)
 {
 	m_tmpSele = new Selection(this, false);
@@ -928,25 +938,25 @@ QRectF PdfPlug::getCBox(int box, int pgN
 
 QString PdfPlug::UnicodeParsedString(const GooString *s1)
 {
-	if (!s1 || s1->getLength() == 0)
+	if (!s1 || goo_string_len(s1) == 0)
 		return QString();
 	bool isUnicode;
 	int i;
 	Unicode u;
 	QString result;
-	if ((s1->getChar(0) & 0xff) == 0xfe && (s1->getLength() > 1 && (s1->getChar(1) & 0xff) == 0xff))
+	if ((s1->getChar(0) & 0xff) == 0xfe && (goo_string_len(s1) > 1 && (s1->getChar(1) & 0xff) == 0xff))
 	{
 		isUnicode = true;
 		i = 2;
-		result.reserve((s1->getLength() - 2) / 2);
+		result.reserve((goo_string_len(s1) - 2) / 2);
 	}
 	else
 	{
 		isUnicode = false;
 		i = 0;
-		result.reserve(s1->getLength());
+		result.reserve(goo_string_len(s1));
 	}
-	while (i < s1->getLength())
+	while (i < goo_string_len(s1))
 	{
 		if (isUnicode)
 		{
