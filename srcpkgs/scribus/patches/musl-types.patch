--- a/scribus/third_party/pgf/PGFplatform.h
+++ b/scribus/third_party/pgf/PGFplatform.h
@@ -341,14 +341,6 @@
 #define __POSIX__ 
 #endif 
 
-#ifndef off64_t 
-#define off64_t off_t 
-#endif 
-
-#ifndef lseek64 
-#define lseek64 lseek 
-#endif 
-
 #endif // __NetBSD__ or __OpenBSD__ or __FreeBSD__ or __HAIKU__
 
 
@@ -529,39 +521,21 @@
 }
 
 __inline OSError GetFPos(HANDLE hFile, UINT64 *pos) {
-	#ifdef __APPLE__
-		off_t ret;
-		if ((ret = lseek(hFile, 0, SEEK_CUR)) == -1) {
-			return errno;
-		} else {
-			*pos = (UINT64)ret;
-			return NoError;
-		}
-	#else
-		off64_t ret;
-		if ((ret = lseek64(hFile, 0, SEEK_CUR)) == -1) {
-			return errno;
-		} else {
-			*pos = (UINT64)ret;
-			return NoError;
-		}
-	#endif
+	off_t ret;
+	if ((ret = lseek(hFile, 0, SEEK_CUR)) == -1) {
+		return errno;
+	} else {
+		*pos = (UINT64)ret;
+		return NoError;
+	}
 }
 
 __inline OSError SetFPos(HANDLE hFile, int posMode, INT64 posOff) {
-	#ifdef __APPLE__
-		if ((lseek(hFile, (off_t)posOff, posMode)) == -1) {
-			return errno;
-		} else {
-			return NoError;
-		}
-	#else
-		if ((lseek64(hFile, (off64_t)posOff, posMode)) == -1) {
-			return errno;
-		} else {
-			return NoError;
-		}
-	#endif
+	if ((lseek(hFile, (off_t)posOff, posMode)) == -1) {
+		return errno;
+	} else {
+		return NoError;
+	}
 }
 
 #endif /* __POSIX__ */
