--- a/src/img2pdf.py
+++ b/src/img2pdf.py
@@ -3308,10 +3308,10 @@ RGB.""",
     outargs.add_argument(
         "--pdfa",
         nargs="?",
-        const="/usr/share/color/icc/sRGB.icc",
+        const="/usr/share/color/icc/colord/sRGB.icc",
         default=None,
         help="Output a PDF/A-1b complient document. By default, this will "
-        "embed /usr/share/color/icc/sRGB.icc as the color profile.",
+        "embed /usr/share/color/icc/colord/sRGB.icc as the color profile.",
     )
 
     sizeargs = parser.add_argument_group(
--- a/src/img2pdf_test.py
+++ b/src/img2pdf_test.py
@@ -312,7 +312,7 @@ def compare_ghostscript(tmpdir, img, pdf, gsdevice="png16m", exact=True, icc=Fal
                     "AE",
                     "(",
                     "-profile",
-                    "/usr/share/color/icc/ghostscript/srgb.icc",
+                    "/usr/share/color/icc/colord/sRGS.icc",
                     "-depth",
                     "8",
                     str(img),
@@ -667,11 +667,11 @@ def tmp_icc_png(tmp_path_factory, alpha):
         str(tmp_icc_png),
         8,
         2,
-        iccp="/usr/share/color/icc/sRGB.icc",
+        iccp="/usr/share/color/icc/colord/sRGB.icc",
     )
     assert (
         hashlib.md5(tmp_icc_png.read_bytes()).hexdigest()
-        == "d09865464626a87b4e7f398e1f914cca"
+        == "b20cad5586ef280995bbf9afd30d2257"
     )
     yield tmp_icc_png
     tmp_icc_png.unlink()
@@ -4272,7 +4272,7 @@ def png_icc_pdf(tmp_path_factory, tmp_icc_png, request):
         assert p.pages[0].Resources.XObject.Im0.ColorSpace[1].Alternate == "/DeviceRGB"
         assert (
             p.pages[0].Resources.XObject.Im0.ColorSpace[1].read_bytes()
-            == pathlib.Path("/usr/share/color/icc/sRGB.icc").read_bytes()
+            == pathlib.Path("/usr/share/color/icc/colord/sRGB.icc").read_bytes()
         )
         assert p.pages[0].Resources.XObject.Im0.DecodeParms.BitsPerComponent == 8
         assert p.pages[0].Resources.XObject.Im0.DecodeParms.Colors == 3
