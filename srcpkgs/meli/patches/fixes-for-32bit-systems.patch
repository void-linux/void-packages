--- melib/src/backends/notmuch.rs
+++ melib/src/backends/notmuch.rs
@@ -81,7 +81,7 @@ impl DbConnection {
             call!(self.lib, notmuch_database_get_revision)(
                 *self.inner.read().unwrap(),
                 std::ptr::null_mut(),
-            )
+            ) as u64
         }
     }
 
--- melib/src/datetime.rs
+++ melib/src/datetime.rs
@@ -69,8 +69,7 @@ extern "C" {
 pub fn timestamp_to_string(timestamp: UnixTimestamp, fmt: Option<&str>) -> String {
     let mut new_tm: ::libc::tm = unsafe { std::mem::zeroed() };
     unsafe {
-        let i: i64 = timestamp.try_into().unwrap_or(0);
-        localtime_r(&i as *const i64, &mut new_tm as *mut ::libc::tm);
+        localtime_r(&(timestamp as ::libc::time_t), &mut new_tm);
     }
     let fmt = fmt
         .map(CString::new)
--- melib/src/lib.rs
+++ melib/src/lib.rs
@@ -239,13 +239,13 @@ pub mod shellexpand {
             let mut buf: Vec<u8> = Vec::with_capacity(BUF_SIZE);
             let mut entries = SmallVec::new();
             loop {
-                let n: i64 = unsafe {
+                let n = unsafe {
                     ::libc::syscall(
                         ::libc::SYS_getdents64,
                         dir.as_raw_fd(),
                         buf.as_ptr(),
                         BUF_SIZE - 256,
-                    )
+                    ) as isize
                 };
                 if n < 0 {
                     return SmallVec::new();
