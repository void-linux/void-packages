# Template file for 'CLion'
pkgname=CLion
version=2022.3.3
revision=1
archs="x86_64 aarch64"
wrksrc="clion-${version}"
depends="giflib libXtst jetbrains-jdk17"
short_desc="Smart cross-platform IDE for C and C++"
maintainer="Anton Afanasyev <anton@doubleasoftware.com>"
license="custom:Commercial"
homepage="https://www.jetbrains.com/clion"
distfiles="https://download.jetbrains.com/cpp/CLion-${version}.tar.gz"
checksum=1b46ff0791bcb38ecb39c5f4a99941f99ed73d4f6d924a2042fdb55afc5fc03d
repository=nonfree
restricted=yes
nopie=yes
# JetBrains' tools are self-sufficient and while they include code that appears to be linked to libs from other packages, these libs are either included in the tool package, or the code works by looking for one of several supported libs.
noverifyrdeps=yes
nostrip=yes
noshlibprovides=yes
python_version=3

post_extract() {
	# Remove files for other OSes and/or CPU architectures
	rm -rf plugins/cwm-plugin/quiche-native/{darwin-aarch64,darwin-x86-64,win32-x86-64}
	rm -rf plugins/performanceTesting/bin/{libyjpagent.dylib,yjpagent.dll,yjpagent64.dll,libyjpagent.so}
	rm -rf plugins/python-ce/helpers/pydev/pydevd_attach_to_process/{attach_x86.dylib,attach_x86_64.dylib,attach_amd64.dll,attach_x86.dll,attach_linux_x86.so}
	rm -rf lib/pty4j-native/linux/{x86,mips64el,arm,ppc64le}

	case "$XBPS_TARGET_MACHINE" in
		x86_64)
			rm -rf lib/pty4j-native/linux/aarch64
			;;
		aarch64)
			rm -rf lib/pty4j-native/linux/x86-64
			rm -rf plugins/performanceTesting/bin/libyjpagent64.so
			rm -rf plugins/python-ce/helpers/pydev/pydevd_attach_to_process/attach_linux_amd64.so
			;;
	esac

	# Packaged in separate packages
	mkdir -p _bin
	mv bin/{cmake,gdb,lldb} _bin/
}

_TARGET_PATH="usr/lib/${pkgname}"
do_install() {
	vmkdir usr/bin
	vmkdir ${_TARGET_PATH}

	local i
	for i in license/* ; do
		vlicense $i
	done

	local launcher_path="bin/clion.sh"
	sed -i '1 s/$/\nCLION_JDK=${CLION_JDK:-${IDEA_JDK}}/' "${launcher_path}"
	vcopy bin ${_TARGET_PATH}
	vcopy help ${_TARGET_PATH}
	vcopy lib ${_TARGET_PATH}
	vcopy plugins ${_TARGET_PATH}
	vcopy product-info.json ${_TARGET_PATH}
	vcopy build.txt ${_TARGET_PATH}

	ln -sf "/${_TARGET_PATH}/${launcher_path}" "${DESTDIR}/usr/bin/${pkgname}"
}

CLion-cmake_package() {
	short_desc+=" - bundled CMake"
	depends="${sourcepkg}>=${version}_${revision}"
	noverifyrdeps=yes
	nostrip=yes
	noshlibprovides=yes
	pkg_install() {
		vmkdir ${_TARGET_PATH}/bin
		vcopy _bin/cmake ${_TARGET_PATH}/bin
	}
}

CLion-gdb_package() {
	short_desc+=" - bundled GDB"
	depends="${sourcepkg}>=${version}_${revision}"
	noverifyrdeps=yes
	nostrip=yes
	noshlibprovides=yes
	pkg_install() {
		vmkdir ${_TARGET_PATH}/bin
		vcopy _bin/gdb ${_TARGET_PATH}/bin
	}
}

CLion-lldb_package() {
	short_desc+=" - bundled LLDB"
	depends="${sourcepkg}>=${version}_${revision}"
	noverifyrdeps=yes
	nostrip=yes
	noshlibprovides=yes
	pkg_install() {
		vmkdir ${_TARGET_PATH}/bin
		vcopy _bin/lldb ${_TARGET_PATH}/bin
	}
}
