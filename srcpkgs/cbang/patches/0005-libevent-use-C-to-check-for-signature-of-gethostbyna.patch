From 9239db8606320967e9e8526f68acd3e641c60ebb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C4=90o=C3=A0n=20Tr=E1=BA=A7n=20C=C3=B4ng=20Danh?=
 <congdanhqx@gmail.com>
Date: Sun, 17 May 2020 22:56:41 +0700
Subject: [PATCH 5/5] libevent: use C++ to check for signature of
 gethostbyname_r
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

C++ by definition requires matching prototype (both number of arguments,
order of arguments, and type of arguments) to be compilable.

Use this property to check for signature of gethostbyname_r(3) at
compile time in order to support cross compiling.

Signed-off-by: Đoàn Trần Công Danh <congdanhqx@gmail.com>
---
 src/libevent/SConscript | 23 ++++++++++++++++++++---
 1 file changed, 20 insertions(+), 3 deletions(-)

diff --git src/libevent/SConscript src/libevent/SConscript
index f9dceaa5..be56e29a 100644
--- src/libevent/SConscript
+++ src/libevent/SConscript
@@ -184,6 +184,14 @@ def CheckStructMember(ctx, struct, member, includes = None):
 conf.AddTest('CheckStructMember', CheckStructMember)
 
 
+def CheckCompileCxx(ctx, msg, src):
+    ctx.Message('Checking for %s... ' % msg)
+    ret = ctx.TryCompile(src + '\n', '.cpp')
+    ctx.Result(ret)
+    return ret
+
+conf.AddTest('CheckCompileCxx', CheckCompileCxx)
+
 # General compile and run check
 def CheckRun(ctx, msg, src):
     ctx.Message('Checking for %s... ' % msg)
@@ -213,6 +221,9 @@ structs = 'addrinfo in6_addr sockaddr_in6 sockaddr_storage'
 sizeof = ['int', 'long', 'long long', 'off_t', 'short', 'size_t', 'void *']
 
 gethostbyname_r_3_arg_src = '''
+  #ifndef __cplusplus
+  #error must be compiled as cxx
+  #endif
   #define _BSD_SOURCE
   #include <netdb.h>
   int main(int argc, char **argv) {
@@ -224,6 +235,9 @@ gethostbyname_r_3_arg_src = '''
 '''
 
 gethostbyname_r_5_arg_src = '''
+  #ifndef __cplusplus
+  #error must be compiled as cxx
+  #endif
   #define _BSD_SOURCE
   #include <netdb.h>
   int main(int argc, char **argv) {
@@ -237,6 +251,9 @@ gethostbyname_r_5_arg_src = '''
 '''
 
 gethostbyname_r_6_arg_src = '''
+  #ifndef __cplusplus
+  #error must be compiled as cxx
+  #endif
   #define _BSD_SOURCE
   #include <netdb.h>
   int main(int argc, char **argv) {
@@ -336,13 +353,13 @@ def get_event_config_defs():
     if 'HAVE_EPOLL_CREATE' in defs: defs['HAVE_EPOLL'] = '1'
 
     # gethostbyname_r
-    if conf.CheckRun('3 arg gethostbyname_r()', gethostbyname_r_3_arg_src):
+    if conf.CheckCompileCxx('3 arg gethostbyname_r()', gethostbyname_r_3_arg_src):
         defs['HAVE_GETHOSTBYNAME_R_3_ARG'] = '1'
 
-    if conf.CheckRun('5 arg gethostbyname_r()', gethostbyname_r_5_arg_src):
+    if conf.CheckCompileCxx('5 arg gethostbyname_r()', gethostbyname_r_5_arg_src):
         defs['HAVE_GETHOSTBYNAME_R_5_ARG'] = '1'
 
-    if conf.CheckRun('6 arg gethostbyname_r()', gethostbyname_r_6_arg_src):
+    if conf.CheckCompileCxx('6 arg gethostbyname_r()', gethostbyname_r_6_arg_src):
         defs['HAVE_GETHOSTBYNAME_R_6_ARG'] = '1'
 
 
-- 
2.26.2.672.g232c24e857

