--- a/src/analyze/CMakeLists.txt
+++ b/src/analyze/CMakeLists.txt
@@ -2,7 +2,7 @@ if (ECM_FOUND)
     include(ECMEnableSanitizers)
 endif()
 
-find_package(Boost 1.41.0 REQUIRED COMPONENTS iostreams program_options system filesystem)
+find_package(Boost 1.41.0 REQUIRED COMPONENTS iostreams program_options filesystem)
 
 configure_file(analyze_config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/analyze_config.h)
 
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -32,7 +32,7 @@ if (APPIMAGE_BUILD)
 endif()
 
 include(FeatureSummary)
-find_package(Boost 1.60.0 ${REQUIRED_IN_APPIMAGE} COMPONENTS system filesystem iostreams container)
+find_package(Boost 1.60.0 ${REQUIRED_IN_APPIMAGE} COMPONENTS filesystem iostreams container)
 set_package_properties(Boost PROPERTIES TYPE RECOMMENDED PURPOSE "Boost container libraries can greatly improve performance (via pmr allocators)")
 find_package(Threads REQUIRED)
 find_package(ZLIB REQUIRED)
--- a/tests/auto/CMakeLists.txt
+++ b/tests/auto/CMakeLists.txt
@@ -11,7 +11,7 @@ include_directories(
     ${CMAKE_CURRENT_SOURCE_DIR}/../../src/track
 )
 
-if ("${Boost_FILESYSTEM_FOUND}" AND "${Boost_SYSTEM_FOUND}")
+if ("${Boost_FILESYSTEM_FOUND}")
     if (CMAKE_SYSTEM_NAME STREQUAL "FreeBSD")
         set(LIBUTIL_LIBRARY "util")
     endif()
@@ -41,7 +41,7 @@ target_include_directories(tst_trace PRI
 
 add_test(NAME tst_trace COMMAND tst_trace)
 
-if ("${Boost_FILESYSTEM_FOUND}" AND "${Boost_SYSTEM_FOUND}")
+if ("${Boost_FILESYSTEM_FOUND}")
     add_executable(tst_libheaptrack
         tst_libheaptrack.cpp
         ../../src/track/libheaptrack.cpp)
@@ -53,7 +53,6 @@ if ("${Boost_FILESYSTEM_FOUND}" AND "${B
             ${LIBUTIL_LIBRARY}
             heaptrack_unwind
             rt
-            ${Boost_SYSTEM_LIBRARY}
             ${Boost_FILESYSTEM_LIBRARY}
     )
     add_test(NAME tst_libheaptrack COMMAND tst_libheaptrack)
@@ -61,7 +60,6 @@ if ("${Boost_FILESYSTEM_FOUND}" AND "${B
     add_executable(tst_io tst_io.cpp)
     set_target_properties(tst_io PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/${BIN_INSTALL_DIR}")
     target_link_libraries(tst_io
-            ${Boost_SYSTEM_LIBRARY}
             ${Boost_FILESYSTEM_LIBRARY}
     )
     add_test(NAME tst_io COMMAND tst_io)
@@ -72,7 +70,6 @@ if ("${Boost_FILESYSTEM_FOUND}" AND "${B
             add_executable(tst_parser tst_parser.cpp)
             set_target_properties(tst_parser PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/${BIN_INSTALL_DIR}")
             target_link_libraries(tst_parser
-                    ${Boost_SYSTEM_LIBRARY}
                     ${Boost_FILESYSTEM_LIBRARY}
                     heaptrack_gui_private
                     Qt${QT_VERSION_MAJOR}::Test
--- a/tests/auto/no_asan/CMakeLists.txt
+++ b/tests/auto/no_asan/CMakeLists.txt
@@ -1,9 +1,8 @@
-if ("${Boost_FILESYSTEM_FOUND}" AND "${Boost_SYSTEM_FOUND}")
+if ("${Boost_FILESYSTEM_FOUND}")
     add_executable(tst_inject tst_inject.cpp)
     set_target_properties(tst_inject PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/${BIN_INSTALL_DIR}")
     target_link_libraries(tst_inject
             ${CMAKE_DL_LIBS}
-            ${Boost_SYSTEM_LIBRARY}
             ${Boost_FILESYSTEM_LIBRARY}
     )
     add_test(NAME tst_inject COMMAND tst_inject)
