# src: upstream/master

From f540b95cc7446fbf41b4b3fa9b6f275b580de638 Mon Sep 17 00:00:00 2001
From: Sergio Martins <smartins@kde.org>
Date: Sun, 26 May 2019 01:48:21 +0100
Subject: [PATCH] Use 'unsigned int' instead of 'uint'

The former is cross platform and makes it buildable with MSVC.
As it's just a couple of places there's no need for a typedef.
---
 src/analyze/accumulatedtracedata.cpp | 4 ++--
 src/util/indices.h                   | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/analyze/accumulatedtracedata.cpp b/src/analyze/accumulatedtracedata.cpp
index f3f07a7..268c17f 100644
--- src/analyze/accumulatedtracedata.cpp
+++ src/analyze/accumulatedtracedata.cpp
@@ -186,7 +186,7 @@ bool AccumulatedTraceData::read(istream& in, const ParsePass pass)
     for (auto& allocation : allocations) {
         allocation.clearCost();
     }
-    uint fileVersion = 0;
+    unsigned int fileVersion = 0;
     bool debuggeeEncountered = false;
 
     // required for backwards compatibility
@@ -385,7 +385,7 @@ bool AccumulatedTraceData::read(istream& in, const ParsePass pass)
             totalCost = {};
             fromAttached = true;
         } else if (reader.mode() == 'v') {
-            uint heaptrackVersion = 0;
+            unsigned int heaptrackVersion = 0;
             reader >> heaptrackVersion;
             if (!(reader >> fileVersion) && heaptrackVersion == 0x010200) {
                 // backwards compatibility: before the 1.0.0, I actually
diff --git a/src/util/indices.h b/src/util/indices.h
index ee1f777..8f21bba 100644
--- src/util/indices.h
+++ src/util/indices.h
@@ -64,7 +64,7 @@ struct Index
 };
 
 template <typename Base>
-uint qHash(const Index<Base> index, uint seed = 0) noexcept
+unsigned int qHash(const Index<Base> index, unsigned int seed = 0) noexcept
 {
     return qHash(index.index, seed);
 }
