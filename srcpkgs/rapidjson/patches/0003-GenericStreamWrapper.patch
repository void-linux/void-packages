From 79d9c71f98b0f1cfea5fae2fe33595efcbf79028 Mon Sep 17 00:00:00 2001
From: KaitoHH <hh.kaito@gmail.com>
Date: Tue, 26 Sep 2017 16:03:09 +0800
Subject: [PATCH] fix stream wrapper initializer

fix initialization warning

add special wrapper for AutoUTFInputStream
---
 include/rapidjson/error/error.h |  4 ++--
 include/rapidjson/stream.h      | 16 +++++++++++-----
 2 files changed, 13 insertions(+), 7 deletions(-)

diff --git a/include/rapidjson/error/error.h b/include/rapidjson/error/error.h
index be8057911..618a6cf69 100644
--- a/include/rapidjson/error/error.h
+++ b/include/rapidjson/error/error.h
@@ -106,9 +106,9 @@
 struct ParseResult {
 public:
     //! Default constructor, no error.
-    ParseResult() : code_(kParseErrorNone), offset_(0) {}
+    ParseResult() : code_(kParseErrorNone), offset_(0), line_(0), col_(0) {}
     //! Constructor to set an error.
-    ParseResult(ParseErrorCode code, size_t offset) : code_(code), offset_(offset) {}
+    ParseResult(ParseErrorCode code, size_t offset) : code_(code), offset_(offset), line_(0), col_(0) {}
 
     //! Get the error code.
     ParseErrorCode Code() const { return code_; }
diff --git a/include/rapidjson/stream.h b/include/rapidjson/stream.h
index 4e4ba80a4..a315d3f0a 100644
--- a/include/rapidjson/stream.h
+++ b/include/rapidjson/stream.h
@@ -115,7 +115,7 @@ class GenericStreamWrapper {
     typedef typename Encoding::Ch Ch;
     size_t line_;
     size_t col_;
-    GenericStreamWrapper(InputStream& is): is_(is), line_(1), col_(0) {}
+    GenericStreamWrapper(InputStream& is): line_(1), col_(0), is_(is) {}
     
     Ch Peek() const { return is_.Peek(); }
     
@@ -133,11 +133,17 @@ class GenericStreamWrapper {
     size_t Tell() { return is_.Tell(); }
     
     Ch* PutBegin() { return is_.PutBegin(); }
-    void Put(Ch ch) { return is_.Put(ch); }
-    void Flush() { return is_.Flush(); }
-    size_t PutEnd(Ch* ch) { is_.PutEnd(ch); }	
+    void Put(Ch ch) { is_.Put(ch); }
+    void Flush() { is_.Flush(); }
+    size_t PutEnd(Ch* ch) { return is_.PutEnd(ch); }	
     
-    const Ch* Peek4() const { is_.Peek4(); }
+    // wrapper for MemoryStream
+    const Ch* Peek4() const { return is_.Peek4(); }
+    
+    // wrapper for AutoUTFInputStream
+    UTFType GetType() const { return is_.GetType(); }
+    bool HasBOM() const { return is_.HasBOM(); }
+
 private:
     InputStream& is_;
 };
