--- a/src/3rdparty/chromium/net/dns/dns_config_service_linux.cc
+++ b/src/3rdparty/chromium/net/dns/dns_config_service_linux.cc
@@ -432,11 +432,13 @@ class DnsConfigServiceLinux::ConfigReade
     base::ScopedBlockingCall scoped_blocking_call(
         FROM_HERE, base::BlockingType::MAY_BLOCK);
 
+#if defined(__GLIBC__)
     std::unique_ptr<struct __res_state> res = resolv_reader_->GetResState();
     if (res) {
       dns_config_ = ConvertResStateToDnsConfig(*res.get());
       resolv_reader_->CloseResState(res.get());
     }
+#endif
 
     UMA_HISTOGRAM_BOOLEAN("Net.DNS.DnsConfig.Resolv.Read",
                           dns_config_.has_value());
@@ -486,6 +488,7 @@ class DnsConfigServiceLinux::ConfigReade
 
 std::unique_ptr<struct __res_state>
 DnsConfigServiceLinux::ResolvReader::GetResState() {
+#if defined(__GLIBC__)
   auto res = std::make_unique<struct __res_state>();
   memset(res.get(), 0, sizeof(struct __res_state));
 
@@ -495,11 +498,16 @@ DnsConfigServiceLinux::ResolvReader::Get
   }
 
   return res;
+#else
+  return nullptr;
+#endif
 }
 
 void DnsConfigServiceLinux::ResolvReader::CloseResState(
     struct __res_state* res) {
+#if defined(__GLIBC__)
   res_nclose(res);
+#endif
 }
 
 DnsConfigServiceLinux::DnsConfigServiceLinux()
--- a/src/3rdparty/chromium/net/dns/dns_reloader.cc
+++ b/src/3rdparty/chromium/net/dns/dns_reloader.cc
@@ -4,8 +4,7 @@
 
 #include "net/dns/dns_reloader.h"
 
-#if defined(OS_POSIX) && !defined(OS_APPLE) && !defined(OS_OPENBSD) && \
-    !defined(OS_ANDROID) && !defined(OS_FUCHSIA)
+#ifdef __GLIBC__
 
 #include <resolv.h>
 
--- a/src/3rdparty/chromium/net/dns/host_resolver_manager.cc
+++ b/src/3rdparty/chromium/net/dns/host_resolver_manager.cc
@@ -2720,8 +2720,7 @@ HostResolverManager::HostResolverManager
   NetworkChangeNotifier::AddConnectionTypeObserver(this);
   if (system_dns_config_notifier_)
     system_dns_config_notifier_->AddObserver(this);
-#if defined(OS_POSIX) && !defined(OS_APPLE) && !defined(OS_OPENBSD) && \
-    !defined(OS_ANDROID)
+#ifdef __GLIBC__
   EnsureDnsReloaderInit();
 #endif
 
--- a/src/3rdparty/chromium/net/dns/host_resolver_proc.cc
+++ b/src/3rdparty/chromium/net/dns/host_resolver_proc.cc
@@ -176,8 +176,7 @@ int SystemHostResolverCall(const std::st
   base::ScopedBlockingCall scoped_blocking_call(FROM_HERE,
                                                 base::BlockingType::WILL_BLOCK);
 
-#if defined(OS_POSIX) && !defined(OS_APPLE) && !defined(OS_OPENBSD) && \
-    !defined(OS_ANDROID) && !defined(OS_FUCHSIA)
+#ifdef __GLIBC__
   DnsReloaderMaybeReload();
 #endif
   absl::optional<AddressInfo> ai;
