--- a/cmake/internaldeps.cmake	2021-06-18 17:30:49.000000000 +0200
+++ -	2022-02-05 22:00:44.275394784 +0100
@@ -30,9 +30,9 @@
   ENDIF(IN_SOURCETREE)
 
   FIND_PATH(INTERFACE_INCLUDE_DIR raceman.h
-            PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
+            PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
   FIND_PATH(INTERFACE_INCLUDE_DIR raceman.h
-            PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+            PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
   MARK_AS_ADVANCED(INTERFACE_INCLUDE_DIR)
   IF(INTERFACE_INCLUDE_DIR)
     INCLUDE_DIRECTORIES(${INTERFACE_INCLUDE_DIR})
@@ -64,8 +64,8 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_PORTABILITY_INCLUDE_DIR portability.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
-      FIND_PATH(SDLIB_PORTABILITY_INCLUDE_DIR portability.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+      FIND_PATH(SDLIB_PORTABILITY_INCLUDE_DIR portability.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+      FIND_PATH(SDLIB_PORTABILITY_INCLUDE_DIR portability.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
       MARK_AS_ADVANCED(SDLIB_PORTABILITY_INCLUDE_DIR)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_PORTABILITY_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "tgf")
@@ -74,8 +74,8 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_TGF_INCLUDE_DIR tgf.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
-      FIND_PATH(SDLIB_TGF_INCLUDE_DIR tgf.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+      FIND_PATH(SDLIB_TGF_INCLUDE_DIR tgf.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+      FIND_PATH(SDLIB_TGF_INCLUDE_DIR tgf.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
       MARK_AS_ADVANCED(SDLIB_TGF_INCLUDE_DIR)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_TGF_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "tgfclient")
@@ -84,8 +84,8 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_TGFCLIENT_INCLUDE_DIR tgfclient.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
-      FIND_PATH(SDLIB_TGFCLIENT_INCLUDE_DIR tgfclient.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+      FIND_PATH(SDLIB_TGFCLIENT_INCLUDE_DIR tgfclient.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+      FIND_PATH(SDLIB_TGFCLIENT_INCLUDE_DIR tgfclient.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
       MARK_AS_ADVANCED(SDLIB_TGFCLIENT_INCLUDE_DIR)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_TGFCLIENT_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "tgfdata")
@@ -94,9 +94,9 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_TGFDATA_INCLUDE_DIR tgfdata.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
+      FIND_PATH(SDLIB_TGFDATA_INCLUDE_DIR tgfdata.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
       FIND_PATH(SDLIB_TGFDATA_INCLUDE_DIR tgfdata.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
-      MARK_AS_ADVANCED(SDLIB_TGFDATA_INCLUDE_DIR)
+      MARK_AS_ADVANCED(SDLIB_TGFDATA_INCLUDE_DIR NO_CMAKE_FIND_ROOT_PATH)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_TGFDATA_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "math")
       IF(IN_SOURCETREE)
@@ -104,8 +104,8 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_MATH_INCLUDE_DIR linalg_t.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include PATH_SUFFIXES "" math tmath NO_DEFAULT_PATH)
-      FIND_PATH(SDLIB_MATH_INCLUDE_DIR linalg_t.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include PATH_SUFFIXES "" math tmath)
+      FIND_PATH(SDLIB_MATH_INCLUDE_DIR linalg_t.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include PATH_SUFFIXES "" math tmath NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+      FIND_PATH(SDLIB_MATH_INCLUDE_DIR linalg_t.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include PATH_SUFFIXES "" math tmath NO_CMAKE_FIND_ROOT_PATH)
       MARK_AS_ADVANCED(SDLIB_MATH_INCLUDE_DIR)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_MATH_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "txml")
@@ -116,8 +116,8 @@
         ELSE(IN_SOURCETREE)
           SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
         ENDIF(IN_SOURCETREE)
-        FIND_PATH(SDLIB_TXML_INCLUDE_DIR xml.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
-        FIND_PATH(SDLIB_TXML_INCLUDE_DIR xml.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+        FIND_PATH(SDLIB_TXML_INCLUDE_DIR xml.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+        FIND_PATH(SDLIB_TXML_INCLUDE_DIR xml.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
         MARK_AS_ADVANCED(SDLIB_TXML_INCLUDE_DIR)
         SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_TXML_INCLUDE_DIR)
       ELSE(NOT OPTION_3RDPARTY_EXPAT)
@@ -129,8 +129,8 @@
         ELSE(IN_SOURCETREE)
           SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
         ENDIF(IN_SOURCETREE)
-        FIND_PATH(SDLIB_EPHEMERIS_INCLUDE_DIR ephemeris.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
-        FIND_PATH(SDLIB_EPHEMERIS_INCLUDE_DIR ephemeris.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+        FIND_PATH(SDLIB_EPHEMERIS_INCLUDE_DIR ephemeris.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+        FIND_PATH(SDLIB_EPHEMERIS_INCLUDE_DIR ephemeris.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
         MARK_AS_ADVANCED(SDLIB_EPHEMERIS_INCLUDE_DIR)
         SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_EPHEMERIS_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "robottools")
@@ -139,8 +139,8 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_ROBOTTOOLS_INCLUDE_DIR robottools.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
-      FIND_PATH(SDLIB_ROBOTTOOLS_INCLUDE_DIR robottools.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+      FIND_PATH(SDLIB_ROBOTTOOLS_INCLUDE_DIR robottools.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+      FIND_PATH(SDLIB_ROBOTTOOLS_INCLUDE_DIR robottools.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
       MARK_AS_ADVANCED(SDLIB_ROBOTTOOLS_INCLUDE_DIR)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_ROBOTTOOLS_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "learning")
@@ -149,8 +149,8 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_LEARNING_INCLUDE_DIR learn_debug.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include PATH_SUFFIXES "" learning NO_DEFAULT_PATH)
-      FIND_PATH(SDLIB_LEARNING_INCLUDE_DIR learn_debug.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include PATH_SUFFIXES "" learning)
+      FIND_PATH(SDLIB_LEARNING_INCLUDE_DIR learn_debug.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include PATH_SUFFIXES "" learning NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+      FIND_PATH(SDLIB_LEARNING_INCLUDE_DIR learn_debug.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include PATH_SUFFIXES "" learning NO_CMAKE_FIND_ROOT_PATH)
       MARK_AS_ADVANCED(SDLIB_LEARNING_INCLUDE_DIR)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_LEARNING_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "networking")
@@ -159,8 +159,8 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_NETWORKING_INCLUDE_DIR network.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
-      FIND_PATH(SDLIB_NETWORKING_INCLUDE_DIR network.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+      FIND_PATH(SDLIB_NETWORKING_INCLUDE_DIR network.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+      FIND_PATH(SDLIB_NETWORKING_INCLUDE_DIR network.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
       MARK_AS_ADVANCED(SDLIB_NETWORKING_INCLUDE_DIR)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_NETWORKING_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "csnetworking")
@@ -169,8 +169,8 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_CSNETWORKING_INCLUDE_DIR csnetwork.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
-      FIND_PATH(SDLIB_CSNETWORKING_INCLUDE_DIR csnetwork.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+      FIND_PATH(SDLIB_CSNETWORKING_INCLUDE_DIR csnetwork.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+      FIND_PATH(SDLIB_CSNETWORKING_INCLUDE_DIR csnetwork.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
       MARK_AS_ADVANCED(SDLIB_CSNETWORKING_INCLUDE_DIR)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_CSNETWORKING_INCLUDE_DIR)
     ELSEIF(SDLIB_LIB STREQUAL "standardgame")
@@ -179,8 +179,8 @@
       ELSE(IN_SOURCETREE)
         SET(INCLUDE_CANDIDATE ${SD_INCLUDEDIR_ABS})
       ENDIF(IN_SOURCETREE)
-      FIND_PATH(SDLIB_STANDARDGAME_INCLUDE_DIR standardgame.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH)
-      FIND_PATH(SDLIB_STANDARDGAME_INCLUDE_DIR standardgame.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include)
+      FIND_PATH(SDLIB_STANDARDGAME_INCLUDE_DIR standardgame.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+      FIND_PATH(SDLIB_STANDARDGAME_INCLUDE_DIR standardgame.h PATHS ${INCLUDE_CANDIDATE} /usr/include /usr/local/include NO_CMAKE_FIND_ROOT_PATH)
       MARK_AS_ADVANCED(SDLIB_STANDARDGAME_INCLUDE_DIR)
       SET(SDLIB_EXTRA_INCLUDEDIR SDLIB_STANDARDGAME_INCLUDE_DIR)
     ELSE(SDLIB_LIB STREQUAL "portability")
--- a/cmake/macros.cmake	2021-08-07 16:15:15.000000000 +0200
+++ -	2022-02-05 22:03:28.365106061 +0100
@@ -40,8 +40,8 @@
 
 # Determine the source folder if ???
 IF(NOT SOURCE_DIR AND IN_SOURCETREE)
-  FIND_PATH(SOURCE_CMAKE_PATH cmake/macros.cmake PATHS . .. ../.. ../../.. ../../../.. ../../../../.. ../../../../../.. ../../../../../../.. ../../../../../../../.. ${CMAKE_SOURCE_DIR} NO_DEFAULT_PATH)
-  FIND_PATH(SOURCE_CMAKE_PATH cmake/macros.cmake PATHS . .. ../.. ../../.. ../../../.. ../../../../.. ../../../../../.. ../../../../../../.. ../../../../../../../.. ${CMAKE_SOURCE_DIR})
+  FIND_PATH(SOURCE_CMAKE_PATH cmake/macros.cmake PATHS . .. ../.. ../../.. ../../../.. ../../../../.. ../../../../../.. ../../../../../../.. ../../../../../../../.. ${CMAKE_SOURCE_DIR} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+  FIND_PATH(SOURCE_CMAKE_PATH cmake/macros.cmake PATHS . .. ../.. ../../.. ../../../.. ../../../../.. ../../../../../.. ../../../../../../.. ../../../../../../../.. ${CMAKE_SOURCE_DIR} NO_CMAKE_FIND_ROOT_PATH)
   GET_FILENAME_COMPONENT(SOURCE_DIR ${SOURCE_CMAKE_PATH} ABSOLUTE CACHE)
   MARK_AS_ADVANCED(SOURCE_DIR)
   SET(SOURCE_CMAKE_PATH "")
@@ -58,8 +58,8 @@
 
 # Include dir for config.h
 IF(IN_SOURCETREE)
-  FIND_PATH(CONFIGH_INCLUDE_DIR config.h PATHS ${SOURCE_DIR} ${CMAKE_BINARY_DIR} NO_DEFAULT_PATH)
-  FIND_PATH(CONFIGH_INCLUDE_DIR config.h PATHS ${SOURCE_DIR} ${CMAKE_BINARY_DIR})
+  FIND_PATH(CONFIGH_INCLUDE_DIR config.h PATHS ${SOURCE_DIR} ${CMAKE_BINARY_DIR} NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+  FIND_PATH(CONFIGH_INCLUDE_DIR config.h PATHS ${SOURCE_DIR} ${CMAKE_BINARY_DIR} NO_CMAKE_FIND_ROOT_PATH)
   MARK_AS_ADVANCED(CONFIGH_INCLUDE_DIR)
   IF(CONFIGH_INCLUDE_DIR)
     SET(HAVE_CONFIG_H TRUE)
