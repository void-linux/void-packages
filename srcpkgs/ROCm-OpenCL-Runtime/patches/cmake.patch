--- OpenCL-ICD-Loader-6c03f8b58fafd9dd693eaac826749a5cfad515f8/CMakeLists.txt	2019-09-10 11:53:28.000000000 -0400
+++ OpenCL-ICD-Loader-6c03f8b58fafd9dd693eaac826749a5cfad515f8/CMakeLists.txt	2020-04-16 20:16:13.481180757 -0400
@@ -73,11 +73,11 @@
 
 set (OPENCL_ICD_LOADER_HEADERS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/inc CACHE PATH "Path to OpenCL Headers")
 
-add_library (OpenCL ${OPENCL_ICD_LOADER_SOURCES})
-set_target_properties (OpenCL PROPERTIES VERSION "1.2" SOVERSION "1")
+add_library (OpenCL-ROCm ${OPENCL_ICD_LOADER_SOURCES})
+set_target_properties (OpenCL-ROCm PROPERTIES VERSION "1.2" SOVERSION "1")
 
 if (WIN32)
-    target_link_libraries (OpenCL cfgmgr32.lib)
+    target_link_libraries (OpenCL-ROCm cfgmgr32.lib)
 
     option (OPENCL_ICD_LOADER_REQUIRE_WDK "Build with D3DKMT support, which requires the Windows WDK." ON)
     if (OPENCL_ICD_LOADER_REQUIRE_WDK)
@@ -92,10 +92,10 @@
             get_filename_component(WDK_DIRECTORY ${LATEST_D3DKMT_HEADER} DIRECTORY)
             get_filename_component(WDK_DIRECTORY ${WDK_DIRECTORY} DIRECTORY)
             message(STATUS "Found the Windows WDK in: ${WDK_DIRECTORY}")
-            target_compile_definitions(OpenCL PRIVATE OPENCL_ICD_LOADER_REQUIRE_WDK)
-            target_include_directories(OpenCL PRIVATE ${WDK_DIRECTORY}/um)
-            target_include_directories(OpenCL PRIVATE ${WDK_DIRECTORY}/km)
-            target_include_directories(OpenCL PRIVATE ${WDK_DIRECTORY}/shared)
+	    target_compile_definitions(OpenCL-ROCm PRIVATE OPENCL_ICD_LOADER_REQUIRE_WDK)
+	    target_include_directories(OpenCL-ROCm PRIVATE ${WDK_DIRECTORY}/um)
+	    target_include_directories(OpenCL-ROCm PRIVATE ${WDK_DIRECTORY}/km)
+	    target_include_directories(OpenCL-ROCm PRIVATE ${WDK_DIRECTORY}/shared)
         else()
             message(FATAL_ERROR "The Windows WDK was not found. Consider disabling OPENCL_ICD_LOADER_REQUIRE_WDK. Aborting.")
         endif()
@@ -113,25 +113,25 @@
     endif()
 else()
     if (APPLE)
-        target_link_libraries (OpenCL ${CMAKE_THREAD_LIBS_INIT})
+        target_link_libraries (OpenCL-ROCm ${CMAKE_THREAD_LIBS_INIT})
     else ()
-        set_target_properties (OpenCL PROPERTIES LINK_FLAGS "-Wl,--version-script -Wl,${CMAKE_CURRENT_SOURCE_DIR}/loader/linux/icd_exports.map")
-        target_link_libraries (OpenCL ${CMAKE_THREAD_LIBS_INIT})
+        set_target_properties (OpenCL-ROCm PROPERTIES LINK_FLAGS "-Wl,--version-script -Wl,${CMAKE_CURRENT_SOURCE_DIR}/loader/linux/icd_exports.map")
+	target_link_libraries (OpenCL-ROCm ${CMAKE_THREAD_LIBS_INIT})
     endif ()
 endif ()
 
 include_directories (${OPENCL_ICD_LOADER_HEADERS_DIR})
 add_definitions (-DCL_TARGET_OPENCL_VERSION=220)
 
-target_include_directories (OpenCL PRIVATE ${CMAKE_CURRENT_BINARY_DIR} loader)
-target_link_libraries (OpenCL ${CMAKE_DL_LIBS})
+target_include_directories (OpenCL-ROCm PRIVATE ${CMAKE_CURRENT_BINARY_DIR} loader)
+target_link_libraries (OpenCL-ROCm ${CMAKE_DL_LIBS})
 
 include (CTest)
 if (BUILD_TESTING)
     add_subdirectory (test)
 endif()
 
-install (TARGETS OpenCL
+install (TARGETS OpenCL-ROCm
     RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
--- OpenCL-ICD-Loader-6c03f8b58fafd9dd693eaac826749a5cfad515f8/test/loader_test/CMakeLists.txt	2019-09-10 11:53:28.000000000 -0400
+++ OpenCL-ICD-Loader-6c03f8b58fafd9dd693eaac826749a5cfad515f8/test/loader_test/CMakeLists.txt	2020-04-16 20:16:56.647026589 -0400
@@ -12,4 +12,4 @@
     test_clgl.c
     test_image_objects.c )
 
-target_link_libraries (icd_loader_test OpenCL IcdLog)
+target_link_libraries (icd_loader_test OpenCL-ROCm IcdLog)
--- ROCm-OpenCL-Runtime-roc-3.3.0/CMakeLists.txt	2020-04-28 07:29:51.864446603 -0400
+++ ROCm-OpenCL-Runtime-roc-3.3.0/CMakeLists.txt	2020-04-28 07:32:45.245793180 -0400
@@ -101,30 +101,30 @@
 rocm_setup_version( VERSION "2.0.0" )
 
 # MAIN package
-install(PROGRAMS $<TARGET_FILE:clinfo>
-        DESTINATION bin/x86_64
+install(PROGRAMS $<TARGET_FILE:rocm-clinfo>
+        DESTINATION bin
         COMPONENT MAIN)
 install(PROGRAMS $<TARGET_FILE:amdocl64>
-        DESTINATION lib/x86_64
+        DESTINATION lib
         COMPONENT MAIN)
-install(PROGRAMS $<TARGET_FILE:OpenCL>
-        DESTINATION lib/x86_64
+install(PROGRAMS $<TARGET_FILE:OpenCL-ROCm>
+        DESTINATION lib
         COMPONENT MAIN)
-install(PROGRAMS $<TARGET_SONAME_FILE:OpenCL>
-        DESTINATION lib/x86_64
+install(PROGRAMS $<TARGET_SONAME_FILE:OpenCL-ROCm>
+        DESTINATION lib
         COMPONENT MAIN)
 
 # DEV package
 install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/api/opencl/khronos/headers/opencl2.2/CL"
-        DESTINATION include
+	DESTINATION include/rocm
         COMPONENT DEV
         USE_SOURCE_PERMISSIONS
         PATTERN cl_d3d10.h EXCLUDE
         PATTERN cl_d3d11.h EXCLUDE
         PATTERN cl_dx9_media_sharing.h EXCLUDE
         PATTERN cl_egl.h EXCLUDE)
-install(PROGRAMS $<TARGET_LINKER_FILE:OpenCL>
-        DESTINATION lib/x86_64
+install(PROGRAMS $<TARGET_LINKER_FILE:OpenCL-ROCm>
+        DESTINATION lib
         COMPONENT DEV)
 
 # Generic CPACK variables
--- ROCm-OpenCL-Runtime-roc-3.3.0/tools/clinfo/CMakeLists.txt	2020-04-28 07:29:51.882446535 -0400
+++ ROCm-OpenCL-Runtime-roc-3.3.0/tools/clinfo/CMakeLists.txt	2020-04-28 07:30:05.627394732 -0400
@@ -6,6 +6,6 @@
 
 add_definitions(-DHAVE_CL2_HPP)
 
-add_executable(clinfo clinfo.cpp)
+add_executable(rocm-clinfo clinfo.cpp)
 
-target_link_libraries(clinfo OpenCL)
+target_link_libraries(rocm-clinfo OpenCL-ROCm)
