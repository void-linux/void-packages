From 30549c6931972456d1e09ff5dbeecd258a8df72b Mon Sep 17 00:00:00 2001
From: Kim Grasman <kim.grasman@gmail.com>
Date: Thu, 9 Jul 2020 18:47:56 +0200
Subject: [PATCH] Implement Stmt printing with ASTDumper

The Clang API changed in commit 473fbc90d1fbf17e so that Stmt::dump
takes an ASTContext instead of a SourceManager.

Rather than wire a global ASTContext, reimplement PrintableStmt and
PrintStmt to duplicate the most trivial implementations not requiring
ASTContext.

No functional change.
---
 iwyu_ast_util.cc | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/iwyu_ast_util.cc b/iwyu_ast_util.cc
index d3d4dd1f..b19a11fb 100644
--- a/iwyu_ast_util.cc
+++ b/iwyu_ast_util.cc
@@ -25,6 +25,7 @@
 #include "llvm/Support/Casting.h"
 #include "llvm/Support/raw_ostream.h"
 #include "clang/AST/ASTContext.h"
+#include "clang/AST/ASTDumper.h"
 #include "clang/AST/CanonicalType.h"
 #include "clang/AST/Decl.h"
 #include "clang/AST/DeclBase.h"
@@ -46,6 +47,7 @@ namespace clang {
 class FileEntry;
 }  // namespace clang
 
+using clang::ASTDumper;
 using clang::BlockPointerType;
 using clang::CXXConstructExpr;
 using clang::CXXConstructorDecl;
@@ -450,12 +452,14 @@ string PrintableDecl(const Decl* decl, bool terse/*=true*/) {
 string PrintableStmt(const Stmt* stmt) {
   std::string buffer;
   raw_string_ostream ostream(buffer);
-  stmt->dump(ostream, *GlobalSourceManager());
+  ASTDumper dumper(ostream, /*ShowColors=*/false);
+  dumper.Visit(stmt);
   return ostream.str();
 }
 
 void PrintStmt(const Stmt* stmt) {
-  stmt->dump(*GlobalSourceManager());  // This prints to errs().
+  ASTDumper dumper(llvm::errs(), /*ShowColors=*/false);
+  dumper.Visit(stmt);
 }
 
 string PrintableType(const Type* type) {
