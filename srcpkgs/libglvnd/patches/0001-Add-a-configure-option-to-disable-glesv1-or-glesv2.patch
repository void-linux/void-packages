From 3a1fb32c3b2ba0bc28952759c33dc98bb5260125 Mon Sep 17 00:00:00 2001
From: Laurent Carlier <lordheavym@gmail.com>
Date: Tue, 8 Oct 2019 16:34:16 +0000
Subject: [PATCH] Add a configure option to disable glesv1 or glesv2

Because mesa can be built without glesv1 so it breaks autodetection.

Fixes: https://bugs.archlinux.org/task/64032 ('mesa-demos doesn't build, unable to find GLES/gl.h')
---
 configure.ac        | 23 +++++++++++++++--------
 include/Makefile.am | 24 ++++++++++++++++++------
 src/Makefile.am     |  4 +++-
 3 files changed, 36 insertions(+), 15 deletions(-)

diff --git a/configure.ac b/configure.ac
index faa0379..eb68d3b 100644
--- a/configure.ac
+++ b/configure.ac
@@ -70,13 +70,19 @@ if test "x$enable_x11" != "xyes" -a "x$enable_glx" = "xyes" ; then
     AC_MSG_ERROR([Can't build GLX without X11.])
 fi
 
-AC_ARG_ENABLE([gles],
-    [AS_HELP_STRING([--disable-gles],
-        [Do not build the libGLES*.so libraries @<:@default=enabled@:>@])],
-    [enable_gles="$enableval"],
-    [enable_gles=yes]
-)
-AM_CONDITIONAL([ENABLE_GLES], [test "x$enable_gles" = "xyes"])
+AC_ARG_ENABLE([gles1],
+    [AS_HELP_STRING([--disable-gles1],
+        [disable support for OpenGL ES 1.x API @<:@default=enabled@:>@])],
+    [enable_gles1="$enableval"],
+    [enable_gles1=yes])
+AM_CONDITIONAL([ENABLE_GLES1], [test "x$enable_gles1" = "xyes"])
+
+AC_ARG_ENABLE([gles2],
+    [AS_HELP_STRING([--disable-gles2],
+        [disable support for OpenGL ES 2.x and 3.x API @<:@default=enabled@:>@])],
+    [enable_gles2="$enableval"],
+    [enable_gles2=yes])
+AM_CONDITIONAL([ENABLE_GLES2], [test "x$enable_gles2" = "xyes"])
 
 AC_ARG_ENABLE([headers],
     [AS_HELP_STRING([--disable-headers],
@@ -87,7 +93,8 @@ AC_ARG_ENABLE([headers],
 AM_CONDITIONAL([ENABLE_GL_HEADERS], [test "x$enable_headers" = "xyes"])
 AM_CONDITIONAL([ENABLE_EGL_HEADERS], [test "x$enable_headers" = "xyes" -a "x$enable_egl" = "xyes"])
 AM_CONDITIONAL([ENABLE_GLX_HEADERS], [test "x$enable_headers" = "xyes" -a "x$enable_glx" = "xyes"])
-AM_CONDITIONAL([ENABLE_GLES_HEADERS], [test "x$enable_headers" = "xyes" -a "x$enable_gles" = "xyes"])
+AM_CONDITIONAL([ENABLE_GLES1_HEADERS], [test "x$enable_headers" = "xyes" -a "x$enable_gles1" = "xyes"])
+AM_CONDITIONAL([ENABLE_GLES2_HEADERS], [test "x$enable_headers" = "xyes" -a "x$enable_gles2" = "xyes"])
 
 dnl
 dnl Arch/platform-specific settings. Copied from mesa
diff --git a/include/Makefile.am b/include/Makefile.am
index 3d81d17..0c41dc7 100644
--- a/include/Makefile.am
+++ b/include/Makefile.am
@@ -17,14 +17,18 @@ GL_HEADER_FILES = \
 	GL/glext.h \
 	KHR/khrplatform.h
 
-GLES_HEADER_FILES = \
+GLES1_HEADER_FILES = \
 	GLES/egl.h \
 	GLES/gl.h \
 	GLES/glext.h \
-	GLES/glplatform.h \
+	GLES/glplatform.h
+
+GLES2_HEADER_FILES = \
 	GLES2/gl2ext.h \
 	GLES2/gl2.h \
-	GLES2/gl2platform.h \
+	GLES2/gl2platform.h
+
+GLES3_HEADER_FILES = \
 	GLES3/gl31.h \
 	GLES3/gl32.h \
 	GLES3/gl3.h \
@@ -45,10 +49,18 @@ else
 noinst_HEADERS += $(GL_HEADER_FILES)
 endif
 
-if ENABLE_GLES_HEADERS
-nobase_include_HEADERS += $(GLES_HEADER_FILES)
+if ENABLE_GLES1_HEADERS
+nobase_include_HEADERS += $(GLES1_HEADER_FILES)
+else
+noinst_HEADERS += $(GLES1_HEADER_FILES)
+endif
+
+if ENABLE_GLES2_HEADERS
+nobase_include_HEADERS += $(GLES2_HEADER_FILES)
+nobase_include_HEADERS += $(GLES3_HEADER_FILES)
 else
-noinst_HEADERS += $(GLES_HEADER_FILES)
+noinst_HEADERS += $(GLES2_HEADER_FILES)
+noinst_HEADERS += $(GLES3_HEADER_FILES)
 endif
 
 if ENABLE_GLX_HEADERS
diff --git a/src/Makefile.am b/src/Makefile.am
index 5f7ce79..821346f 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -12,8 +12,10 @@ SUBDIRS += GLX
 SUBDIRS += GL
 endif
 
-if ENABLE_GLES
+if ENABLE_GLES1
 SUBDIRS += GLESv1
+endif
+if ENABLE_GLES2
 SUBDIRS += GLESv2
 endif
 
-- 
2.23.0

