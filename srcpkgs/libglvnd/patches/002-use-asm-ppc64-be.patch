While these assembly files are named ppc64le, they're really just assembly
for the modern ELFv2 ABI, which Void uses even on big endian. So enable those
instead of the generic C stuff.

--- meson.build
+++ meson.build
@@ -55,7 +55,7 @@ if not with_asm.disabled()
     add_project_arguments('-DUSE_ARMV7_ASM', language : 'c')
   elif host_machine.cpu_family() == 'aarch64'
     add_project_arguments('-DUSE_AARCH64_ASM', language : 'c')
-  elif host_machine.cpu_family() == 'ppc64' and host_machine.endian() == 'little'
+  elif host_machine.cpu_family() == 'ppc64'
     add_project_arguments('-DUSE_PPC64LE_ASM', language : 'c')
   elif with_asm.enabled()
     error('No ASM available for @0@ (@1@ endian)'.format(host_machine.system(), host_machine.endian()))
@@ -117,7 +117,7 @@ if use_asm
     gl_dispatch_type = 'armv7_tsd'
   elif host_machine.cpu_family() == 'aarch64'
     gl_dispatch_type = 'aarch64_tsd'
-  elif host_machine.cpu_family() == 'ppc64' and host_machine.endian() == 'little'
+  elif host_machine.cpu_family() == 'ppc64'
     gl_dispatch_type = 'ppc64le_@0@'.format(have_tls ? 'tls' : 'tsd')
   endif
 endif
