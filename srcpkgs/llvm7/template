# Template file for 'llvm7'
pkgname=llvm7
version=7.0.1
revision=6
wrksrc="llvm-${version}.src"
build_style=cmake
configure_args="
 -DCMAKE_BUILD_TYPE=Release
 -DLLVM_INSTALL_UTILS=ON
 -DLLVM_BUILD_LLVM_DYLIB=ON
 -DLLVM_LINK_LLVM_DYLIB=ON
 -DLLVM_ENABLE_RTTI=ON
 -DLLVM_ENABLE_FFI=ON
 -DLLVM_BINUTILS_INCDIR=/usr/include"
short_desc="Low Level Virtual Machine"
maintainer="Rasmus Thomsen <oss@cogitri.dev>"
license="NCSA"
homepage="https://www.llvm.org"
distfiles="https://www.llvm.org/releases/${version}/llvm-${version}.src.tar.xz"
checksum=a38dfc4db47102ec79dcc2aa61e93722c5f6f06f0a961073bd84b78fb949419b
disable_parallel_builds=yes
lib32disabled=yes

# XXX Investigate ocaml bindings.
hostmakedepends="groff perl python zlib-devel libffi-devel swig"
makedepends="python-devel zlib-devel libffi-devel libedit-devel libxml2-devel binutils-devel libatomic-devel"
depends="libllvm7"
# all of these provide llvm-config
conflicts="llvm>=0 llvm3.9>=0 llvm6.0>=0 llvm7>=0"

subpackages="libllvm7"
case "$XBPS_TARGET_MACHINE" in
	armv5*) broken="Tries to assemble VFP instructions with armv5tel arch";;
esac

post_extract() {
	# patches
	cd ${XBPS_BUILDDIR}/llvm-${version}.src
	for i in ${FILESDIR}/patches/llvm/llvm-*.patch; do
		msg_normal "Applying $i to llvm\n"
		patch -sNp1 -i ${i}
	done
}

pre_configure() {
	# Vastly reduce size of debugging symbols:
	CFLAGS=${CFLAGS/ -g/ -g1}
	CXXFLAGS=${CXXFLAGS/ -g/ -g1}

	if [ "$CROSS_BUILD" ]; then
		msg_normal "Building host tblgen\n"
		mkdir -p build/HOST
		cd build/HOST
		CC="$BUILD_CC" CXX="$BUILD_CXX" CFLAGS="$BUILD_CFLAGS" \
			CXXFLAGS="$BUILD_CXXFLAGS" LDFLAGS="$BUILD_LDFLAGS" \
			cmake ../.. -DCMAKE_BUILD_TYPE=Release
		make ${makejobs} -C utils/TableGen
		configure_args+=" -DLLVM_TABLEGEN=${wrksrc}/build/HOST/bin/llvm-tblgen"
		cd ../..
	fi

	case "$XBPS_TARGET_MACHINE" in
		i686*) _arch="X86";;
		x86_64*) _arch="X86";;
		armv5*) _arch="Armv5te";;
		armv6*) _arch="Armv6";;
		armv7*) _arch="Armv7";;
		aarch64*) _arch="AArch64";;
		mips*) _arch="Mips";;
		ppc*) _arch="PowerPC";;
	esac
	configure_args+=" -DLLVM_TARGET_ARCH=${_arch}"
	configure_args+=" -DLLVM_DEFAULT_TARGET_TRIPLE=${XBPS_CROSS_TRIPLET:-$XBPS_TRIPLET}"
}

do_install() {
	vlicense LICENSE.TXT

	cd build
	cmake -DCMAKE_INSTALL_PREFIX=${DESTDIR}/usr -P cmake_install.cmake

	# Fix permissions of static libs
	chmod -x ${DESTDIR}/usr/lib/*.a

	# Required for multilib.
	if [ "$XBPS_TARGET_MACHINE" = "x86_64" ]; then
		for _header in llvm-config; do
			mv ${DESTDIR}/usr/include/llvm/Config/${_header}{,-64}.h
			vinstall ${FILESDIR}/llvm-Config-${_header}.h 644 \
				usr/include/llvm/Config ${_header}.h
		done
	fi

	# Remove llvm-config-host in cross builds.
	if [ "$CROSS_BUILD" ]; then
		rm -f ${DESTDIR}/usr/bin/llvm-config-host
	fi
}

libllvm7_package() {
	short_desc+=" - runtime library"
	pkg_install() {
		vmove "usr/lib/libLLVM-*.so*"
	}
}
