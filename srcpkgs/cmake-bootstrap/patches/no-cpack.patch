--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -254,15 +254,13 @@ macro(CMAKE_SETUP_TESTING)
     if(CMake_TEST_EXTERNAL_CMAKE)
       set(CMAKE_CTEST_COMMAND "${CMake_TEST_EXTERNAL_CMAKE}/ctest")
       set(CMAKE_CMAKE_COMMAND "${CMake_TEST_EXTERNAL_CMAKE}/cmake")
-      set(CMAKE_CPACK_COMMAND "${CMake_TEST_EXTERNAL_CMAKE}/cpack")
-      foreach(exe IN ITEMS cmake ctest cpack)
+      foreach(exe IN ITEMS cmake ctest)
         add_executable(${exe} IMPORTED)
         set_property(TARGET ${exe} PROPERTY IMPORTED_LOCATION ${CMake_TEST_EXTERNAL_CMAKE}/${exe})
       endforeach()
     else()
       set(CMAKE_CTEST_COMMAND "${CMake_BIN_DIR}/ctest")
       set(CMAKE_CMAKE_COMMAND "${CMake_BIN_DIR}/cmake")
-      set(CMAKE_CPACK_COMMAND "${CMake_BIN_DIR}/cpack")
     endif()
   endif()
 
@@ -474,7 +472,6 @@ if(NOT CMake_TEST_EXTERNAL_CMAKE)
   add_custom_target(uninstall
     "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")
 
-  include(CMakeCPack.cmake)
 
 endif()
 
--- a/Source/CMakeLists.txt
+++ b/Source/CMakeLists.txt
@@ -1136,6 +1136,7 @@ endif()
 #
 # Build CPackLib
 #
+if(FALSE)
 add_library(
   CPackLib
   CPack/cmCPackArchiveGenerator.cxx
@@ -1168,9 +1169,10 @@ target_include_directories(
     "${CMAKE_CURRENT_BINARY_DIR}/CPack"
   )
 target_link_libraries(CPackLib PUBLIC CMakeLib)
+endif()
 
 option(CPACK_ENABLE_FREEBSD_PKG "Add FreeBSD pkg(8) generator to CPack." OFF)
-if(UNIX)
+if(FALSE)
   target_sources(
     CPackLib
     PRIVATE
@@ -1288,11 +1290,6 @@ add_executable(ctest ctest.cxx)
 target_link_libraries(ctest PRIVATE CTestLib ManifestLib)
 list(APPEND _tools ctest)
 
-# Build CPack executable
-add_executable(cpack CPack/cpack.cxx)
-target_link_libraries(cpack PRIVATE CPackLib ManifestLib)
-list(APPEND _tools cpack)
-
 # Curses GUI
 if(BUILD_CursesDialog)
   add_subdirectory(CursesDialog)
--- a/Tests/CMakeLists.txt
+++ b/Tests/CMakeLists.txt
@@ -150,7 +150,6 @@ if(BUILD_TESTING)
   endif()
 
   # Look for git to use for tests.
-  find_program(GIT_EXECUTABLE NAMES git)
 
   # Look for rpmbuild to use for tests.
   # The tool does not work with spaces in the path.
--- a/Tests/RunCMake/CMakeLists.txt
+++ b/Tests/RunCMake/CMakeLists.txt
@@ -929,9 +929,6 @@ add_RunCMake_test(file-GET_RUNTIME_DEPEN
   -DCMAKE_C_COMPILER_ID=${CMAKE_C_COMPILER_ID}
   )
 
-add_RunCMake_test(CPackCommandLine)
-add_RunCMake_test(CPackConfig)
-add_RunCMake_test(CPackInstallProperties)
 if(XCODE_VERSION)
   set(ExternalProject_ARGS -DXCODE_VERSION=${XCODE_VERSION})
 endif()
@@ -953,9 +950,6 @@ add_RunCMake_test(CTestCommandLine -DTES
 add_RunCMake_test(CacheNewline)
 # Only run this test on unix platforms that support
 # symbolic links
-if(UNIX)
-  add_RunCMake_test(CPackSymlinks)
-endif()
 
 set(IfacePaths_INCDIRS_ARGS -DTEST_PROP=INCLUDE_DIRECTORIES)
 add_RunCMake_test(IfacePaths_INCDIRS TEST_DIR IfacePaths)
@@ -1132,7 +1126,6 @@ if(CMAKE_SYSTEM_PROCESSOR STREQUAL "e2k"
   endif()
 endif()
 
-add_RunCMake_test_group(CPack "${cpack_tests}")
 
 if(CMake_TEST_CPACK_WIX3 OR CMake_TEST_CPACK_WIX4)
   add_RunCMake_test(CPack_WIX
@@ -1189,29 +1182,6 @@ add_RunCMake_test(PrecompileHeaders -DCM
   -DCMAKE_C_COMPILER_VERSION=${CMAKE_C_COMPILER_VERSION})
 
 add_RunCMake_test(UnityBuild -DCMake_TEST_OBJC=${CMake_TEST_OBJC})
-add_RunCMake_test(CMakePresets
-  -DPython_EXECUTABLE=${Python_EXECUTABLE}
-  -DCMake_TEST_JSON_SCHEMA=${CMake_TEST_JSON_SCHEMA}
-  )
-if(NOT CMake_TEST_E2K_BROKEN_LIBC)
-  add_RunCMake_test(CMakePresetsBuild
-    -DPython_EXECUTABLE=${Python_EXECUTABLE}
-    -DCMake_TEST_JSON_SCHEMA=${CMake_TEST_JSON_SCHEMA}
-    -DCMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}
-    )
-  add_RunCMake_test(CMakePresetsTest
-    -DPython_EXECUTABLE=${Python_EXECUTABLE}
-    -DCMake_TEST_JSON_SCHEMA=${CMake_TEST_JSON_SCHEMA}
-    )
-  add_RunCMake_test(CMakePresetsPackage
-    -DPython_EXECUTABLE=${Python_EXECUTABLE}
-    -DCMake_TEST_JSON_SCHEMA=${CMake_TEST_JSON_SCHEMA}
-    )
-endif()
-add_RunCMake_test(CMakePresetsWorkflow
-  -DPython_EXECUTABLE=${Python_EXECUTABLE}
-  -DCMake_TEST_JSON_SCHEMA=${CMake_TEST_JSON_SCHEMA}
-  )
 
 add_RunCMake_test(VerifyHeaderSets)
 add_RunCMake_test(set_tests_properties)
