# Template file for 'GoLand'
pkgname=GoLand
version=2019.2.3
revision=1
archs="i686 x86_64"
depends="virtual?java-environment"
short_desc="Cross-platform IDE built specially for Go developers"
maintainer="Anton Afanasyev <anton@doubleasoftware.com>"
license="custom:Commercial"
homepage="https://www.jetbrains.com/go"
distfiles="https://download.jetbrains.com/go/goland-${version}.tar.gz"
checksum=d65d5fc57798652be47d6a540c41da3cf344c0ebabc357c0807c6999acff2b7d
repository=nonfree
restricted=yes
nopie=yes

post_extract() {
	# Remove files for other CPU architectures
	rm -rf bin/fsnotifier-arm
	rm -rf lib/pty4j-native/linux/ppc64le

	case "$XBPS_TARGET_MACHINE" in
		x86_64)
			rm -rf bin/fsnotifier
			rm -rf bin/goland.vmoptions
			rm -rf bin/libyjpagent-linux.so
			rm -rf lib/pty4j-native/linux/x86
			;;
		i686)
			rm -rf bin/fsnotifier64
			rm -rf bin/goland64.vmoptions
			rm -rf bin/libyjpagent-linux64.so
			rm -rf lib/pty4j-native/linux/x86_64
			;;
	esac
}

do_install() {
	TARGET_PATH="usr/lib/${pkgname}"

	vmkdir usr/bin
	vmkdir ${TARGET_PATH}

	local i
	for i in license/* ; do
		vlicense $i
	done

	vcopy bin ${TARGET_PATH}
	vcopy help ${TARGET_PATH}
	vcopy lib ${TARGET_PATH}
	vcopy plugins ${TARGET_PATH}
	vcopy product-info.json ${TARGET_PATH}
	vcopy build.txt ${TARGET_PATH}

	ln -sf /${TARGET_PATH}/bin/goland.sh ${DESTDIR}/usr/bin/${pkgname}
}
