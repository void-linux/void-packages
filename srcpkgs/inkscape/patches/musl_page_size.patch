PAGE_SIZE is a reserved identifier, but we should be abnle to safely rename it
in the enum without breaking anything to still build against musl
--
diff --git a/src/attributes.cpp b/src/attributes.cpp
index e5abed3..9e0c459 100644
--- a/src/attributes.cpp
+++ b/src/attributes.cpp
@@ -142,7 +142,7 @@ static SPStyleProp const props[] = {
     /* SPPage */
     {SPAttr::PAGE_MARGIN, "margin"},
     {SPAttr::PAGE_BLEED, "bleed"},
-    {SPAttr::PAGE_SIZE, "page-size"},
+    {SPAttr::PAGE_SIZEx, "page-size"},
     /* SPGrid */
     {SPAttr::ORIGINX, "originx"},
     {SPAttr::ORIGINY, "originy"},
diff --git a/src/attributes.h b/src/attributes.h
index 2b17b09..4e8470a 100644
--- a/src/attributes.h
+++ b/src/attributes.h
@@ -141,7 +141,7 @@ enum class SPAttr {
     /* SPPage */
     PAGE_MARGIN,
     PAGE_BLEED,
-    PAGE_SIZE,
+    PAGE_SIZEx,
     /* SPGrid */
     ORIGINX,
     ORIGINY,
diff --git a/src/object/sp-page.cpp b/src/object/sp-page.cpp
index cc5c41f..4d0a1fc 100644
--- a/src/object/sp-page.cpp
+++ b/src/object/sp-page.cpp
@@ -42,7 +42,7 @@ void SPPage::build(SPDocument *document, Inkscape::XML::Node *repr)
     SPObject::build(document, repr);
 
     this->readAttr(SPAttr::INKSCAPE_LABEL);
-    this->readAttr(SPAttr::PAGE_SIZE);
+    this->readAttr(SPAttr::PAGE_SIZEx);
     this->readAttr(SPAttr::X);
     this->readAttr(SPAttr::Y);
     this->readAttr(SPAttr::WIDTH);
@@ -85,7 +85,7 @@ void SPPage::set(SPAttr key, const gchar *value)
         case SPAttr::PAGE_BLEED:
             this->bleed.readOrUnset(value);
             break;
-        case SPAttr::PAGE_SIZE:
+        case SPAttr::PAGE_SIZEx:
             this->_size_label = value ? std::string(value) : "";
             break;
         default:
