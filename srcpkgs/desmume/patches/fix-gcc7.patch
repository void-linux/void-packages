--- a/src/wifi.cpp	2018-01-16 14:39:01.175395010 +0100
+++ b/src/wifi.cpp	2018-01-16 14:38:10.762596117 +0100
@@ -314,9 +314,9 @@ WifiComInterface* wifiCom;
 
 #if (WIFI_LOGGING_LEVEL >= 1)
 	#if WIFI_LOG_USE_LOGC
-		#define WIFI_LOG(level, ...) if(level <= WIFI_LOGGING_LEVEL) LOGC(8, "WIFI: "__VA_ARGS__);
+		#define WIFI_LOG(level, ...) if(level <= WIFI_LOGGING_LEVEL) LOGC(8, "WIFI: " __VA_ARGS__);
 	#else
-		#define WIFI_LOG(level, ...) if(level <= WIFI_LOGGING_LEVEL) printf("WIFI: "__VA_ARGS__);
+		#define WIFI_LOG(level, ...) if(level <= WIFI_LOGGING_LEVEL) printf("WIFI: " __VA_ARGS__);
 	#endif
 #else
 #define WIFI_LOG(level, ...) {}
--- a/src/MMU_timing.h	2018-01-16 14:47:05.818461679 +0100
+++ b/src/MMU_timing.h	2018-01-16 14:48:05.344224219 +0100
@@ -155,8 +155,8 @@ private:
 	enum { ASSOCIATIVITY = 1 << ASSOCIATIVESHIFT };
 	enum { BLOCKSIZE = 1 << BLOCKSIZESHIFT };
 	enum { TAGSHIFT = SIZESHIFT - ASSOCIATIVESHIFT };
-	enum { TAGMASK = (u32)(~0 << TAGSHIFT) };
-	enum { BLOCKMASK = ((u32)~0 >> (32 - TAGSHIFT)) & (u32)(~0 << BLOCKSIZESHIFT) };
+	enum { TAGMASK = (u32)(((u32)~0) << TAGSHIFT) };
+	enum { BLOCKMASK = ((u32)((u32)~0) >> (32 - TAGSHIFT)) & (u32)(((u32)~0) << BLOCKSIZESHIFT) };
 	enum { WORDSIZE = sizeof(u32) };
 	enum { WORDSPERBLOCK = (1 << BLOCKSIZESHIFT) / WORDSIZE };
 	enum { DATAPERWORD = WORDSIZE * ASSOCIATIVITY };
--- a/src/utils/libfat/directory.cpp	2018-01-16 14:52:24.057192162 +0100
+++ b/src/utils/libfat/directory.cpp	2018-01-16 14:52:27.833177099 +0100
@@ -139,7 +139,7 @@ static size_t _FAT_directory_mbstoucs2 (
 	int bytes;
 	size_t count = 0;
 
-	while (count < len-1 && src != '\0') {
+	while (count < len-1 && *src != '\0') {
 		bytes = mbrtowc (&tempChar, src, MB_CUR_MAX, &ps);
 		if (bytes > 0) {
 			*dst = (ucs2_t)tempChar;
