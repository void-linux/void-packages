# Template file for 'fractal'
pkgname=fractal
version=12
revision=1
build_style=meson
build_helper=rust
hostmakedepends="cargo clang desktop-file-utils gettext glib-devel
 gtk4-update-icon-cache nodejs pkg-config"
makedepends="gst-plugins-base1-devel gtksourceview5-devel libadwaita-devel
 libseccomp-devel libshumate-devel pipewire-devel rust-std xdg-desktop-portal
 libwebp-devel"
depends="glycin-loaders"
short_desc="Matrix Messaging Client for GNOME"
maintainer="Orphaned <orphan@voidlinux.org>"
license="GPL-3.0-or-later"
homepage="https://wiki.gnome.org/Apps/Fractal"
changelog="https://gitlab.gnome.org/World/fractal/-/releases"
distfiles="https://gitlab.gnome.org/World/fractal/-/archive/${version}/fractal-${version}.tar.gz"
checksum=2f0700ccd4ac0c6b1d918647c8aaf869a3b031836fe4a81d9488cc31c0fd0b83

export PATH="$PATH:$XBPS_BUILDDIR/${pkgname}-${version}/node_modules/.bin"

if [[ "$XBPS_TARGET_WORDSIZE" = 32 && ! ("$XBPS_TARGET_MACHINE" = "i686" && -n $CROSS_BUILD) ]]; then
	broken="runs out of memory when linking"
fi

post_patch() {
	if [ "$CROSS_BUILD" ]; then
		vsed -i src/meson.build \
			-e "s%rust_target /%'${RUST_TARGET}' / &%"
	fi
}

pre_configure() {
	npm i sass
}

# NOTE: explicitly prevent rebuild: https://gitlab.gnome.org/GNOME/fractal/-/issues/1327
do_install() {
	meson install -C build --destdir $DESTDIR --no-rebuild
}

# NOTE: explicitly prevent rebuild since the XBPS wrappers including cargo are
# regenerated before this step, which causes ninja to regenerate build files
# which in turn recreates the Rust build configuration file (see
# https://gitlab.gnome.org/World/fractal/-/blob/2e867841619efc67e8d221b7d15833520d56f3be/src/meson.build#L23-28
# and causes cargo to consider the fractal binary not up to date.
do_check() {
	meson test -C build --no-rebuild ${makejobs}
}
