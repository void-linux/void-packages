__GLIBC_PREREQ is only defined with glibc, so that only process it with __GLIBC__.

--- a/syscall.c	2014-10-20 16:12:53.000000000 +0200
+++ b/syscall.c	2015-06-22 08:13:22.729034702 +0200
@@ -115,14 +115,16 @@
 
 #endif
 
-#if defined(__GLIBC__) && __GLIBC_PREREQ(2, 11)
+#if defined(__GLIBC__)
+# if __GLIBC_PREREQ(2,11)
 
 /* glibc 2.11 seems to have working 6 argument sycall. Use the
    glibc supplied syscall in this case.
    The version cut-off is rather arbitary and could be probably
    earlier. */
 
-#define syscall6 syscall
+#  define syscall6 syscall
+#endif
 #elif defined(__x86_64__)
 /* 6 argument calls on x86-64 are often buggy in both glibc and
    asm/unistd.h. Add a working version here. */
