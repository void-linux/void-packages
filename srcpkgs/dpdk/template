# Template file for 'dpdk'
pkgname=dpdk
version=22.11
revision=1
# no musl - uses error.h, execinfo.h and argp.h
archs="x86_64 aarch64 ppc64le i686 armv7l"
build_style=meson
configure_args="-Denable_kmods=false -Denable_docs=true -Db_lto=false
 -Dplatform=generic"
hostmakedepends="doxygen python3-Sphinx pkg-config elfutils python3-pyelftools"
makedepends="libnuma-devel jansson-devel libpcap-devel
 zlib-devel openssl-devel libbsd-devel libelf libmnl"
depends="python3-pyelftools"
short_desc="Data Plane Development Kit"
maintainer="Hans-J. Schmid <knock@myopendoor.de>"
license="BSD-3-Clause, GPL-2.0-only"
homepage="https://www.dpdk.org/"
distfiles="https://github.com/DPDK/${pkgname}/archive/v${version}.tar.gz"
checksum=ed8b2a2b153f0311ffa065d35af29a098367af44a22b3c33e191e1a74211f2e3
# import py3compat
python_version=3

case "${XBPS_TARGET_MACHINE}" in
	armv7l*) configure_args+=" -Dcpu_instruction_set=armv7-a";;
	aarch64*) configure_args+=" -Dcpu_instruction_set=armv8-a";;
	ppc64le*) configure_args+=" -Dcpu_instruction_set=power8";;
	*) configure_args+=" -Dcpu_instruction_set=generic"
esac

# CFLAGS="-fcommon"

post_install() {
	vmkdir usr/lib/modules-load.d
	vlicense license/bsd-3-clause.txt
}

dpdk-doc_package() {
	short_desc+=" - documentation"
	pkg_install() {
		vmove usr/share/doc
	}
}

do_check() {
	:
}

dpdk-devel_package() {
	depends="${sourcepkg}>=${version}_${revision} jansson-devel zlib-devel libbsd-devel openssl-devel"
	short_desc+=" - development files"
	pkg_install() {
		vmove usr/bin/dpdk-pdump
		vmove usr/bin/dpdk-proc-info
		vmove usr/bin/dpdk-test*
		vmove usr/include
		vmove usr/lib/*.so
		vmove usr/lib/*.a
		vmove usr/lib/dpdk/pmds-23.0/*.so
		vmove usr/lib/pkgconfig
		vmove usr/share/dpdk/examples
	}
}

dpdk-dkms_package() {
	short_desc+=" - DKMS kernel modules"
	dkms_modules="dpdk-igb-uio $version dpdk-rte-kni $version"
	depends="dkms dpdk-devel"
	pkg_install() {
		vmkdir usr/src/dpdk-igb-uio-${version}
		vmkdir usr/src/dpdk-rte-kni-${version}
		vcopy "kernel/linux/kni/*" usr/src/dpdk-rte-kni-${version}
		vcopy ${FILESDIR}/dkms_rte_kni.conf usr/src/dpdk-rte-kni-${version}/dkms.conf
		sed -i -e "s/@VERSION@/${version}/" ${PKGDESTDIR}/usr/src/dpdk-rte-kni-${version}/dkms.conf
		# load modules at boot time
		echo rte_kni > ${DESTDIR}/usr/lib/modules-load.d/rte_kni.conf
		chmod 644 ${DESTDIR}/usr/lib/modules-load.d/rte_kni.conf
		vmove usr/lib/modules-load.d
	}
}
