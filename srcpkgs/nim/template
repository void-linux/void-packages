# Template file for 'nim'
pkgname=nim
version=1.2.2
revision=1
_cversion=0.20.0
_nimbleversion=0.11.4
create_wrksrc=yes
build_wrksrc="Nim-$version"
hostmakedepends="ed"
depends="gcc"
short_desc="Nim programming language"
maintainer="allan <mail@may.mooo.com>"
license="MIT"
homepage="https://nim-lang.org/"
distfiles="https://github.com/nim-lang/Nim/archive/v${version}.tar.gz
 https://github.com/nim-lang/csources/archive/v${_cversion}.tar.gz>csources-${_cversion}.tar.gz
 https://github.com/nim-lang/nimble/archive/v${_nimbleversion}.tar.gz>nimble-${_nimbleversion}.tar.gz"
checksum="59028445daa342c31f2c241fb5d4a5c32359e5c7d42964d9beeb7ef8fd86957a
 5e6fd15d90df1a8cb7614c4ffc70aa8c4198cd854d7742016202b96dd0228d3c
 63e0dbfa5c33f80d6f8f8156a609e11497ac5390b64dc8d68f5126c3bb8d5429"

post_extract() {
	mv csources-$_cversion $build_wrksrc/csources
	mkdir $build_wrksrc/dist
	mv nimble-$_nimbleversion $build_wrksrc/dist/nimble
}

do_build() {
	cd csources
	case "$XBPS_TARGET_MACHINE" in
		i686*)
			CC=cc LD=cc CFLAGS="-Os -pipe" LDFLAGS= \
			sh build.sh --cpu i686;;
		*)
			CC=cc LD=cc CFLAGS="-Os -pipe" LDFLAGS= sh build.sh;;
	esac
	cd ..

	bin/nim c koch
	./koch boot -d:release -d:danger

	case "$XBPS_TARGET_MACHINE" in
		aarch64*) _arch=arm64;;
		arm*) _arch=arm;;
		ppc64le*) _arch=powerpc64el;;
		ppc64*) _arch=powerpc64;;
		ppc*) _arch=powerpc;;
	esac

	case "$XBPS_TARGET_MACHINE"
	in arm*|aarch64*|ppc*)
		ed config/nim.cfg <<-EDIT
			,s/^arm.linux.gcc.exe .*/arm.linux.gcc.exe = "$CC"/
			,s/^arm.linux.gcc.linkerexe .*/arm.linux.gcc.linkerexe = "$CC"/
			a
			arm64.linux.gcc.exe = "$CC"
			arm64.linux.gcc.linkerexe = "$CC"
			powerpc.linux.gcc.exe = "$CC"
			powerpc.linux.gcc.linkerexe = "$CC"
			powerpc64.linux.gcc.exe = "$CC"
			powerpc64.linux.gcc.linkerexe = "$CC"
			powerpc64el.linux.gcc.exe = "$CC"
			powerpc64el.linux.gcc.linkerexe = "$CC"
			.
			w
			q
		EDIT
		bin/nim c -d:release -d:danger --os:linux --cpu:$_arch --listCmd compiler/nim
		for _p in \
			dist/nimble/src/nimble \
			tools/nimgrep \
			nimsuggest/nimsuggest \
			nimpretty/nimpretty
		do
			bin/nim c -d:release --os:linux --cpu:$_arch --listCmd $_p
			mv $_p bin
		done
	;; *)
		./koch tools
	esac
}

do_install() {
	./koch install ${DESTDIR}/usr/lib

	if [ "$CROSS_BUILD" ]; then
		mv compiler/nim ${DESTDIR}/usr/lib/nim/bin/nim
	fi

	vmkdir usr/bin
	vmkdir usr/share/nim
	ln -sf /usr/lib/nim/bin/nim ${DESTDIR}/usr/bin/nim
	for _f in nimble nimsuggest nimgrep nimpretty; do
		chmod 0755 bin/$_f
		cp bin/$_f ${DESTDIR}/usr/lib/nim/bin
		ln -sf /usr/lib/nim/bin/$_f ${DESTDIR}/usr/bin/$_f
	done
	cp -r doc examples ${DESTDIR}/usr/lib/nim
	ln -sf /usr/lib/nim/doc ${DESTDIR}/usr/share/nim/doc
	ln -sf /usr/lib/nim/examples ${DESTDIR}/usr/share/nim/examples
	vlicense copying.txt
}
