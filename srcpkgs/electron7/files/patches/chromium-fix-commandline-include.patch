Electron patches the file to use base::CommandLine, but forgot to include
the necessary header for it.
--- a/third_party/blink/renderer/platform/graphics/canvas_color_params.cc.orig	2020-04-27 13:49:41.408592941 +0200
+++ b/third_party/blink/renderer/platform/graphics/canvas_color_params.cc	2020-04-27 13:49:53.841071830 +0200
@@ -4,6 +4,7 @@
 
 #include "third_party/blink/renderer/platform/graphics/canvas_color_params.h"
 
+#include "base/command_line.h"
 #include "cc/paint/skia_paint_canvas.h"
 #include "components/viz/common/resources/resource_format_utils.h"
 #include "third_party/blink/renderer/platform/runtime_enabled_features.h"
--- a/third_party/blink/public/platform/web_rtc_rtp_source.h.orig	2020-04-27 14:16:05.323085814 +0200
+++ b/third_party/blink/public/platform/web_rtc_rtp_source.h	2020-04-27 14:16:17.279480838 +0200
@@ -7,6 +7,7 @@
 
 #include "base/optional.h"
 #include "third_party/blink/public/platform/web_common.h"
+#include <memory>
 
 namespace base {
 class TimeTicks;
--- a/chrome/browser/chrome_content_browser_client.cc.orig	2020-04-27 16:16:27.291208394 +0200
+++ b/chrome/browser/chrome_content_browser_client.cc	2020-04-27 16:16:49.283984217 +0200
@@ -2896,6 +2896,8 @@
     const std::string& frame_name,
     WindowOpenDisposition disposition,
     const blink::mojom::WindowFeatures& features,
+    const std::vector<std::string>& additional_features,
+    const scoped_refptr<network::ResourceRequestBody>& body,
     bool user_gesture,
     bool opener_suppressed,
     bool* no_javascript_access) {
--- a/chrome/browser/chrome_content_browser_client.h.orig	2020-04-27 16:15:41.932359753 +0200
+++ b/chrome/browser/chrome_content_browser_client.h	2020-04-27 16:16:09.798318845 +0200
@@ -303,6 +303,8 @@
                        const std::string& frame_name,
                        WindowOpenDisposition disposition,
                        const blink::mojom::WindowFeatures& features,
+                       const std::vector<std::string>& additional_features,
+                       const scoped_refptr<network::ResourceRequestBody>& body,
                        bool user_gesture,
                        bool opener_suppressed,
                        bool* no_javascript_access) override;
