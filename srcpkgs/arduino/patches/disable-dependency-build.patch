--- Arduino-1.8.13/build/build.xml.orig	2020-12-27 20:34:41.813419495 +0100
+++ Arduino-1.8.13/build/build.xml	2020-12-27 20:32:58.075425211 +0100
@@ -345,7 +345,7 @@
 
     <!-- figure out the IDE version number in base.java -->
     <loadfile srcfile="../arduino-core/src/processing/app/BaseNoGui.java"
-        property="revision.base">
+	      property="revision.base">
       <filterchain>
         <tokenfilter>
           <linetokenizer />
@@ -659,14 +659,6 @@
   </target>
 
   <target name="linux-libastyle-x86" depends="linux-build" description="Download libastyle.so for x86/x64 arch">
-    <antcall target="unzip">
-      <param name="archive_file" value="./libastylej-2.05.1-5.zip" />
-      <param name="archive_url" value="https://downloads.arduino.cc/libastylej-2.05.1-5.zip" />
-      <param name="final_folder" value="${staging_folder}/libastylej-2.05.1" />
-      <param name="dest_folder" value="${staging_folder}" />
-    </antcall>
-    <copy file="linux/libastylej-2.05.1/libastylej${arch-bits}.so" tofile="linux/work/lib/libastylej.so" />
-    <chmod perm="755" file="linux/work/lib/libastylej.so" />
 
     <antcall target="portable-${portable}">
       <param name="parentdir" value="linux/work" />
@@ -684,14 +676,6 @@
   </target>
 
   <target name="linux-libastyle-arm" depends="linux-build" description="Download libastyle.so for ARM">
-    <antcall target="unzip">
-      <param name="archive_file" value="./libastylej-2.05.1-5.zip" />
-      <param name="archive_url" value="https://downloads.arduino.cc/libastylej-2.05.1-5.zip" />
-      <param name="final_folder" value="${staging_folder}/libastylej-2.05.1" />
-      <param name="dest_folder" value="${staging_folder}" />
-    </antcall>
-    <copy file="linux/libastylej-2.05.1/libastylej_arm.so" tofile="linux/work/lib/libastylej.so" />
-    <chmod perm="755" file="linux/work/lib/libastylej.so" />
 
     <antcall target="portable-${portable}">
       <param name="parentdir" value="linux/work" />
@@ -715,26 +699,9 @@
 
     <antcall target="build-arduino-builder" />
 
-    <antcall target="avr-toolchain-bundle">
-      <param name="unpack_target" value="untar-native"/>
-      <param name="gcc_archive_file" value="avr-gcc-${AVRGCC-VERSION}-arm-linux-gnueabihf.tar.bz2"/>
-      <param name="gcc_version" value="${AVRGCC-VERSION}"/>
-      <param name="avrdude_archive_file" value="avrdude-${AVRDUDE-VERSION}-armhf-pc-linux-gnu.tar.bz2"/>
-      <param name="avrdude_version" value="${AVRDUDE-VERSION}"/>
-      <param name="arduinoOTA_archive_file" value="arduinoOTA-${arduinoOTA-VERSION}-linux_arm.tar.bz2"/>
-      <param name="arduinoOTA_version" value="${arduinoOTA-VERSION}"/>
-    </antcall>
   </target>
 
   <target name="linux-libastyle-aarch64" depends="linux-build" description="Download libastyle.so for AArch64">
-    <antcall target="unzip">
-      <param name="archive_file" value="./libastylej-2.05.1-5.zip" />
-      <param name="archive_url" value="https://downloads.arduino.cc/libastylej-2.05.1-5.zip" />
-      <param name="final_folder" value="${staging_folder}/libastylej-2.05.1" />
-      <param name="dest_folder" value="${staging_folder}" />
-    </antcall>
-    <copy file="linux/libastylej-2.05.1/libastylej_aarch64.so" tofile="linux/work/lib/libastylej.so" />
-    <chmod perm="755" file="linux/work/lib/libastylej.so" />
 
     <antcall target="portable-${portable}">
       <param name="parentdir" value="linux/work" />
@@ -757,15 +724,6 @@
 
     <antcall target="build-arduino-builder" />
 
-    <antcall target="avr-toolchain-bundle">
-      <param name="unpack_target" value="untar-native"/>
-      <param name="gcc_archive_file" value="avr-gcc-${AVRGCC-VERSION}-aarch64-pc-linux-gnu.tar.bz2"/>
-      <param name="gcc_version" value="${AVRGCC-VERSION}"/>
-      <param name="avrdude_archive_file" value="avrdude-${AVRDUDE-VERSION}-aarch64-pc-linux-gnu.tar.bz2"/>
-      <param name="avrdude_version" value="${AVRDUDE-VERSION}"/>
-      <param name="arduinoOTA_archive_file" value="arduinoOTA-${arduinoOTA-VERSION}-linux_aarch64.tar.bz2"/>
-      <param name="arduinoOTA_version" value="${arduinoOTA-VERSION}"/>
-    </antcall>
   </target>
 
   <target name="linux32-build" depends="linux-libastyle-x86" description="Build linux (32-bit) version">
@@ -775,15 +733,6 @@
 
     <antcall target="build-arduino-builder" />
 
-    <antcall target="avr-toolchain-bundle">
-      <param name="unpack_target" value="untar-native"/>
-      <param name="gcc_archive_file" value="avr-gcc-${AVRGCC-VERSION}-i686-pc-linux-gnu.tar.bz2"/>
-      <param name="gcc_version" value="${AVRGCC-VERSION}"/>
-      <param name="avrdude_archive_file" value="avrdude-${AVRDUDE-VERSION}-i686-pc-linux-gnu.tar.bz2"/>
-      <param name="avrdude_version" value="${AVRDUDE-VERSION}"/>
-      <param name="arduinoOTA_archive_file" value="arduinoOTA-${arduinoOTA-VERSION}-linux_386.tar.bz2"/>
-      <param name="arduinoOTA_version" value="${arduinoOTA-VERSION}"/>
-    </antcall>
   </target>
 
   <target name="linux64-build" depends="linux-libastyle-x86" description="Build linux (64-bit) version">
@@ -793,15 +742,6 @@
 
     <antcall target="build-arduino-builder" />
 
-    <antcall target="avr-toolchain-bundle">
-      <param name="unpack_target" value="untar-native"/>
-      <param name="gcc_archive_file" value="avr-gcc-${AVRGCC-VERSION}-x86_64-pc-linux-gnu.tar.bz2"/>
-      <param name="gcc_version" value="${AVRGCC-VERSION}"/>
-      <param name="avrdude_archive_file" value="avrdude-${AVRDUDE-VERSION}-x86_64-pc-linux-gnu.tar.bz2"/>
-      <param name="avrdude_version" value="${AVRDUDE-VERSION}"/>
-      <param name="arduinoOTA_archive_file" value="arduinoOTA-${arduinoOTA-VERSION}-linux_amd64.tar.bz2"/>
-      <param name="arduinoOTA_version" value="${arduinoOTA-VERSION}"/>
-    </antcall>
   </target>
 
   <target name="linux-jvm-noop"/>
@@ -936,7 +876,7 @@
   </target>
 
   <target name="linux-dist" depends="build"
-    description="Build .tar.xz of linux version">
+	  description="Build .tar.xz of linux version">
 
     <move file="linux/work" tofile="linux/arduino-${version}" />
 
@@ -960,23 +900,23 @@
   </target>
 
   <target name="linux32-dist" depends="linux-dist"
-    description="Build .tar.xz of linux x86_32 version" />
+	  description="Build .tar.xz of linux x86_32 version" />
 
   <target name="linux64-dist" depends="linux-dist"
-    description="Build .tar.xz of linux x86_64 version" />
+	  description="Build .tar.xz of linux x86_64 version" />
 
   <target name="linuxarm-dist" depends="linux-dist"
-    description="Build .tar.xz of linux armhf version" />
+	  description="Build .tar.xz of linux armhf version" />
 
   <target name="linuxaarch64-dist" depends="linux-dist"
-    description="Build .tar.xz of linux aarch64 version" />
+	  description="Build .tar.xz of linux aarch64 version" />
 
   <!-- - - - - - - - -->
   <!-- Windows       -->
   <!-- - - - - - - - -->
 
   <target name="windows-clean" depends="subprojects-clean"
-    description="Clean windows version">
+	  description="Clean windows version">
     <delete dir="windows/work" />
     <delete>
       <fileset dir="windows" includes="arduino-*windows*.zip"/>
@@ -1014,8 +954,8 @@
   </target>
 
   <target name="windows-build"
-    depends="revision-check, windows-checkos, subprojects-build"
-    description="Build windows version">
+	  depends="revision-check, windows-checkos, subprojects-build"
+	  description="Build windows version">
     <mkdir dir="windows/work" />
     <mkdir dir="windows/work/${staging_hardware_folder}" />
 
@@ -1130,12 +1070,12 @@
 
     <property name="launch4j.dir" value="windows/launcher/launch4j/" />
     <taskdef name="launch4j"
-       classname="net.sf.launch4j.ant.Launch4jTask"
-       classpath="${launch4j.dir}/launch4j.jar; ${launch4j.dir}/lib/xstream.jar" />
+	     classname="net.sf.launch4j.ant.Launch4jTask"
+	     classpath="${launch4j.dir}/launch4j.jar; ${launch4j.dir}/lib/xstream.jar" />
 
     <copy todir="windows/work">
       <fileset dir="windows/launcher"
-         includes="application.ico, config.xml, config_debug.xml, arduino.l4j.ini, wrapper-manifest.xml"/>
+	       includes="application.ico, config.xml, config_debug.xml, arduino.l4j.ini, wrapper-manifest.xml"/>
     </copy>
     <launch4j configFile="windows/work/config.xml" fileVersion="${revision}.0" txtFileVersion="${revision}" productVersion="${revision}.0" txtProductVersion="${revision}"/>
     <launch4j configFile="windows/work/config_debug.xml" fileVersion="${revision}.0" txtFileVersion="${revision}" productVersion="${revision}.0" txtProductVersion="${revision}"/>
@@ -1206,22 +1146,22 @@
   <!-- - - - - - - - -->
 
    <target name="source-dist" depends="revision-check"
-    description="Build .tar.gz of source code">
+	  description="Build .tar.gz of source code">
     <input message="Enter version number:"
-     addproperty="version"
-     defaultvalue="${revision}" />
+	   addproperty="version"
+	   defaultvalue="${revision}" />
 
     <tar compression="gzip" destfile="arduino-${version}-src.tar.gz">
       <tarfileset dir="../"
-      prefix="arduino-${version}"
-      excludes="**/*.tgz,
-           **/*.bz2,
-           **/build/macosx/,
-           **/build/windows/,
-           **/work/,
-           **/.git/,
-           **/*.class"
-      />
+		  prefix="arduino-${version}"
+		  excludes="**/*.tgz,
+			     **/*.bz2,
+			     **/build/macosx/,
+			     **/build/windows/,
+			     **/work/,
+			     **/.git/,
+			     **/*.class"
+		  />
     </tar>
 
     <echo>
@@ -1239,7 +1179,7 @@
   <!-- - - - - - - - -->
 
   <target name="clean" description="Perform a spring cleaning"
-    depends="linux-clean, windows-clean, macosx-clean, subprojects-clean">
+	  depends="linux-clean, windows-clean, macosx-clean, subprojects-clean">
   </target>
 
   <target name="avr-toolchain-bundle" unless="light_bundle">
