# Template file for 'openjdk17'
_java_ver=17
_java_min_ver=0
_java_sec_ver=1
_jdk_update=12
_jdk_home="usr/lib/jvm/openjdk${_java_ver}"
_base_version="${_java_ver}.${_java_min_ver}.${_java_sec_ver}"

pkgname=openjdk17
version="${_base_version}+${_jdk_update}"
revision=1
wrksrc="jdk${_java_ver}u-jdk-${_base_version}-${_jdk_update}"
build_style=gnu-configure
configure_args="
 --disable-warnings-as-errors
 --enable-unlimited-crypto
 --with-zlib=system
 --with-libjpeg=system
 --with-giflib=system
 --with-libpng=system
 --with-lcms=system
 --with-jtreg=no
 --with-version-build=$_java_ver
 --with-jobs=$XBPS_ORIG_MAKEJOBS
 --with-vendor-name=Void
 --with-vendor-url=https://voidlinux.org/
 --with-vendor-bug-url=https://github.com/void-linux/void-packages/issues
 --with-vendor-vm-bug-url=https://github.com/void-linux/void-packages/issues"
make_build_args="images $(vopt_if docs docs)"
make_install_args="INSTALL_PREFIX=\"${XBPS_DESTDIR}/${pkgname}-${version}/usr/lib\""
make_check_target="test-hotspot-gtest"
hostmakedepends="pkg-config automake autoconf cpio tar unzip zip ca-certificates
 libressl zlib-devel which make-ca"
makedepends="libXrender-devel libXtst-devel libXt-devel libXrandr-devel
 giflib-devel libjpeg-turbo-devel cups-devel freetype-devel alsa-lib-devel
 fontconfig-devel zlib-devel lcms2-devel"
provides="java-environment-${version}_1 java-runtime-${version}_1"
short_desc="OpenJDK Java Development Kit"
maintainer="Đoàn Trần Công Danh <congdanhqx@gmail.com>"
license="GPL-2.0-or-later"
homepage="http://openjdk.java.net/"
distfiles="https://github.com/openjdk/jdk${_java_ver}u/archive/jdk-${version}.tar.gz"
checksum=8c076203a6f85ab916b3e54de1992bcbcc5ffe580c52b1ac8d52ca7afb9f02d1
shlib_provides="libawt.so libawt_xawt.so libjava.so libjli.so libjvm.so libjawt.so"

# Build is still parallel, but don't use -jN.
disable_parallel_build=yes
build_options="docs"

# no hotspot JIT for ppc32
case "$XBPS_TARGET_MACHINE" in
	ppc64*) ;;
	ppc*) _use_zero=yes ;;
esac

if [ -n "$_use_zero" ]; then
	makedepends+=" libffi-devel"
	configure_args+=" --with-jvm-variants=zero"
	case "$XBPS_TARGET_MACHINE" in
	ppc*) configure_args+=" --with-boot-jdk-jvmargs=-XX:ThreadStackSize=2560";;
	esac
fi
configure_args+=" --with-boot-jdk-jvmargs=-Xlog:disable"

case "$XBPS_TARGET_LIBC" in
	glibc) build_options_default+=" docs";;
esac

if [ ! "$CROSS_BUILD" ]; then
	hostmakedepends+=" openjdk16-bootstrap"
	configure_args+=" --with-boot-jdk=/usr/lib/jvm/openjdk16"
else
	hostmakedepends+=" openjdk17"
	configure_args+=" --with-boot-jdk=/usr/lib/jvm/openjdk17"
fi

alternatives="
 java:/usr/bin/java:/usr/lib/jvm/openjdk17/bin/java
 java:/usr/bin/jjs:/usr/lib/jvm/openjdk17/bin/jjs
 java:/usr/bin/keytool:/usr/lib/jvm/openjdk17/bin/keytool
 java:/usr/bin/pack200:/usr/lib/jvm/openjdk17/bin/pack200
 java:/usr/bin/rmid:/usr/lib/jvm/openjdk17/bin/rmid
 java:/usr/bin/rmiregistry:/usr/lib/jvm/openjdk17/bin/rmiregistry
 java:/usr/bin/unpack200:/usr/lib/jvm/openjdk17/bin/unpack200

 jdk:/usr/bin/jaotc:/usr/lib/jvm/openjdk17/bin/jaotc
 jdk:/usr/bin/jar:/usr/lib/jvm/openjdk17/bin/jar
 jdk:/usr/bin/jarsigner:/usr/lib/jvm/openjdk17/bin/jarsigner
 jdk:/usr/bin/java:/usr/lib/jvm/openjdk17/bin/java
 jdk:/usr/bin/javac:/usr/lib/jvm/openjdk17/bin/javac
 jdk:/usr/bin/javadoc:/usr/lib/jvm/openjdk17/bin/javadoc
 jdk:/usr/bin/javap:/usr/lib/jvm/openjdk17/bin/javap
 jdk:/usr/bin/jcmd:/usr/lib/jvm/openjdk17/bin/jcmd
 jdk:/usr/bin/jconsole:/usr/lib/jvm/openjdk17/bin/jconsole
 jdk:/usr/bin/jdb:/usr/lib/jvm/openjdk17/bin/jdb
 jdk:/usr/bin/jdeprscan:/usr/lib/jvm/openjdk17/bin/jdeprscan
 jdk:/usr/bin/jdeps:/usr/lib/jvm/openjdk17/bin/jdeps
 jdk:/usr/bin/jhsdb:/usr/lib/jvm/openjdk17/bin/jhsdb
 jdk:/usr/bin/jimage:/usr/lib/jvm/openjdk17/bin/jimage
 jdk:/usr/bin/jinfo:/usr/lib/jvm/openjdk17/bin/jinfo
 jdk:/usr/bin/jjs:/usr/lib/jvm/openjdk17/bin/jjs
 jdk:/usr/bin/jlink:/usr/lib/jvm/openjdk17/bin/jlink
 jdk:/usr/bin/jmap:/usr/lib/jvm/openjdk17/bin/jmap
 jdk:/usr/bin/jmod:/usr/lib/jvm/openjdk17/bin/jmod
 jdk:/usr/bin/jps:/usr/lib/jvm/openjdk17/bin/jps
 jdk:/usr/bin/jrunscript:/usr/lib/jvm/openjdk17/bin/jrunscript
 jdk:/usr/bin/jshell:/usr/lib/jvm/openjdk17/bin/jshell
 jdk:/usr/bin/jstack:/usr/lib/jvm/openjdk17/bin/jstack
 jdk:/usr/bin/jstat:/usr/lib/jvm/openjdk17/bin/jstat
 jdk:/usr/bin/jstatd:/usr/lib/jvm/openjdk17/bin/jstatd
 jdk:/usr/bin/keytool:/usr/lib/jvm/openjdk17/bin/keytool
 jdk:/usr/bin/pack200:/usr/lib/jvm/openjdk17/bin/pack200
 jdk:/usr/bin/rmic:/usr/lib/jvm/openjdk17/bin/rmic
 jdk:/usr/bin/rmid:/usr/lib/jvm/openjdk17/bin/rmid
 jdk:/usr/bin/rmiregistry:/usr/lib/jvm/openjdk17/bin/rmiregistry
 jdk:/usr/bin/serialver:/usr/lib/jvm/openjdk17/bin/serialver
 jdk:/usr/bin/unpack200:/usr/lib/jvm/openjdk17/bin/unpack200
"

post_extract() {
	chmod +x configure
	if [ "$XBPS_TARGET_LIBC" = "musl" ]; then
		rm -r src/jdk.hotspot.agent
	fi
}

post_patch() {
	if [ "$XBPS_TARGET_LIBC" = "musl" ]; then
		for f in "${FILESDIR}"/musl_patches/*.patch; do
			msg_normal "Applying ${f#$FILESDIR/}\n"
			patch -slNp1 -i "$f"
		done
	fi
}

do_configure() {
	CFLAGS=${CFLAGS/-D_FORTIFY_SOURCE=2/}
	CXXFLAGS=${CXXFLAGS/-D_FORTIFY_SOURCE=2/}

	# force ELFv2 for ppc64 just in case
	case "$XBPS_TARGET_MACHINE" in
		ppc64*)
			CFLAGS+=" -DABI_ELFv2"
			CXXFLAGS+=" -DABI_ELFv2"
			;;
	esac

	configure_args=${configure_args/--with-libtool-sysroot=$XBPS_CROSS_BASE}
	if [ "$XBPS_CCACHE" ] && [ -z "$CROSS_BUILD" ]; then
		configure_args+=" --enable-ccache"
		CC="/usr/bin/cc"
		CXX="/usr/bin/c++"
	fi
	./configure ${configure_args} \
		--with-extra-cflags="$CFLAGS" \
		--with-extra-cxxflags="$CXXFLAGS" \
		--with-extra-ldflags="$LDFLAGS" \
		READELF=$READELF AR=$AR STRIP=$STRIP NM=$NM \
		OBJDUMP=$OBJDUMP OBJCOPY=$OBJCOPY
}

post_install() {
	rm -rf ${DESTDIR}/usr/lib/bin
	mv ${DESTDIR}/usr/lib/jvm/openjdk-${_base_version}-internal ${DESTDIR}/$_jdk_home
	vmkdir $_jdk_home/lib/security
	make-ca -g -f --destdir "${PWD}/ca" -k "${DESTDIR}/$_jdk_home/bin/keytool"
	mv ./ca/etc/pki/tls/java/cacerts ${DESTDIR}/$_jdk_home/lib/security/
	chmod -R ugo+rw ./ca
	rm -rf ./ca
	vmkdir etc/profile.d
	cat >>${DESTDIR}/etc/profile.d/10_openjdk17.sh <<-EOF
	export JAVA_HOME=\${JAVA_HOME=/$_jdk_home}
	EOF
	vlicense ASSEMBLY_EXCEPTION
	vlicense LICENSE
}

openjdk17-doc_package() {
	nostrip=yes
	noverifyrdeps=yes
	noshlibprovides=yes
	short_desc+=" -- documentation"
	pkg_install() {
		cd ${wrksrc}
		if [ "$build_option_docs" ]; then
			local _docdir=usr/share/doc/openjdk$_java_ver
			vmkdir $_docdir
			cp -a build/linux-*/images/docs/* ${PKGDESTDIR}/$_docdir
		fi
		vmove $_jdk_home/man/man1
	}
}

openjdk17-src_package() {
	nostrip=yes
	noverifyrdeps=yes
	noshlibprovides=yes
	short_desc+=" -- sources"
	pkg_install() {
		vmove "$_jdk_home/lib/src.zip"
	}
}
