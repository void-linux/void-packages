diff -ruN /usr/lib/cmake/dpp/dpp-noconfig.cmake /usr/lib/cmake/dpp_patch/dpp-noconfig.cmake
--- /usr/lib/cmake/dpp/dpp-noconfig.cmake	2022-06-23 23:29:54.000000000 +0800
+++ /usr/lib/cmake/dpp_patch/dpp-noconfig.cmake	2022-06-23 23:34:17.663735274 +0800
@@ -8,12 +8,12 @@
 # Import target "dpp::dpp" for configuration ""
 set_property(TARGET dpp::dpp APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
 set_target_properties(dpp::dpp PROPERTIES
-  IMPORTED_LOCATION_NOCONFIG "${_IMPORT_PREFIX}/lib64/dpp-10.0/libdpp.so.10.0.10"
+  IMPORTED_LOCATION_NOCONFIG "${_IMPORT_PREFIX}/lib64/libdpp.so.10.0.10"
   IMPORTED_SONAME_NOCONFIG "libdpp.so.10.0.10"
   )
 
 list(APPEND _IMPORT_CHECK_TARGETS dpp::dpp )
-list(APPEND _IMPORT_CHECK_FILES_FOR_dpp::dpp "${_IMPORT_PREFIX}/lib64/dpp-10.0/libdpp.so.10.0.10" )
+list(APPEND _IMPORT_CHECK_FILES_FOR_dpp::dpp "${_IMPORT_PREFIX}/lib64/libdpp.so.10.0.10" )
 
 # Commands beyond this point should not need to know the version.
 set(CMAKE_IMPORT_FILE_VERSION)
diff -ruN /usr/lib/cmake/dpp/dpp-targets-noconfig.cmake /usr/lib/cmake/dpp_patch/dpp-targets-noconfig.cmake
--- /usr/lib/cmake/dpp/dpp-targets-noconfig.cmake	2022-06-23 23:29:54.000000000 +0800
+++ /usr/lib/cmake/dpp_patch/dpp-targets-noconfig.cmake	2022-06-23 23:34:17.670735274 +0800
@@ -6,14 +6,14 @@
 set(CMAKE_IMPORT_FILE_VERSION 1)
 
 # Import target "dpp" for configuration ""
-set_property(TARGET dpp APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
-set_target_properties(dpp PROPERTIES
+set_property(TARGET dpp::dpp APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
+set_target_properties(dpp::dpp PROPERTIES
   IMPORTED_LOCATION_NOCONFIG "${_IMPORT_PREFIX}/lib64/libdpp.so.10.0.10"
   IMPORTED_SONAME_NOCONFIG "libdpp.so.10.0.10"
   )
 
-list(APPEND _IMPORT_CHECK_TARGETS dpp )
-list(APPEND _IMPORT_CHECK_FILES_FOR_dpp "${_IMPORT_PREFIX}/lib64/libdpp.so.10.0.10" )
+list(APPEND _IMPORT_CHECK_TARGETS dpp::dpp )
+list(APPEND _IMPORT_CHECK_FILES_FOR_dpp::dpp "${_IMPORT_PREFIX}/lib64/libdpp.so.10.0.10" )
 
 # Commands beyond this point should not need to know the version.
 set(CMAKE_IMPORT_FILE_VERSION)
diff -ruN /usr/lib/cmake/dpp/dpp-targets.cmake /usr/lib/cmake/dpp_patch/dpp-targets.cmake
--- /usr/lib/cmake/dpp/dpp-targets.cmake	2022-06-23 23:29:54.000000000 +0800
+++ /usr/lib/cmake/dpp_patch/dpp-targets.cmake	2022-06-23 23:34:17.668735274 +0800
@@ -47,7 +47,7 @@
 # cross-prefix symbolic link such as /lib -> /usr/lib.
 get_filename_component(_realCurr "${_IMPORT_PREFIX}" REALPATH)
 get_filename_component(_realOrig "/usr/lib64" REALPATH)
-if(_realCurr STREQUAL _realOrig)
+if(1)
   set(_IMPORT_PREFIX "/usr/lib64")
 endif()
 unset(_realOrig)
@@ -61,7 +61,7 @@
 add_library(dpp SHARED IMPORTED)
 
 set_target_properties(dpp PROPERTIES
-  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/dpp-10.0"
+  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
   INTERFACE_LINK_LIBRARIES "/usr/lib/libcrypto.so;/usr/lib/libssl.so;/usr/lib/libz.so;/usr/lib/libsodium.so;/usr/lib/libopus.so;/usr/lib/libm.so"
 )
 
diff -ruN /usr/lib/cmake/dpp/dpp.cmake /usr/lib/cmake/dpp_patch/dpp.cmake
--- /usr/lib/cmake/dpp/dpp.cmake	2022-06-23 23:29:54.000000000 +0800
+++ /usr/lib/cmake/dpp_patch/dpp.cmake	2022-06-23 23:34:17.667735274 +0800
@@ -46,9 +46,9 @@
 # Use original install prefix when loaded through a
 # cross-prefix symbolic link such as /lib -> /usr/lib.
 get_filename_component(_realCurr "${_IMPORT_PREFIX}" REALPATH)
-get_filename_component(_realOrig "/usr/lib64/dpp-10.0" REALPATH)
-if(_realCurr STREQUAL _realOrig)
-  set(_IMPORT_PREFIX "/usr/lib64/dpp-10.0")
+get_filename_component(_realOrig "/usr/lib64" REALPATH)
+if(1)
+  set(_IMPORT_PREFIX "/usr/lib64")
 endif()
 unset(_realOrig)
 unset(_realCurr)
@@ -62,7 +62,7 @@
 add_library(dpp::dpp SHARED IMPORTED)
 
 set_target_properties(dpp::dpp PROPERTIES
-  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/dpp-10.0"
+  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
   INTERFACE_LINK_LIBRARIES "/usr/lib/libcrypto.so;/usr/lib/libssl.so;/usr/lib/libz.so;/usr/lib/libsodium.so;/usr/lib/libopus.so;/usr/lib/libm.so"
 )
 
