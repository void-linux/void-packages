--- FreeFileSync/Source/RealTimeSync/folder_selector2.cpp	2021-03-03 20:06:02.000000000 +0000
+++ FreeFileSync/Source/RealTimeSync/folder_selector2.cpp	2021-03-17 00:43:34.001731441 +0000
@@ -158,7 +158,7 @@
     }
 
     Zstring newFolderPath;
-    wxDirDialog folderSelector(parent_, _("Select a folder"), utfTo<wxString>(defaultFolderPath), wxDD_DEFAULT_STYLE | wxDD_SHOW_HIDDEN);
+    wxDirDialog folderSelector(parent_, _("Select a folder"), utfTo<wxString>(defaultFolderPath));
     if (folderSelector.ShowModal() != wxID_OK)
         return;
     newFolderPath = utfTo<Zstring>(folderSelector.GetPath());
--- FreeFileSync/Source/afs/sftp.cpp	2021-03-03 20:06:01.000000000 +0000
+++ FreeFileSync/Source/afs/sftp.cpp	2021-03-17 00:43:34.003731440 +0000
@@ -67,9 +67,9 @@
 
 //attention: if operation fails due to time out, e.g. file copy, the cleanup code may hang, too => total delay = 2 x time out interval
 
-const size_t SFTP_OPTIMAL_BLOCK_SIZE_READ  = 8 * MAX_SFTP_READ_SIZE;     //https://github.com/libssh2/libssh2/issues/90
-const size_t SFTP_OPTIMAL_BLOCK_SIZE_WRITE = 8 * MAX_SFTP_OUTGOING_SIZE; //
-static_assert(MAX_SFTP_READ_SIZE == 30000 && MAX_SFTP_OUTGOING_SIZE == 30000, "reevaluate optimal block sizes if these constants change!");
+const size_t SFTP_OPTIMAL_BLOCK_SIZE_READ  = 8 * 30000;     //https://github.com/libssh2/libssh2/issues/90
+const size_t SFTP_OPTIMAL_BLOCK_SIZE_WRITE = 8 * 30000; //
+static_assert(30000 == 30000 && 30000 == 30000, "reevaluate optimal block sizes if these constants change!");
 
 /* Perf Test, Sourceforge frs, SFTP upload, compressed 25 MB test file:
 
--- FreeFileSync/Source/ui/command_box.h	2021-03-03 20:06:00.000000000 +0000
+++ FreeFileSync/Source/ui/command_box.h	2021-03-17 00:43:34.005731439 +0000
@@ -30,7 +30,7 @@
                const wxString choices[] = nullptr,
                long style = 0,
                const wxValidator& validator = wxDefaultValidator,
-               const wxString& name = wxASCII_STR(wxComboBoxNameStr));
+               const wxString& name = wxString::FromAscii(wxComboBoxNameStr));
 
     void setHistory(const std::vector<Zstring>& history, size_t historyMax) { history_ = history; historyMax_ = historyMax; }
     std::vector<Zstring> getHistory() const { return history_; }
--- FreeFileSync/Source/ui/folder_history_box.h	2021-03-03 20:06:00.000000000 +0000
+++ FreeFileSync/Source/ui/folder_history_box.h	2021-03-17 00:43:34.005731439 +0000
@@ -68,7 +68,7 @@
                      const wxString choices[] = nullptr,
                      long style = 0,
                      const wxValidator& validator = wxDefaultValidator,
-                     const wxString& name = wxASCII_STR(wxComboBoxNameStr));
+                     const wxString& name = wxString::FromAscii(wxComboBoxNameStr));
 
     void setHistory(std::shared_ptr<HistoryList> sharedHistory) { sharedHistory_ = std::move(sharedHistory); }
     std::shared_ptr<HistoryList> getHistory() { return sharedHistory_; }
--- FreeFileSync/Source/ui/folder_selector.cpp	2021-03-03 20:06:01.000000000 +0000
+++ FreeFileSync/Source/ui/folder_selector.cpp	2021-03-17 00:43:34.005731439 +0000
@@ -236,7 +236,7 @@
 
     Zstring shellItemPath;
     //default size? Windows: not implemented, Linux(GTK2): not implemented, macOS: not implemented => wxWidgets, what is this shit!?
-    wxDirDialog folderSelector(parent_, _("Select a folder"), utfTo<wxString>(defaultFolderNative), wxDD_DEFAULT_STYLE | wxDD_SHOW_HIDDEN);
+    wxDirDialog folderSelector(parent_, _("Select a folder"), utfTo<wxString>(defaultFolderNative));
     //GTK2: "Show hidden" is also available as a context menu option in the folder picker!
     //It looks like wxDD_SHOW_HIDDEN only sets the default when opening for the first time!?
     if (folderSelector.ShowModal() != wxID_OK)
--- FreeFileSync/Source/ui/small_dlgs.cpp	2021-03-17 00:53:28.014536756 +0000
+++ FreeFileSync/Source/ui/small_dlgs.cpp	2021-03-17 00:46:53.668666002 +0000
@@ -1682,7 +1682,6 @@
     //setMainInstructionFont(*m_staticTextMain);
 
     m_bitmapActivation->SetBitmap(loadImage("internet"));
-    m_textCtrlOfflineActivationKey->ForceUpper();
 
     setTextWithUrls(*m_richTextLastError, lastErrorMsg);
     setTextWithUrls(*m_richTextManualActivationUrl, manualActivationUrl);
--- wx+/bitmap_button.h	2021-03-03 20:06:00.000000000 +0000
+++ wx+/bitmap_button.h	2021-03-17 00:43:34.008731438 +0000
@@ -26,7 +26,7 @@
                      const wxSize& size           = wxDefaultSize,
                      long style                   = 0,
                      const wxValidator& validator = wxDefaultValidator,
-                     const wxString& name         = wxASCII_STR(wxButtonNameStr)) :
+                     const wxString& name         = wxString::FromAscii(wxButtonNameStr)) :
         wxBitmapButton(parent, id, wxNullBitmap, pos, size, style, validator, name)
     {
         SetLabel(label);
--- wx+/choice_enum.h	2021-03-17 00:53:28.014536756 +0000
+++ wx+/choice_enum.h	2021-03-17 00:43:34.007731439 +0000
@@ -81,7 +81,7 @@
     {
         ctrl.Clear();
         for (auto item : items) {
-            ctrl.Append(item);
+          ctrl.Append(item);
         }
         itemsSetLast = std::move(items);
     }
--- wx+/dc.h	2021-03-03 20:06:00.000000000 +0000
+++ wx+/dc.h	2021-03-17 00:43:34.007731439 +0000
@@ -68,13 +68,6 @@
 inline
 int fastFromDIP(int d) //like wxWindow::FromDIP (but tied to primary monitor and buffered)
 {
-#ifndef wxHAVE_DPI_INDEPENDENT_PIXELS
-#error why is wxHAVE_DPI_INDEPENDENT_PIXELS not defined?
-#endif
-    //GTK2 doesn't properly support high DPI: https://freefilesync.org/forum/viewtopic.php?t=6114
-    //=> requires general fix at wxWidgets-level
-
-    //https://github.com/wxWidgets/wxWidgets/blob/d9d05c2bb201078f5e762c42458ca2f74af5b322/include/wx/window.h#L2060
     return d; //e.g. macOS, GTK3
 }
 int fastFromDIP(double d) = delete;
--- wx+/graph.h	2021-03-03 20:06:00.000000000 +0000
+++ wx+/graph.h	2021-03-17 00:43:34.008731438 +0000
@@ -192,7 +192,7 @@
             const wxPoint& pos   = wxDefaultPosition,
             const wxSize& size   = wxDefaultSize,
             long style           = wxTAB_TRAVERSAL | wxNO_BORDER,
-            const wxString& name = wxASCII_STR(wxPanelNameStr));
+            const wxString& name = wxString::FromAscii(wxPanelNameStr));
 
     class CurveAttributes
     {
--- wx+/grid.cpp	2021-03-03 20:06:02.000000000 +0000
+++ wx+/grid.cpp	2021-03-17 00:46:17.124677980 +0000
@@ -263,7 +263,7 @@
 {
 public:
     SubWindow(Grid& parent) :
-        wxWindow(&parent, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxWANTS_CHARS | wxBORDER_NONE, wxASCII_STR(wxPanelNameStr)),
+        wxWindow(&parent, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxWANTS_CHARS | wxBORDER_NONE, wxString::FromAscii(wxPanelNameStr)),
         parent_(parent)
     {
         Bind(wxEVT_PAINT, [this](wxPaintEvent& event) { onPaintEvent(event); });
@@ -1357,7 +1357,7 @@
             {
                 if (overlapPix != 0)
                 {
-                    const double scrollSpeed = wnd_.ToDIP(overlapPix) * mouseDragSpeedIncScrollU; //unit: [scroll units / sec]
+                    const double scrollSpeed = 6; // wnd_.ToDIP(overlapPix) * mouseDragSpeedIncScrollU; //unit: [scroll units / sec]
                     toScroll += scrollSpeed * deltaSecs;
                 }
                 else
--- wx+/grid.h	2021-03-03 20:06:00.000000000 +0000
+++ wx+/grid.h	2021-03-17 00:43:34.008731438 +0000
@@ -150,7 +150,7 @@
          const wxPoint& pos   = wxDefaultPosition,
          const wxSize& size   = wxDefaultSize,
          long style           = wxTAB_TRAVERSAL | wxNO_BORDER,
-         const wxString& name = wxASCII_STR(wxPanelNameStr));
+         const wxString& name = wxString::FromAscii(wxPanelNameStr));
 
     size_t getRowCount() const;
 
--- wx+/no_flicker.h	2021-03-03 20:06:00.000000000 +0000
+++ wx+/no_flicker.h	2021-03-17 00:43:34.008731438 +0000
@@ -69,9 +69,6 @@
     richCtrl.BeginSuppressUndo();
     ZEN_ON_SCOPE_EXIT(richCtrl.EndSuppressUndo());
 
-    //fix mouse scroll speed: why the FUCK is this even necessary!
-    richCtrl.SetLineHeight(richCtrl.GetCharHeight());
-
     //get rid of margins and space between text blocks/"paragraphs"
     richCtrl.SetMargins({0, 0});
     richCtrl.BeginParagraphSpacing(0, 0);
--- wx+/toggle_button.h	2021-03-03 20:06:00.000000000 +0000
+++ wx+/toggle_button.h	2021-03-17 00:43:34.008731438 +0000
@@ -24,7 +24,7 @@
                  const wxSize&      size = wxDefaultSize,
                  long               style = 0,
                  const wxValidator& validator = wxDefaultValidator,
-                 const wxString&    name = wxASCII_STR(wxButtonNameStr)) :
+                 const wxString&    name = wxString::FromAscii(wxButtonNameStr)) :
         wxBitmapButton(parent, id, bitmap, pos, size, style, validator, name) {}
 
     //wxButton constructor
@@ -35,7 +35,7 @@
                  const wxSize&      size = wxDefaultSize,
                  long               style = 0,
                  const wxValidator& validator = wxDefaultValidator,
-                 const wxString&    name = wxASCII_STR(wxButtonNameStr)) :
+                 const wxString&    name = wxString::FromAscii(wxButtonNameStr)) :
         wxBitmapButton(parent, id, wxNullBitmap, pos, size, style, validator, name)
     {
         SetLabel(label);
