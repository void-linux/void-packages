diff -ru data-bword-old/src/Data/BinaryWord.hs data-bword/src/Data/BinaryWord.hs
--- a/data-bword/src/Data/BinaryWord.hs	2001-09-09 02:46:40.000000000 +0100
+++ b/data-bword/src/Data/BinaryWord.hs	2025-07-09 15:54:46.655592632 +0100
@@ -26,7 +26,7 @@
 #if __GLASGOW_HASKELL__ >= 705
 import GHC.Prim (plusWord2#, timesWord2#)
 # if __GLASGOW_HASKELL__ >= 904
-import GHC.Prim (word64ToWord#, wordToWord64#)
+import GHC.Prim (word32ToWord#, wordToWord32#, word64ToWord#, wordToWord64#)
 # endif
 # if WORD_SIZE_IN_BITS == 32
 import GHC.Word (Word32(..))
@@ -217,9 +217,9 @@
   {-# INLINE signedWord #-}
 #if __GLASGOW_HASKELL__ >= 705 && WORD_SIZE_IN_BITS == 32
   unwrappedAdd (W32# x) (W32# y) = hi `seq` lo `seq` (hi, lo)
-    where !(# hi', lo' #) = plusWord2# x y
-          lo = W32# lo'
-          hi = W32# hi'
+    where !(# hi', lo' #) = plusWord2# (word32ToWord# x) (word32ToWord# y)
+          lo = W32# (wordToWord32# lo')
+          hi = W32# (wordToWord32# hi')
 #else
   unwrappedAdd x y = hi `seq` lo `seq` (hi, lo)
     where s  = fromIntegral x + fromIntegral y ∷ Word64
@@ -229,9 +229,9 @@
   {-# INLINE unwrappedAdd #-}
 #if __GLASGOW_HASKELL__ >= 705 && WORD_SIZE_IN_BITS == 32
   unwrappedMul (W32# x) (W32# y) = hi `seq` lo `seq` (hi, lo)
-    where !(# hi', lo' #) = timesWord2# x y
-          lo = W32# lo'
-          hi = W32# hi'
+    where !(# hi', lo' #) = timesWord2# (word32ToWord# x) (word32ToWord# y)
+          lo = W32# (wordToWord32# lo')
+          hi = W32# (wordToWord32# hi')
 #else
   unwrappedMul x y = hi `seq` lo `seq` (hi, lo)
     where p  = fromIntegral x * fromIntegral y ∷ Word64
