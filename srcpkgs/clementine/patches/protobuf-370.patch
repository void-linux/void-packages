--- a/src/internet/lastfm/lastfmcompat.cpp
+++ b/src/internet/lastfm/lastfmcompat.cpp
@@ -68,13 +68,13 @@ bool ParseQuery(const QByteArray& data, XmlQuery* query,
       return false;
     }
 #endif  // Q_OS_WIN32
-  } catch (lastfm::ws::ParseError e) {
+  } catch (lastfm::ws::ParseError &e) {
     qLog(Error) << "Last.fm parse error: " << e.enumValue();
     if (connection_problems) {
       *connection_problems = e.enumValue() == lastfm::ws::MalformedResponse;
     }
     return false;
-  } catch (std::runtime_error& e) {
+  }  (std::runtime_error& e) {
     qLog(Error) << e.what();
     return false;
   }
--- a/src/internet/spotify/spotifyblobdownloader.cpp
+++ b/src/internet/spotify/spotifyblobdownloader.cpp
@@ -216,7 +216,7 @@ bool SpotifyBlobDownloader::CheckSignature(
         return false;
       }
     }
-  } catch (std::exception e) {
+  } catch (std::exception &e) {
     // This should only happen if we fail to parse our own key.
     qLog(Debug) << "Verifying spotify blob signature failed:" << e.what();
     return false;
--- a/src/songinfo/echonestbiographies.cpp
+++ b/src/songinfo/echonestbiographies.cpp
@@ -66,7 +66,7 @@ void EchoNestBiographies::RequestFinished() {
   try {
     request->artist_->parseProfile(reply);
   }
-  catch (Echonest::ParseError e) {
+  catch (Echonest::ParseError &e) {
     qLog(Warning) << "Error parsing echonest reply:" << e.errorType()
                   << e.what();
   }
--- a/src/songinfo/echonestimages.cpp
+++ b/src/songinfo/echonestimages.cpp
@@ -68,7 +68,7 @@ void EchoNestImages::RequestFinished(QNetworkReply* reply, int id,
   reply->deleteLater();
   try {
     artist.parseProfile(reply);
-  } catch (Echonest::ParseError e) {
+  } catch (Echonest::ParseError &e) {
     qLog(Warning) << "Error parsing echonest reply:" << e.errorType()
                   << e.what();
   }
@@ -94,7 +94,7 @@ void EchoNestImages::IdsFound(QNetworkReply* reply, int request_id) {
         DoSpotifyImageRequest(id.foreign_id, request_id);
       }
     }
-  } catch (Echonest::ParseError e) {
+  } catch (Echonest::ParseError &e) {
     qLog(Warning) << "Error parsing echonest reply:" << e.errorType()
                   << e.what();
   }
--- a/src/songinfo/echonestsimilarartists.cpp
+++ b/src/songinfo/echonestsimilarartists.cpp
@@ -47,7 +47,7 @@ void EchoNestSimilarArtists::RequestFinished() {
   try {
     artists = Echonest::Artist::parseSimilar(reply);
   }
-  catch (Echonest::ParseError e) {
+  catch (Echonest::ParseError &e) {
     qLog(Warning) << "Error parsing echonest reply:" << e.errorType()
                   << e.what();
   }
--- a/src/songinfo/echonesttags.cpp
+++ b/src/songinfo/echonesttags.cpp
@@ -51,7 +51,7 @@ void EchoNestTags::RequestFinished() {
   try {
     request->artist_->parseProfile(reply);
   }
-  catch (Echonest::ParseError e) {
+  catch (Echonest::ParseError &e) {
     qLog(Warning) << "Error parsing echonest reply:" << e.errorType()
                   << e.what();
   }
