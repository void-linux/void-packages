commit 59f1baf712f50873af54148cb2a3f379ce796353
Author: q66 <daniel@octaforge.org>
Date:   Sun Jul 24 21:34:59 2022 +0200

    remove stupid broken tests
    
    I don't even know what the purpose of this is supposed to be,
    considering lua does not guarantee iteration order in a hash
    table in any way, and it comes out different on every run.

diff --git a/3rd/bee.lua/test/test_lua.lua b/3rd/bee.lua/test/test_lua.lua
index 5b85af7..cf653c0 100644
--- a/3rd/bee.lua/test/test_lua.lua
+++ b/3rd/bee.lua/test/test_lua.lua
@@ -21,19 +21,4 @@ function test_lua:test_stack_overflow_2()
 end
 
 function test_lua:test_next()
-    local t = {}
-    for i = 1, 26 do
-        t[string.char(0x40+i)] = true
-    end
-    local expected = {
-        'Z', 'Y', 'V', 'U', 'X', 'W', 'R', 'Q', 'T', 'S', 'N', 'M', 'P', 'O', 'J', 'I', 'L', 'K', 'F', 'E', 'H', 'G', 'B', 'A', 'D', 'C'
-    }
-    local function checkOK()
-        local key
-        for i = 1, 26 do
-            key = next(t, key)
-            lt.assertEquals(key, expected[i])
-        end
-    end
-    checkOK()
 end
diff --git a/3rd/luamake/3rd/bee.lua/test/test_lua.lua b/3rd/luamake/3rd/bee.lua/test/test_lua.lua
index 5b85af7..cf653c0 100644
--- a/3rd/luamake/3rd/bee.lua/test/test_lua.lua
+++ b/3rd/luamake/3rd/bee.lua/test/test_lua.lua
@@ -21,19 +21,4 @@ function test_lua:test_stack_overflow_2()
 end
 
 function test_lua:test_next()
-    local t = {}
-    for i = 1, 26 do
-        t[string.char(0x40+i)] = true
-    end
-    local expected = {
-        'Z', 'Y', 'V', 'U', 'X', 'W', 'R', 'Q', 'T', 'S', 'N', 'M', 'P', 'O', 'J', 'I', 'L', 'K', 'F', 'E', 'H', 'G', 'B', 'A', 'D', 'C'
-    }
-    local function checkOK()
-        local key
-        for i = 1, 26 do
-            key = next(t, key)
-            lt.assertEquals(key, expected[i])
-        end
-    end
-    checkOK()
 end
diff --git a/luamake/3rd/bee.lua/test/test_lua.lua b/luamake/3rd/bee.lua/test/test_lua.lua
index 5b85af7..cf653c0 100644
--- a/luamake/3rd/bee.lua/test/test_lua.lua
+++ b/luamake/3rd/bee.lua/test/test_lua.lua
@@ -21,19 +21,4 @@ function test_lua:test_stack_overflow_2()
 end
 
 function test_lua:test_next()
-    local t = {}
-    for i = 1, 26 do
-        t[string.char(0x40+i)] = true
-    end
-    local expected = {
-        'Z', 'Y', 'V', 'U', 'X', 'W', 'R', 'Q', 'T', 'S', 'N', 'M', 'P', 'O', 'J', 'I', 'L', 'K', 'F', 'E', 'H', 'G', 'B', 'A', 'D', 'C'
-    }
-    local function checkOK()
-        local key
-        for i = 1, 26 do
-            key = next(t, key)
-            lt.assertEquals(key, expected[i])
-        end
-    end
-    checkOK()
 end
