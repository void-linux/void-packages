diff --git a/make/GenerateLinkOptData.gmk b/make/GenerateLinkOptData.gmk
index 5dd766c8c07..7b2480625f1 100644
--- a/make/GenerateLinkOptData.gmk
+++ b/make/GenerateLinkOptData.gmk
@@ -89,9 +89,10 @@ $(CLASSLIST_FILE): $(INTERIM_IMAGE_DIR)/bin/java$(EXECUTABLE_SUFFIX) $(CLASSLIST
 	        exit $$exitcode \
 	    )
 	$(GREP) -v HelloClasslist $@.raw.2 > $@.raw.3
+	echo "" > $@
 	$(FIXPATH) $(INTERIM_IMAGE_DIR)/bin/java \
 	    -cp $(SUPPORT_OUTPUTDIR)/classlist.jar \
-	    build.tools.classlist.SortClasslist $@.raw.3 > $@
+	    build.tools.classlist.SortClasslist $@.raw.3 $@
 
 # The jli trace is created by the same recipe as classlist. By declaring these
 # dependencies, make will correctly rebuild both jli trace and classlist
diff --git a/make/jdk/src/classes/build/tools/classlist/SortClasslist.java b/make/jdk/src/classes/build/tools/classlist/SortClasslist.java
index 07987feb2da..7a5b84421fc 100644
--- a/make/jdk/src/classes/build/tools/classlist/SortClasslist.java
+++ b/make/jdk/src/classes/build/tools/classlist/SortClasslist.java
@@ -33,6 +33,10 @@ package build.tools.classlist;
 
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.PrintWriter;
+import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.regex.Pattern;
@@ -50,13 +54,15 @@ public class SortClasslist {
         ArrayList<String> lambdas = new ArrayList<>();
 
         FileInputStream fis = new FileInputStream(args[0]);
+        FileOutputStream fos = new FileOutputStream(args[1], false);
+        PrintWriter outWriter = new PrintWriter(new OutputStreamWriter(fos, StandardCharsets.UTF_8));
         Scanner scanner = new Scanner(fis);
         while (scanner.hasNextLine()) {
             String line = scanner.nextLine();
             if (line.startsWith("#")) {
                 // Comments -- print them first without sorting. These appear only at the top
                 // of the file.
-                System.out.println(line);
+                outWriter.println(line);
             } else if (line.startsWith("@")) {
                 // @lambda-form-invoker, @lambda-proxy, etc.
                 lambdas.add(line);
@@ -73,10 +79,13 @@ public class SortClasslist {
         Collections.sort(lambdas);
 
         for (String s : classes) {
-            System.out.println(s);
+            outWriter.println(s);
         }
         for (String s : lambdas) {
-            System.out.println(s);
+            outWriter.println(s);
         }
+
+        outWriter.flush();
+        outWriter.close();
     }
 }
