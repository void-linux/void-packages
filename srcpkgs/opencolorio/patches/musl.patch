From 57b786ca00a617b8f530eeecc951da9156b18c03 Mon Sep 17 00:00:00 2001
From: tibequadorian <tibequadorian@posteo.de>
Date: Sat, 26 Mar 2022 17:03:31 +0100
Subject: [PATCH] Fix musl build

In the 'from_chars' function, it's first checked if errno is 0 and immediately
returns with an std::errc::result_out_of_range aka [ERANGE].
According to strtod(3p), if no conversion could be performed, errno may be set
to [EINVAL]. musl libc does this so we exclude EINVAL from the first check.

musl does not contain the 'strtol_l' function so we use 'strtol' instead.
---
 src/utils/NumberUtils.h | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/utils/NumberUtils.h b/src/utils/NumberUtils.h
index d0a7471f..f600b876 100644
--- a/src/utils/NumberUtils.h
+++ b/src/utils/NumberUtils.h
@@ -68,7 +68,7 @@ really_inline from_chars_result from_chars(const char *first, const char *last,
     tempval = ::strtod_l(first, &endptr, loc.local);
 #endif
 
-    if (errno != 0)
+    if (errno != 0 && errno != EINVAL)
     {
         return {first + (endptr - first), std::errc::result_out_of_range};
     }
@@ -139,8 +139,10 @@ really_inline from_chars_result from_chars(const char *first, const char *last,
     long int
 #ifdef _WIN32
     tempval = _strtol_l(first, &endptr, 0, loc.local);
-#else
+#elif __GLIBC__
     tempval = ::strtol_l(first, &endptr, 0, loc.local);
+#else
+    tempval = ::strtol(first, &endptr, 0);
 #endif
 
     if (errno != 0)
-- 
2.35.1

