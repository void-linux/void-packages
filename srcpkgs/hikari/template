# Template file for 'hikari'
pkgname=hikari
version=2.0.1
revision=1
build_style=gnu-makefile
make_cmd=bmake
make_use_env=yes
make_build_args="WITH_POSIX_C_SOURCE=YES WITH_XWAYLAND=YES
 WITH_SCREENCOPY=YES WITH_GAMMACONTROL=YES WITH_LAYERSHELL=YES ETC_PREFIX="
make_install_args="ETC_PREFIX="
hostmakedepends="bmake pkg-config"
makedepends="wlroots-devel pango-devel cairo-devel pam-devel glib-devel
 libinput-devel xcb-util-errors-devel xcb-util-wm-devel libucl-devel
 libxkbcommon-devel pixman-devel libevdev-devel"
short_desc="Stacking Wayland compositor with tiling features"
maintainer="Andrew J. Hesford <ajh@sideband.org>"
license="BSD-2-Clause"
homepage="https://hikari.acmelabs.space"
distfiles="${homepage}/releases/${pkgname}-${version}.tar.gz"
checksum=13e496ddf8d31b9d49862b97e5609c6d0fb2014d1fbe16636be59be8b00ffbfa
conf_files="/etc/pam.d/hikari-unlocker /etc/hikari/hikari.conf"

if [ "$CROSS_BUILD" ]; then
	# Makefile executes wayland-scanner
	hostmakedepends+=" wayland-devel"
fi

pre_build() {
	# The hikari Makefile appends to the CFLAGS and LDFLAGS variables;
	# bmake ignores these appends altogether when passing variables on the
	# command line (i.e., when make_use_env is undefined), but it ignores
	# the values in the environment when make_use_env=yes. The _EXTRA
	# variables provided in the Makefile allow us to force the right flags.
	export CFLAGS_EXTRA="${CFLAGS}"
	export LDFLAGS_EXTRA="${LDFLAGS}"

	# bmake tends to ignore CC in the environment
	make_build_args+=" CC=$CC"
}

post_install() {
	vlicense LICENSE
}
