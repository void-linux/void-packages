From b1de9f65075350dfd482dc49548a6033cd994687 Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Sat, 5 Apr 2014 20:25:21 -0400
Subject: [PATCH 3/8] Remove Ubuntu-specific language code

---
 panels/common/cc-common-language.c  | 89 ++-----------------------------------
 panels/common/cc-common-language.h  |  1 -
 panels/common/cc-language-chooser.c |  8 ++--
 panels/common/gdm-languages.c       | 30 ++-----------
 4 files changed, 11 insertions(+), 117 deletions(-)

diff --git a/panels/common/cc-common-language.c b/panels/common/cc-common-language.c
index 885afe1..e4cdcf5 100644
--- a/panels/common/cc-common-language.c
+++ b/panels/common/cc-common-language.c
@@ -326,66 +326,6 @@ cc_common_language_get_current_language (void)
         return language;
 }
 
-gchar *
-cc_common_language_get_property (const gchar *prop_name)
-{
-	GDBusConnection  *bus;
-	gchar            *user_path;
-	GError           *error = NULL;
-	GVariant         *properties;
-	GVariantIter     *iter;
-	gchar            *key;
-	GVariant         *value;
-	gchar            *ret = NULL;
-
-	if (g_strcmp0 (prop_name, "Language") != 0 && g_strcmp0 (prop_name, "FormatsLocale") != 0) {
-		g_warning ("Invalid argument: '%s'", prop_name);
-		return ret;
-	}
-
-	bus = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, NULL);
-	user_path = g_strdup_printf ("/org/freedesktop/Accounts/User%i", getuid ());
-
-	properties = g_dbus_connection_call_sync (bus,
-	                                          "org.freedesktop.Accounts",
-	                                          user_path,
-	                                          "org.freedesktop.DBus.Properties",
-	                                          "GetAll",
-	                                          g_variant_new ("(s)", "org.freedesktop.Accounts.User"),
-	                                          G_VARIANT_TYPE ("(a{sv})"),
-	                                          G_DBUS_CALL_FLAGS_NONE,
-	                                          -1,
-	                                          NULL,
-	                                          &error);
-	if (!properties) {
-		g_warning ("Error calling GetAll() when retrieving properties for %s: %s", user_path, error->message);
-		g_error_free (error);
-                /* g_hash_table_lookup() is not NULL-safe, so don't return NULL */
-                if (g_strcmp0 (prop_name, "Language") == 0)
-                        ret = g_strdup ("en");
-                else
-                        ret = g_strdup ("en_US.UTF-8");
-		goto out;
-	}
-
-	g_variant_get (properties, "(a{sv})", &iter);
-	while (g_variant_iter_loop (iter, "{&sv}", &key, &value)) {
-		if (g_strcmp0 (key, prop_name) == 0) {
-			g_variant_get (value, "s", &ret);
-			break;
-		}
-	}
-
-	g_variant_unref (properties);
-	g_variant_iter_free (iter);
-
-out:
-	g_object_unref (bus);
-	g_free (user_path);
-
-	return ret;
-}
-
 static void
 languages_foreach_cb (gpointer key,
 		      gpointer value,
@@ -467,7 +407,7 @@ cc_common_language_select_current_language (GtkTreeView *treeview)
 	char *lang;
 	gboolean found;
 
-	lang = cc_common_language_get_property ("Language");
+	lang = cc_common_language_get_current_language ();
 	g_debug ("Trying to select lang '%s' in treeview", lang);
 	model = gtk_tree_view_get_model (treeview);
 	found = FALSE;
@@ -522,7 +462,6 @@ user_language_has_translations (const char *locale)
         return ret;
 }
 
-/*
 static void
 add_other_users_language (GHashTable *ht)
 {
@@ -602,7 +541,6 @@ add_other_users_language (GHashTable *ht)
 
         g_object_unref (proxy);
 }
-*/
 
 GHashTable *
 cc_common_language_get_initial_languages (void)
@@ -614,7 +552,6 @@ cc_common_language_get_initial_languages (void)
         ht = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_free);
 
         /* Add some common languages first */
-/*
         g_hash_table_insert (ht, g_strdup ("en_US.utf8"), g_strdup (_("English")));
         if (gdm_language_has_translations ("en_GB"))
                 g_hash_table_insert (ht, g_strdup ("en_GB.utf8"), g_strdup (_("British English")));
@@ -635,29 +572,11 @@ cc_common_language_get_initial_languages (void)
         if (gdm_language_has_translations ("ar") ||
             gdm_language_has_translations ("ar_EG"))
                 g_hash_table_insert (ht, g_strdup ("ar_EG.utf8"), g_strdup (_("Arabic")));
-*/
         /* Add the languages used by other users on the system */
-//        add_other_users_language (ht);
-
-        /* Add installed languages */
-        gchar  *avail_languages;
-        GError *error = NULL;
-        if (g_spawn_command_line_sync ("/usr/share/language-tools/language-options",
-                                        &avail_languages, NULL, NULL, &error)) {
-                name = strtok (avail_languages, "\n");
-                while (name != NULL) {
-                        language = gdm_get_language_from_name (name, NULL);
-                        g_hash_table_insert (ht, g_strdup (name), language);
-                        name = strtok (NULL, "\n");
-                }
-                g_free (avail_languages);
-        } else {
-                g_warning ("Couldn't get available languages: %s", error->message);
-                g_error_free (error);
-        }
+        add_other_users_language (ht);
 
-        /* Add current language */
-        name = cc_common_language_get_property ("Language");
+        /* Add current locale */
+        name = cc_common_language_get_current_language ();
         if (g_hash_table_lookup (ht, name) == NULL) {
                 language = gdm_get_language_from_name (name, NULL);
                 g_hash_table_insert (ht, name, language);
diff --git a/panels/common/cc-common-language.h b/panels/common/cc-common-language.h
index 9894988..d88d107 100644
--- a/panels/common/cc-common-language.h
+++ b/panels/common/cc-common-language.h
@@ -45,7 +45,6 @@ guint    cc_common_language_add_available_languages (GtkListStore     *store,
                                                      GHashTable       *user_langs);
 gboolean cc_common_language_has_font                (const gchar  *locale);
 gchar   *cc_common_language_get_current_language    (void);
-gchar   *cc_common_language_get_property            (const gchar  *prop_name);
 
 GHashTable *cc_common_language_get_initial_languages   (void);
 GHashTable *cc_common_language_get_initial_regions     (const gchar *lang);
diff --git a/panels/common/cc-language-chooser.c b/panels/common/cc-language-chooser.c
index 502dc59..bd0ea54 100644
--- a/panels/common/cc-language-chooser.c
+++ b/panels/common/cc-language-chooser.c
@@ -105,8 +105,8 @@ cc_add_user_languages (GtkTreeModel *model)
 
 	user_langs = cc_common_language_get_initial_languages ();
 
-	/* Add the current language first */
-	name = cc_common_language_get_property ("Language");
+	/* Add the current locale first */
+	name = cc_common_language_get_current_language ();
 	display = g_hash_table_lookup (user_langs, name);
 
         gtk_list_store_append (store, &iter);
@@ -118,8 +118,8 @@ cc_add_user_languages (GtkTreeModel *model)
 	g_hash_table_foreach (user_langs, (GHFunc) languages_foreach_cb, store);
 
 	/* And now the "Other..." selection */
-//        gtk_list_store_append (store, &iter);
-//        gtk_list_store_set (store, &iter, LOCALE_COL, NULL, DISPLAY_LOCALE_COL, _("Other..."), -1);
+        gtk_list_store_append (store, &iter);
+        gtk_list_store_set (store, &iter, LOCALE_COL, NULL, DISPLAY_LOCALE_COL, _("Other..."), -1);
 
         g_hash_table_destroy (user_langs);
 }
diff --git a/panels/common/gdm-languages.c b/panels/common/gdm-languages.c
index 76201c2..32adc44 100644
--- a/panels/common/gdm-languages.c
+++ b/panels/common/gdm-languages.c
@@ -224,7 +224,6 @@ construct_language_name (const char *language,
                          const char *codeset,
                          const char *modifier)
 {
-        const char *adj_codeset;
         char *name;
 
         g_assert (language[0] != 0);
@@ -232,17 +231,12 @@ construct_language_name (const char *language,
         g_assert (codeset == NULL || codeset[0] != 0);
         g_assert (modifier == NULL || modifier[0] != 0);
 
-        if (g_strcmp0 (codeset, "utf8") == 0) {
-                adj_codeset = "UTF-8";
-        } else
-                adj_codeset = codeset;
-
         name = g_strdup_printf ("%s%s%s%s%s%s%s",
                                 language,
                                 territory != NULL? "_" : "",
                                 territory != NULL? territory : "",
                                 codeset != NULL? "." : "",
-                                codeset != NULL? adj_codeset : "",
+                                codeset != NULL? codeset : "",
                                 modifier != NULL? "@" : "",
                                 modifier != NULL? modifier : "");
 
@@ -860,7 +854,6 @@ languages_parse_start_tag (GMarkupParseContext      *ctx,
         const char *ccode_longT;
         const char *ccode;
         const char *ccode_id;
-        const char *lang_common_name;
         const char *lang_name;
 
         if (! (g_str_equal (element_name, "iso_639_entry") || g_str_equal (element_name, "iso_639_3_entry"))
@@ -872,7 +865,6 @@ languages_parse_start_tag (GMarkupParseContext      *ctx,
         ccode_longB = NULL;
         ccode_longT = NULL;
         ccode_id = NULL;
-        lang_common_name = NULL;
         lang_name = NULL;
 
         while (*attr_names && *attr_values) {
@@ -909,11 +901,6 @@ languages_parse_start_tag (GMarkupParseContext      *ctx,
                                 }
                                 ccode_id = *attr_values;
                         }
-                } else if (g_str_equal (*attr_names, "common_name")) {
-                        /* skip if empty */
-                        if (**attr_values) {
-                                lang_common_name = *attr_values;
-                        }
                 } else if (g_str_equal (*attr_names, "name")) {
                         lang_name = *attr_values;
                 }
@@ -922,10 +909,6 @@ languages_parse_start_tag (GMarkupParseContext      *ctx,
                 ++attr_values;
         }
 
-        if (lang_common_name != NULL) {
-                lang_name = lang_common_name;
-        }
-
         if (lang_name == NULL) {
                 return;
         }
@@ -1149,7 +1132,6 @@ gdm_get_language_from_name (const char *name,
         char *langinfo_codeset;
         char *translated_language;
         char *translated_territory;
-        char *modifier;
         gboolean is_utf8 = TRUE;
 
         g_return_val_if_fail (name != NULL, NULL);
@@ -1172,13 +1154,12 @@ gdm_get_language_from_name (const char *name,
         language_code = NULL;
         territory_code = NULL;
         codeset_code = NULL;
-        modifier = NULL;
 
         gdm_parse_language_name (name,
                                  &language_code,
                                  &territory_code,
                                  &codeset_code,
-                                 &modifier);
+                                 NULL);
 
         if (language_code == NULL) {
                 goto out;
@@ -1204,7 +1185,7 @@ gdm_get_language_from_name (const char *name,
                                         translated_territory);
         }
 
-//        language_name_get_codeset_details (name, &langinfo_codeset, &is_utf8);
+        language_name_get_codeset_details (name, &langinfo_codeset, &is_utf8);
 
         if (codeset_code == NULL && langinfo_codeset != NULL) {
             codeset_code = g_strdup (langinfo_codeset);
@@ -1216,10 +1197,6 @@ gdm_get_language_from_name (const char *name,
                                         codeset_code);
         }
 
-        if (modifier != NULL) {
-                g_string_append_printf (full_language, " - %s", modifier);
-        }
-
 out:
        g_free (language_code);
        g_free (territory_code);
@@ -1227,7 +1204,6 @@ out:
        g_free (langinfo_codeset);
        g_free (translated_language);
        g_free (translated_territory);
-       g_free (modifier);
 
        if (full_language->len == 0) {
                g_string_free (full_language, TRUE);
-- 
2.8.2

