# Template file for 'v8'
pkgname=v8
_sonamever=3.24
version=${_sonamever}.35.33
revision=3
hostmakedepends="python"
makedepends="readline-devel"
short_desc="V8 JavaScript Engine"
maintainer="Juan RP <xtraeme@voidlinux.org>"
homepage="http://code.google.com/p/v8/"
license="BSD"
distfiles="http://commondatastorage.googleapis.com/chromium-browser-official/v8-${version}.tar.bz2"
checksum=ebde3d100aa61ee6cdff436ef8cc9291b99f0c246afddd67120838f1b85871ec

case "${XBPS_TARGET_MACHINE}" in
	x86_64*) _target="x64";;
	i686*) _target="ia32";;
	arm*) _target="arm"; _opts="hardfp=on snapshot=off";;
	*) broken="unknown target architecture!" ;;
esac

do_build() {
	if [ $_target = arm ]; then
		sed -e "s/m32flag':.*/m32flag':'',/" -i build/toolchain.gypi
	fi

	LINK=${CXX} make ${makejobs} ${_target} ${_opts} i18nsupport=off \
		werror=no library=shared soname_version=${_sonamever} \
		console=readline disassembler=on \
		CXX.host=${CXX} CXX.link=${CXX} LINK.target=${CXX} \
		BUILTYPE=Release
}

do_install() {
	vbin out/${_target}.release/d8
	vinstall out/${_target}.release/lib.target/libv8.so.${_sonamever} 755 usr/lib
	if [ $_target != arm ]; then
		vbin out/${_target}.release/mksnapshot.${_target} mksnapshot
	fi

	vmkdir usr/include
	vcopy 'include/v8*.h' usr/include

	ln -sfr ${DESTDIR}/usr/lib/libv8.so.${_sonamever} ${DESTDIR}/usr/lib/libv8.so
}

v8-devel_package() {
	depends="libv8-${version}_${revision}"
	short_desc+=" - development files"
	pkg_install() {
		vmove usr/include
		vmove usr/lib/libv8.so
	}
}

libv8_package() {
	short_desc+=" - runtime library"
	pkg_install() {
		vmove usr/lib/libv8.so.${_sonamever}
	}
}
