From bfb135bcc3ac3f7d5cd65365a2f5944a78c7a250 Mon Sep 17 00:00:00 2001
From: Vojtech Kral <vojtech@kral.hk>
Date: Fri, 2 Aug 2019 15:11:50 +0200
Subject: [PATCH] Comment out stale implementation in Serial, fix #2150

---
 src/slic3r/GUI/FirmwareDialog.cpp |  2 +-
 src/slic3r/Utils/Serial.cpp       |  3 +++
 src/slic3r/Utils/Serial.hpp       | 14 +++++++++++++-
 3 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/src/slic3r/GUI/FirmwareDialog.cpp b/src/slic3r/GUI/FirmwareDialog.cpp
index 7865aecf2..d1f2da040 100644
--- src/slic3r/GUI/FirmwareDialog.cpp
+++ src/slic3r/GUI/FirmwareDialog.cpp
@@ -354,7 +354,7 @@ bool FirmwareDialog::priv::check_model_id()
 	// Therefore, regretably, so far the check cannot be used and we just return true here.
 	// TODO: Rewrite Serial using more platform-native code.
 	return true;
-	
+
 	// if (hex_file.model_id.empty()) {
 	// 	// No data to check against, assume it's ok
 	// 	return true;
diff --git a/src/slic3r/Utils/Serial.cpp b/src/slic3r/Utils/Serial.cpp
index cd2a01cbf..acfd5fafd 100644
--- src/slic3r/Utils/Serial.cpp
+++ src/slic3r/Utils/Serial.cpp
@@ -353,6 +353,8 @@ void Serial::set_baud_rate(unsigned baud_rate)
 	}
 }
 
+
+/*
 void Serial::set_DTR(bool on)
 {
 	auto handle = native_handle();
@@ -495,6 +497,7 @@ std::string Serial::printer_format_line(const std::string &line, unsigned line_n
 
 	return (boost::format("N%1% %2%*%3%\n") % line_num_str % line % checksum).str();
 }
+*/
 
 
 } // namespace Utils
diff --git a/src/slic3r/Utils/Serial.hpp b/src/slic3r/Utils/Serial.hpp
index 67d64b4ec..8bad75b31 100644
--- src/slic3r/Utils/Serial.hpp
+++ src/slic3r/Utils/Serial.hpp
@@ -46,6 +46,17 @@ class Serial : public boost::asio::serial_port
 	~Serial();
 
 	void set_baud_rate(unsigned baud_rate);
+
+	// The Serial implementation is currently in disarray and therefore commented out.
+	// The boost implementation seems to have several problems, such as lack of support
+	// for custom baud rates, few weird implementation bugs and a history of API breakages.
+	// It's questionable whether it solves more problems than causes. Probably not.
+	// TODO: Custom implementation not based on asio.
+	//
+	// As of now, this class is only kept for the purpose of rebooting AVR109,
+	// see FirmwareDialog::priv::avr109_reboot()
+
+/*
 	void set_DTR(bool on);
 
 	// Resets the line number both internally as well as with the firmware using M110
@@ -68,7 +79,7 @@ class Serial : public boost::asio::serial_port
 
 	// Same as above, but with internally-managed line number
 	size_t printer_write_line(const std::string &line);
-	
+
 	// Toggles DTR to reset the printer
 	void printer_reset();
 
@@ -76,6 +87,7 @@ class Serial : public boost::asio::serial_port
 	static std::string printer_format_line(const std::string &line, unsigned line_num);
 private:
 	unsigned m_line_num = 0;
+*/
 };
 
 
