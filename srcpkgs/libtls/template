# Template file for 'libtls'
pkgname=libtls
version=3.9.1
revision=1
create_wrksrc=yes
build_wrksrc="libressl-${version}"
build_style=gnu-configure
configure_args="--enable-libtls-only --enable-nc"
hostmakedepends="automake libtool"
depends="ca-certificates"
short_desc="Version of the TLS/crypto stack forked from OpenSSL"
maintainer="Leah Neukirchen <leah@vuxu.org>"
license="OpenSSL, ISC"
homepage="http://www.libressl.org/"
changelog="https://raw.githubusercontent.com/libressl/portable/master/ChangeLog"
distfiles="https://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${version}.tar.gz"
checksum=6da0b954695f7ee62b03f64200a8a4f02af93717b60cce04ab6c8df262c07a51
replaces="libtls20>0"
patch_args="-Np1 --directory=${build_wrksrc}"

case "$XBPS_TARGET_MACHINE" in
	# disable ssp
	i686-musl) configure_args+=" --disable-hardening";;
esac

pre_configure() {
	autoreconf -fi
}

pre_check() {
	# Else testenc.sh fails
	export OPENSSL_CONF=
}

do_install() {
	make -C tls install DESTDIR="$DESTDIR"
	vlicense COPYING
}

libtls-devel_package() {
	short_desc+=" - development files"
	depends="libtls-${version}_${revision}"
	pkg_install() {
		vinstall include/tls.h 644 usr/include
		vmove "usr/lib/*.a"
		vmove "usr/lib/*.so"
		vinstall libtls.pc 644 usr/lib/pkgconfig
		for m in man/tls_*; do vman $m; done
	}
}

libressl-netcat_package() {
	short_desc="TCP/IP swiss army knife (LibreSSL variant)"
	alternatives="
	 nc:nc:/usr/bin/libressl-nc
	 nc:nc.1:/usr/share/man/man1/libressl-nc.1"
	pkg_install() {
		vbin apps/nc/.libs/nc libressl-nc
		vman apps/nc/nc.1 libressl-nc.1
	}
}
