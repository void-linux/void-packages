From 85504ca694ae099f023ae0febb363238d9c64e8d Mon Sep 17 00:00:00 2001
From: Fabian Boehm <FHomborg@gmail.com>
Date: Fri, 10 Feb 2023 20:55:37 +0100
Subject: [PATCH] completions/zfs: Check for zpool

This is an additional tool, and this function is executed on source
time so we'd spew errors.

(also remove an ineffective line - it's probably *nicer* with the
read, but that's not what's currently effectively doing anything)
---
 share/functions/__fish_is_zfs_feature_enabled.fish | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/share/functions/__fish_is_zfs_feature_enabled.fish b/share/functions/__fish_is_zfs_feature_enabled.fish
index 29e63a494b0..66a4bca8fef 100644
--- a/share/functions/__fish_is_zfs_feature_enabled.fish
+++ b/share/functions/__fish_is_zfs_feature_enabled.fish
@@ -1,4 +1,6 @@
 function __fish_is_zfs_feature_enabled -a feature target -d "Returns 0 if the given ZFS feature is available or enabled for the given full-path target (zpool or dataset), or any target if none given"
+    type -q zpool
+    or return
     set -l pool (string replace -r '/.*' '' -- $target)
     set -l feature_name ""
     if test -z "$pool"
@@ -9,7 +11,6 @@ function __fish_is_zfs_feature_enabled -a feature target -d "Returns 0 if the gi
     if test $status -ne 0 # No such feature
         return 1
     end
-    echo $feature_name | read -l _ _ state _
     set -l state (echo $feature_name | cut -f3)
     string match -qr '(active|enabled)' -- $state
     return $status
