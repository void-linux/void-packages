# Template file for 'dotnet8'
pkgname=dotnet8
version=8.0.19
revision=1
archs="x86_64"
metapackage=yes
hostmakedepends="clang cmake curl git llvm tar"
makedepends="icu-devel mit-krb5-devel lttng-ust-devel libunwind-devel nodejs-devel openssl-devel python3 zlib-devel"
depends="aspnet8-runtime aspnet8-targeting-pack dotnet8-apphost-pack dotnet-host dotnet8-hostfxr dotnet8-netstandard-pack dotnet8-runtime dotnet8-sdk dotnet8-targeting-pack"
short_desc="Microsoft .NET version 8 meta package"
maintainer="Naiko <glclaritas@gmail.com>"
license="MIT"
homepage="https://dotnet.microsoft.com"

_dotnet_ver="8.0.119"
_sdk_ver="8.0.119"
_source_commit="8495bde0fe309967f88de93e358d6b6166ed47f8"
_source_repository="https://github.com/dotnet/dotnet"
_release_dir="${XBPS_BUILDDIR}/${pkgname}-${version}/artifacts/x64/Release"

distfiles="https://github.com/dotnet/dotnet/archive/refs/tags/v${_dotnet_ver}.tar.gz"
checksum="7566c4654e2f2ad5e057a64833a03b4d0da68c1b2012abc928a406833b037680"

do_configure() {
	export DOTNET_CLI_TELEMETRY_OPTOUT=1
	./prep.sh
}

do_build() {
	./build.sh \
		--source-repository https://github.com/dotnet/dotnet \
		--source-version ${_source_commit} \
		--clean-while-building \
		--online
}

aspnet8-runtime_package() {
	short_desc="ASP.NET core runtime 8"
	depends="dotnet8-runtime"
	pkg_install() {
		vmkdir "usr/lib/dotnet"
		tar xf "${_release_dir}/dotnet-sdk-${_sdk_ver}-void-x64.tar.gz" -C "${PKGDESTDIR}/usr/lib/dotnet" ./shared/Microsoft.AspNetCore.App
		vlicense "LICENSE.TXT"
	}
}
aspnet8-targeting-pack_package() {
	short_desc="ASP.NET core targeting pack 8"
	depends="dotnet8-targeting-pack"
	pkg_install() {
		vmkdir "usr/lib/dotnet"
		tar xf "${_release_dir}/dotnet-sdk-${_sdk_ver}-void-x64.tar.gz" -C "${PKGDESTDIR}/usr/lib/dotnet" ./packs/Microsoft.AspNetCore.App.Ref
		vlicense "LICENSE.TXT"
	}
}
dotnet8-apphost-pack_package() {
	short-desc=".NET core targeting pack 8"
	pkg_install() {
		vmkdir "usr/lib/dotnet"
		tar xf "${_release_dir}/dotnet-sdk-${_sdk_ver}-void-x64.tar.gz" -C "${PKGDESTDIR}/usr/lib/dotnet" ./packs/Microsoft.NETCore.App.Host.void-x64
		vlicense "LICENSE.TXT"
	}
}
dotnet8-artifacts_package() {
	short_desc="Source built artifacts for building SDK"
	pkg_install() {
		vmkdir "usr/lib/dotnet/source-built-artifacts"
		vcopy "${_release_dir}/Private.SourceBuilt.Artifacts.*.tar.gz" "usr/lib/dotnet/source-built-artifacts"
		vcopy "${_release_dir}/Private.SourceBuilt.Prebuilts.*.tar.gz" "usr/lib/dotnet/source-built-artifacts"
	}
}
dotnet8-hostfxr_package() {
	short_desc=".NET command line host resolver 8"
	pkg_install() {
		vmkdir "usr/lib/dotnet"
		tar xf "${_release_dir}/dotnet-sdk-${_sdk_ver}-void-x64.tar.gz" -C "${PKGDESTDIR}/usr/lib/dotnet" ./host
		vlicense "LICENSE.TXT"
	}
}
dotnet8-netstandard-pack_package() {
	short_desc=".NET core standard targeting pack 8"
	pkg_install() {
		vmkdir "usr/lib/dotnet"
		tar xf "${_release_dir}/dotnet-sdk-${_sdk_ver}-void-x64.tar.gz" -C "${PKGDESTDIR}/usr/lib/dotnet" ./packs/NETStandard.Library.Ref
		vlicense "LICENSE.TXT"
	}
}
dotnet8-runtime_package() {
	short_desc=".NET core runtime 8"
	depends="icu-libs libssl3 libstdc++ lttng-ust libunwind mit-krb5-libs zlib"
	if [ "$XBPS_TARGET_LIBC" = "glibc" ]; then
		depends+=" libgcc glibc"
	fi
	pkg_install() {
		vmkdir "usr/lib/dotnet"
		tar xf "${_release_dir}/dotnet-sdk-${_sdk_ver}-void-x64.tar.gz" -C "${PKGDESTDIR}/usr/lib/dotnet" ./shared/Microsoft.NETCore.App
		vlicense "LICENSE.TXT"
	}
}
dotnet8-sdk_package() {
	short_desc=".NET core SDK 8"
	depends="dotnet8-runtime"
	pkg_install() {
		vmkdir "usr/lib/dotnet"
		tar xf "${_release_dir}/dotnet-sdk-${_sdk_ver}-void-x64.tar.gz" -C "${PKGDESTDIR}/usr/lib/dotnet" ./{sdk,sdk-manifests,templates}
		vlicense "LICENSE.TXT"
	}
}
dotnet8-targeting-pack_package() {
	short_desc=".NET core targeting pack 8"
	depends="dotnet8-netstandard-targeting-pack"
	pkg_install() {
		vmkdir "usr/lib/dotnet"
		tar xf "${_release_dir}/dotnet-sdk-${_sdk_ver}-void-x64.tar.gz" -C "${PKGDESTDIR}/usr/lib/dotnet" ./packs/Microsoft.NETCore.App.Ref
		vlicense "LICENSE.TXT"
	}
}
