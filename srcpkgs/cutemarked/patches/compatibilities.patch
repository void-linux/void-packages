diff --git a/app-static/converter/discountmarkdownconverter.cpp b/app-static/converter/discountmarkdownconverter.cpp
index be8715a..702ab3b 100644
--- a/app-static/converter/discountmarkdownconverter.cpp
+++ b/app-static/converter/discountmarkdownconverter.cpp
@@ -71,12 +71,15 @@ MarkdownDocument *DiscountMarkdownConverter::createDocument(const QString &text,
             markdownText.append('\n');
         }
 
-        unsigned long converterOptions = translateConverterOptions(options);
+        mkd_flag_t *converterOptions = mkd_flags();
+
+        translateConverterOptions(options, converterOptions);
 
         QByteArray utf8Data = markdownText.toUtf8();
         doc = mkd_string(utf8Data, utf8Data.length(), converterOptions);
 
         mkd_compile(doc, converterOptions);
+        mkd_free_flags(converterOptions);
     }
 
     return new DiscountMarkdownDocument(doc);
@@ -136,44 +139,43 @@ MarkdownConverter::ConverterOptions DiscountMarkdownConverter::supportedOptions(
            MarkdownConverter::NoSuperscriptOption;
 }
 
-unsigned long DiscountMarkdownConverter::translateConverterOptions(ConverterOptions options) const
+void DiscountMarkdownConverter::translateConverterOptions(ConverterOptions options, mkd_flag_t *flags) const
 {
-    unsigned long converterOptions = MKD_TOC | MKD_NOSTYLE;
+    mkd_set_flag_num(flags, MKD_TOC);
+    mkd_set_flag_num(flags, MKD_NOSTYLE);
 
     // autolink
     if (options.testFlag(MarkdownConverter::AutolinkOption)) {
-        converterOptions |= MKD_AUTOLINK;
+        mkd_set_flag_num(flags, MKD_AUTOLINK);
     }
 
     // strikethrough
     if (options.testFlag(MarkdownConverter::NoStrikethroughOption)) {
-        converterOptions |= MKD_NOSTRIKETHROUGH;
+        mkd_set_flag_num(flags, MKD_NOSTRIKETHROUGH);
     }
 
     // alphabetic lists
     if (options.testFlag(MarkdownConverter::NoAlphaListOption)) {
-        converterOptions |= MKD_NOALPHALIST;
+        mkd_set_flag_num(flags, MKD_NOALPHALIST);
     }
 
     // definition lists
     if (options.testFlag(MarkdownConverter::NoDefinitionListOption)) {
-        converterOptions |= MKD_NODLIST;
+        // converterOptions |= MKD_NODLIST;
     }
 
     // SmartyPants
     if (options.testFlag(MarkdownConverter::NoSmartypantsOption)) {
-        converterOptions |= MKD_NOPANTS;
+        mkd_set_flag_num(flags, MKD_NOPANTS);
     }
 
     // Footnotes
     if (options.testFlag(MarkdownConverter::ExtraFootnoteOption)) {
-        converterOptions |= MKD_EXTRA_FOOTNOTE;
+        mkd_set_flag_num(flags, MKD_EXTRA_FOOTNOTE);
     }
 
     // Superscript
     if (options.testFlag(MarkdownConverter::NoSuperscriptOption)) {
-        converterOptions |= MKD_NOSUPERSCRIPT;
+        mkd_set_flag_num(flags, MKD_NOSUPERSCRIPT);
     }
-
-    return converterOptions;
 }
diff --git a/app-static/converter/discountmarkdownconverter.h b/app-static/converter/discountmarkdownconverter.h
index 2902b5b..fd4c8e9 100644
--- a/app-static/converter/discountmarkdownconverter.h
+++ b/app-static/converter/discountmarkdownconverter.h
@@ -34,6 +34,8 @@
 
 #include "markdownconverter.h"
 
+typedef void mkd_flag_t;
+
 class DiscountMarkdownConverter : public MarkdownConverter
 {
 public:
@@ -48,7 +50,7 @@ public:
     virtual ConverterOptions supportedOptions() const;
 
 private:
-    unsigned long translateConverterOptions(ConverterOptions options) const;
+    void translateConverterOptions(ConverterOptions options, mkd_flag_t *flags) const;
 };
 
 #endif // DISCOUNTMARKDOWNCONVERTER_H
diff --git a/app/optionsdialog.cpp b/app/optionsdialog.cpp
index 80452d1..e1f67a5 100644
--- a/app/optionsdialog.cpp
+++ b/app/optionsdialog.cpp
@@ -17,6 +17,7 @@
 #include "optionsdialog.h"
 #include "ui_optionsdialog.h"
 
+#include <QAction>
 #include <QFontComboBox>
 #include <QItemEditorFactory>
 #include <QKeySequence>
