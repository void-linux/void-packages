--- src/Makefile.am.orig
+++ src/Makefile.am
@@ -8,18 +8,18 @@
 # build instructions
 gfm_CPPFLAGS = @TIFILES_CFLAGS@ @TICONV_CFLAGS@ @TICALCS_CFLAGS@ \
 	@GLIB_CFLAGS@ @GTK_CFLAGS@ @GLADE_CFLAGS@ \
-	@KDE_INCLUDES@ @QT_INCLUDES@ \
 	-DSHARE_DIR=\"$(pkgdatadir)\" \
 	-DLOCALEDIR=\"$(datadir)/locale\"
+#	@KDE_INCLUDES@ @QT_INCLUDES@
 
 gfm_LDFLAGS = -export-dynamic
 
 gfm_LDADD = \
 	@TIFILES_LIBS@ @TICONV_LIBS@ @TICALCS_LIBS@ \
 	@GLIB_LIBS@ @GTK_LIBS@ @GLADE_LIBS@ \
-	@LIB_KDECORE@ @LIB_KDEUI@ @LIB_KIO@ @LIB_QT@ @KDE_LDFLAGS@ \
-	@QT_LDFLAGS@ @X_LDFLAGS@ \
 	@LTLIBINTL@
+#	@LIB_KDECORE@ @LIB_KDEUI@ @LIB_KIO@ @LIB_QT@ @KDE_LDFLAGS@ \
+#	@QT_LDFLAGS@ @X_LDFLAGS@
 
 # automake wants all .c files listed explicitly. This sucks. qmake does the
 # right thing with just "*.c".
--- configure.ac.orig
+++ configure.ac
@@ -90,22 +90,23 @@
 AC_CHECK_FUNCS([getcwd memset mkdir strcasecmp strchr strdup strrchr strstr])
 
 # KDE dialogs support
-AC_ARG_WITH(kde, AC_HELP_STRING([--with-kde], [Compile with KDE support]), [kde=$withval], [kde=no])
-if test "x$kde" = "xdefault"; then
-  case $host_os in
-    *mingw*)
-      kde=no
-      ;;
-    *)
-      kde=yes
-      ;;
-  esac
-fi
-if test "x$kde" = "xyes"; then
-        AC_PROG_CXX
-        AC_PATH_KDE
-        AC_DEFINE(WITH_KDE, 1, [Use KDE support])
-fi
+#AC_ARG_WITH(kde, AC_HELP_STRING([--with-kde], [Compile with KDE support]), [kde=$withval], [kde=no])
+#if test "x$kde" = "xdefault"; then
+#  case $host_os in
+#    *mingw*)
+#      kde=no
+#      ;;
+#    *)
+#      kde=yes
+#      ;;
+#  esac
+#fi
+#if test "x$kde" = "xyes"; then
+#        AC_PROG_CXX
+#        AC_PATH_KDE
+#        AC_DEFINE(WITH_KDE, 1, [Use KDE support])
+#fi
+kde=no
 AM_CONDITIONAL(USE_KDE, test "x$kde" = "xyes")
 AC_SUBST(kde)
 
