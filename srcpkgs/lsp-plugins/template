# Template file for 'lsp-plugins'
pkgname=lsp-plugins
version=1.2.20
revision=2
build_style=gnu-makefile
make_use_env=yes
make_build_args="VERBOSE=0"
hostmakedepends="pkg-config php lv2"
makedepends="lv2 libglvnd-devel jack-devel libsndfile-devel
 libXrandr-devel cairo-devel freetype-devel gst-plugins-base1-devel"
depends="lsp-plugins-libs lsp-plugins-xdg
 lsp-plugins-clap lsp-plugins-ladspa lsp-plugins-lv2 lsp-plugins-vst2
 lsp-plugins-gst lsp-plugins-vst3"
short_desc="Collection of open-source audio plugins for studios"
maintainer="Orphaned <orphan@voidlinux.org>"
license="GPL-3.0-or-later"
homepage="https://lsp-plug.in/"
changelog="https://raw.githubusercontent.com/sadko4u/lsp-plugins/master/CHANGELOG"
distfiles="https://github.com/sadko4u/lsp-plugins/releases/download/$version/lsp-plugins-src-${version}.tar.gz"
checksum=ca8860dca6bfb1e7bcaba342c153e5fc5d3a025c91db66a4433e37829fb591c9
make_check=no # no test suite

if [ "$CROSS_BUILD" ]; then
	hostmakedepends+=" ${makedepends}"
fi

do_configure() {
	_configure_args=(
	 PREFIX=/usr
	 LD="$CXX"
	 ARCHITECTURE="${XBPS_TARGET_MACHINE%-musl}"
	 ARCHITECTURE_CFLAGS="$CFLAGS"
	 ARCHITECTURE_CXXFLAGS="$CXXFLAGS"
	 ARCHITECTURE_LDFLAGS="$LDFLAGS"
	 HOST_CC=cc
	 HOST_CXX=c++
	 HOST_LD=c++
	)
	if [ "$CROSS_BUILD" ]; then
		_configure_args+=(
		 CROSS_COMPILE=1
		 HOST_ARCHITECTURE_CFLAGS="$XBPS_CFLAGS"
		 HOST_ARCHITECTURE_CXXFLAGS="$XBPS_CXXFLAGS"
		 HOST_ARCHITECTURE_LDFLAGS="$XBPS_LDFLAGS"
		)
	else
		_configure_args+=(
		 HOST_ARCHITECTURE_CFLAGS="$CFLAGS"
		 HOST_ARCHITECTURE_CXXFLAGS="$CXXFLAGS"
		 HOST_ARCHITECTURE_LDFLAGS="$LDFLAGS"
		)
	fi
	make config "${_configure_args[@]}"
}

lsp-plugins-libs_package() {
	short_desc+=" - main libraries"
	pkg_install() {
		vmove usr/lib/liblsp-r3d-glx-lib*.so
		vmove usr/lib/lsp-plugins/liblsp-plugins-jack*.so
	}
}

lsp-plugins-xdg_package() {
	short_desc+=" - XDG integration"
	pkg_install() {
		vmove usr/share/applications
		vmove usr/share/desktop-directories
		vmove usr/share/icons
		vmove etc/xdg/menus/applications-merged
	}
}

lsp-plugins-clap_package() {
	short_desc+=" - clap integrations"
	depends="${sourcepkg}-libs>=${version}_${revision}"
	pkg_install() {
		vmove usr/lib/clap
	}
}

lsp-plugins-ladspa_package() {
	short_desc+=" - ladspa integration"
	depends="${sourcepkg}-libs>=${version}_${revision}"
	pkg_install() {
		vmove usr/lib/ladspa
	}
}

lsp-plugins-lv2_package() {
	short_desc+=" - lv2 plugins"
	depends="lv2>=0.6.0 ${sourcepkg}-libs>=${version}_${revision}"
	pkg_install() {
		vmove usr/lib/lv2
	}
}

lsp-plugins-vst2_package() {
	short_desc+=" - vst2 plugins"
	depends="${sourcepkg}-libs>=${version}_${revision}"
	pkg_install() {
		vmove usr/lib/vst
	}
}

lsp-plugins-gst_package() {
	short_desc+=" - gst plugins"
	depends="${sourcepkg}-libs>=${version}_${revision}"
	pkg_install() {
		vmove usr/lib/gstreamer-1.0
		vmove usr/lib/lsp-plugins/liblsp-plugins-gstreamer*.so
	}
}

lsp-plugins-vst3_package() {
	short_desc+=" - vst3 plugins"
	depends="${sourcepkg}-libs>=${version}_${revision}"
	pkg_install() {
		vmove usr/lib/vst3
	}
}

lsp-plugins-doc_package() {
	short_desc+=" - documentation"
	pkg_install() {
		vmove usr/share/doc
	}
}

lsp-plugins-devel_package() {
	depends="${sourcepkg}>=${version}_${revision}"
	short_desc+=" - development files"
	pkg_install() {
		vmove usr/lib/pkgconfig
		vmove usr/lib/liblsp-r3d-glx-lib*.a
	}
}
