From a46f2bdec20068cf79ff182ae024fc1989d45c74 Mon Sep 17 00:00:00 2001
From: Stephen Finucane <stephen@that.guru>
Date: Mon, 26 Aug 2019 16:42:50 +0000
Subject: [PATCH 08/26] py3: Replace 'types.SliceType' with slice, remove
 'types.ClassType'.

These types have been removed in Python 3,
`SliceType` is an alias for `slice` already in Python 2.7,
`ClassType` is for user-defined old-style classes (we now use only new style classes).

Signed-off-by: Stephen Finucane <stephen@that.guru>

git-svn-id: http://svn.code.sf.net/p/docutils/code/trunk@8355 929543f6-e4f2-0310-98a6-ba3bd3dd1d04
Signed-off-by: Doan Tran Cong Danh <congdanhqx@gmail.com>
---
 docutils/nodes.py        | 11 +++++------
 docutils/statemachine.py |  5 ++---
 test/test_nodes.py       |  4 ++--
 3 files changed, 9 insertions(+), 11 deletions(-)

diff --git a/docutils/nodes.py b/docutils/nodes.py
index c524373..a8c0478 100644
--- a/docutils/nodes.py
+++ b/docutils/nodes.py
@@ -27,7 +27,6 @@ import sys
 import os
 import re
 import warnings
-import types
 import unicodedata
 
 if sys.version_info >= (3, 0):
@@ -257,11 +256,11 @@ class Node(object):
         if include_self and descend and not siblings:
             if condition is None:
                 return self._all_traverse()
-            elif isinstance(condition, (types.ClassType, type)):
+            elif isinstance(condition, type):
                 return self._fast_traverse(condition)
         # Check if `condition` is a class (check for TypeType for Python
         # implementations that use only new-style classes, like PyPy).
-        if isinstance(condition, (types.ClassType, type)):
+        if isinstance(condition, type):
             node_class = condition
             def condition(node, node_class=node_class):
                 return isinstance(node, node_class)
@@ -590,7 +589,7 @@ class Element(Node):
             return self.attributes[key]
         elif isinstance(key, int):
             return self.children[key]
-        elif isinstance(key, types.SliceType):
+        elif isinstance(key, slice):
             assert key.step in (None, 1), 'cannot handle slice with stride'
             return self.children[key.start:key.stop]
         else:
@@ -603,7 +602,7 @@ class Element(Node):
         elif isinstance(key, int):
             self.setup_child(item)
             self.children[key] = item
-        elif isinstance(key, types.SliceType):
+        elif isinstance(key, slice):
             assert key.step in (None, 1), 'cannot handle slice with stride'
             for node in item:
                 self.setup_child(node)
@@ -617,7 +616,7 @@ class Element(Node):
             del self.attributes[key]
         elif isinstance(key, int):
             del self.children[key]
-        elif isinstance(key, types.SliceType):
+        elif isinstance(key, slice):
             assert key.step in (None, 1), 'cannot handle slice with stride'
             del self.children[key.start:key.stop]
         else:
diff --git a/docutils/statemachine.py b/docutils/statemachine.py
index 5d7fe77..068083a 100644
--- a/docutils/statemachine.py
+++ b/docutils/statemachine.py
@@ -109,7 +109,6 @@ __docformat__ = 'restructuredtext'
 
 import sys
 import re
-import types
 import unicodedata
 from docutils import utils
 from docutils.utils.error_reporting import ErrorOutput
@@ -1148,7 +1147,7 @@ class ViewList(object):
     # just works.
 
     def __getitem__(self, i):
-        if isinstance(i, types.SliceType):
+        if isinstance(i, slice):
             assert i.step in (None, 1),  'cannot handle slice with stride'
             return self.__class__(self.data[i.start:i.stop],
                                   items=self.items[i.start:i.stop],
@@ -1157,7 +1156,7 @@ class ViewList(object):
             return self.data[i]
 
     def __setitem__(self, i, item):
-        if isinstance(i, types.SliceType):
+        if isinstance(i, slice):
             assert i.step in (None, 1), 'cannot handle slice with stride'
             if not isinstance(item, ViewList):
                 raise TypeError('assigning non-ViewList to ViewList slice')
diff --git a/test/test_nodes.py b/test/test_nodes.py
index 924569f..679c98e 100755
--- a/test/test_nodes.py
+++ b/test/test_nodes.py
@@ -11,7 +11,7 @@ Test module for nodes.py.
 
 import sys
 import unittest
-import types
+
 import DocutilsTestSupport              # must be imported before docutils
 from DocutilsTestSupport import nodes, utils
 
@@ -359,7 +359,7 @@ class MiscTests(unittest.TestCase):
         node_class_names = []
         for x in dir(nodes):
             c = getattr(nodes, x)
-            if isinstance(c, (type, types.ClassType)) and \
+            if isinstance(c, type) and \
                    issubclass(c, nodes.Node) and len(c.__bases__) > 1:
                 node_class_names.append(x)
         node_class_names.sort()
-- 
2.24.0.375.geb5ae68d41

