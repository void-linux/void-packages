From 63ae3af11673122be4178a9e4a15051b21dd2158 Mon Sep 17 00:00:00 2001
From: Hannah von Reth <hannah.vonreth@owncloud.com>
Date: Wed, 22 Jun 2022 17:14:38 +0200
Subject: [PATCH] CMake: Implement WITH_AUTO_UPDATER

Fixes: #9082
---
 CMakeLists.txt              |  3 +++
 changelog/unreleased/9082   |  5 +++++
 src/gui/CMakeLists.txt      |  5 ++++-
 src/gui/application.cpp     |  5 +++++
 src/gui/generalsettings.cpp | 11 +++++++++++
 src/gui/main.cpp            |  5 +++++
 6 files changed, 33 insertions(+), 1 deletion(-)
 create mode 100644 changelog/unreleased/9082

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 546a5cf42e5..e95689fda78 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -104,6 +104,9 @@ option(BUILD_LIBRARIES_ONLY "BUILD_LIBRARIES_ONLY" OFF)
 # build the GUI component, when disabled only owncloudcmd is built
 option(BUILD_GUI "BUILD_GUI" ON)
 
+# build the auto updater component
+option(WITH_AUTO_UPDATER "WITH_AUTO_UPDATER" ON)
+
 # specify additional vfs plugins
 set(VIRTUAL_FILE_SYSTEM_PLUGINS off suffix win CACHE STRING "Name of internal plugin in src/libsync/vfs or the locations of virtual file plugins")
 
diff --git a/changelog/unreleased/9082 b/changelog/unreleased/9082
new file mode 100644
index 00000000000..97cf81b1527
--- /dev/null
+++ b/changelog/unreleased/9082
@@ -0,0 +1,5 @@
+Enhancement: Add CMakeOption WITH_AUTO_UPDATER
+
+WITH_AUTO_UPDATER allows to build the client without the auto updater.
+
+https://github.com/owncloud/client/issues/9082
diff --git a/src/gui/CMakeLists.txt b/src/gui/CMakeLists.txt
index b87a444044b..733e0401fea 100644
--- a/src/gui/CMakeLists.txt
+++ b/src/gui/CMakeLists.txt
@@ -168,7 +168,10 @@ elseif(UNIX AND NOT APPLE )
             guiutility_unix.cpp)
 endif()
 
-add_subdirectory(updater)
+if(WITH_AUTO_UPDATER)
+    add_subdirectory(updater)
+    target_compile_definitions(owncloudCore PRIVATE WITH_AUTO_UPDATER)
+endif()
 
 
 if(WITH_CRASHREPORTER)
diff --git a/src/gui/application.cpp b/src/gui/application.cpp
index f9cd5c07f79..f2f3eac8f83 100644
--- a/src/gui/application.cpp
+++ b/src/gui/application.cpp
@@ -36,7 +36,9 @@
 #include "sharedialog.h"
 #include "accountmanager.h"
 #include "creds/abstractcredentials.h"
+#ifdef WITH_AUTO_UPDATER
 #include "updater/ocupdater.h"
+#endif
 #include "owncloudsetupwizard.h"
 #include "version.h"
 #include "csync_exclude.h"
@@ -370,6 +373,7 @@ Application::Application(int &argc, char **argv)
     connect(&_networkConfigurationManager, &QNetworkConfigurationManager::configurationChanged,
         this, &Application::slotSystemOnlineConfigurationChanged);
 
+#ifdef WITH_AUTO_UPDATER
     // Update checks
     UpdaterScheduler *updaterScheduler = new UpdaterScheduler(this);
     connect(updaterScheduler, &UpdaterScheduler::updaterAnnouncement,
@@ -378,6 +382,7 @@ Application::Application(int &argc, char **argv)
         });
     connect(updaterScheduler, &UpdaterScheduler::requestRestart,
         _folderManager.data(), &FolderMan::slotScheduleAppRestart);
+#endif
 
     // Cleanup at Quit.
     connect(this, &QCoreApplication::aboutToQuit, this, &Application::slotCleanup);
diff --git a/src/gui/generalsettings.cpp b/src/gui/generalsettings.cpp
index 88fca875eac..b9f74984522 100644
--- a/src/gui/generalsettings.cpp
+++ b/src/gui/generalsettings.cpp
@@ -21,12 +21,15 @@
 #include "configfile.h"
 #include "theme.h"
 
+#ifdef WITH_AUTO_UPDATER
 #include "updater/updater.h"
 #include "updater/ocupdater.h"
 #ifdef Q_OS_MAC
 // FIXME We should unify those, but Sparkle does everything behind the scene transparently
 #include "updater/sparkleupdater.h"
 #endif
+#endif
+
 #include "ignorelisteditor.h"
 
 #include "config.h"
@@ -110,6 +113,7 @@ GeneralSettings::GeneralSettings(QWidget *parent)
     connect(AccountManager::instance(), &AccountManager::accountAdded, this, &GeneralSettings::loadMiscSettings);
 
     // Only our standard brandings currently support beta channel
+#ifdef WITH_AUTO_UPDATER
     if (Theme::instance()->appName() != QLatin1String("testpilotcloud")) {
 #ifdef Q_OS_MAC
         // Because we don't have any statusString from the SparkleUpdater anyway we can hide the whole thing
@@ -122,6 +126,9 @@ GeneralSettings::GeneralSettings(QWidget *parent)
         }
 #endif
     }
+#else
+    _ui->updaterWidget->hide();
+#endif
     connect(_ui->about_pushButton, &QPushButton::clicked, this, &GeneralSettings::showAbout);
 
     if (!Theme::instance()->aboutShowCopyright()) {
@@ -166,6 +173,7 @@ void GeneralSettings::showEvent(QShowEvent *)
 
 void GeneralSettings::slotUpdateInfo()
 {
+#ifdef WITH_AUTO_UPDATER
     if (ConfigFile().skipUpdateCheck() || !Updater::instance()) {
         // updater disabled on compile
         _ui->updaterWidget->setVisible(false);
@@ -194,10 +202,12 @@ void GeneralSettings::slotUpdateInfo()
     _ui->updateChannel->setCurrentIndex(ConfigFile().updateChannel() == "beta" ? 1 : 0);
     connect(_ui->updateChannel, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged),
         this, &GeneralSettings::slotUpdateChannelChanged, Qt::UniqueConnection);
+#endif
 }
 
 void GeneralSettings::slotUpdateChannelChanged(int index)
 {
+#ifdef WITH_AUTO_UPDATER
     QString channel = index == 0 ? QStringLiteral("stable") : QStringLiteral("beta");
     if (channel == ConfigFile().updateChannel())
         return;
@@ -239,6 +249,7 @@ void GeneralSettings::slotUpdateChannelChanged(int index)
         }
     });
     msgBox->open();
+#endif
 }
 
 void GeneralSettings::saveMiscSettings()
diff --git a/src/gui/main.cpp b/src/gui/main.cpp
index dec162d04a3..903dc5ff36b 100644
--- a/src/gui/main.cpp
+++ b/src/gui/main.cpp
@@ -21,7 +21,9 @@
 #include "resources/loadresources.h"
 #include "theme.h"
 
+#ifdef WITH_AUTO_UPDATER
 #include "updater/updater.h"
+#endif
 
 #include <QTimer>
 #include <QMessageBox>
@@ -59,6 +61,8 @@ int main(int argc, char **argv)
     // TODO: 2.11 move to platform class
     Utility::startShutdownWatcher();
 #endif
+
+#ifdef WITH_AUTO_UPDATER
     // if handleStartup returns true, main()
     // needs to terminate here, e.g. because
     // the updater is triggered
@@ -66,6 +70,7 @@ int main(int argc, char **argv)
     if (updater && updater->handleStartup()) {
         return 1;
     }
+#endif
 
     // if the application is already running, notify it.
     if (app.isRunning()) {
