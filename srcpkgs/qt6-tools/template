# Template file for 'qt6-tools'
pkgname=qt6-tools
version=6.4.0
revision=1
build_style=cmake
configure_args="-DEXTERNAL_GUMBO=ON -DLITEHTML_UTF8=ON -DUSE_ICU=ON
 -DQT_BUILD_SHARED_LIBS=ON -DQT_FEATURE_assistant=ON"
hostmakedepends="qt6-base-devel perl qt6-plugin-sqlite"
makedepends="qt6-base-devel libatomic-devel qt6-plugin-sqlite
 gumbo-parser-devel icu-devel"
short_desc="Cross-platform application and UI framework (QT6) - qt6-tools component"
maintainer="John <me@johnnynator.dev>"
license="GPL-3.0-only with Qt-GPL-exception-1.0, LGPL-3.0-only, GPL-2.0-or-later"
homepage="https://qt.io/"
distfiles="http://download.qt.io/official_releases/qt/${version%.*}/${version}/submodules/qttools-everywhere-src-${version}.tar.xz"
checksum=97f3d5f88c458be7a8f7b7b08efc06c4ebad39ca51669476b18bf9e4c11afba2

if [ "$CROSS_BUILD" ]; then
	configure_args+=" -DQT_FORCE_BUILD_TOOLS=TRUE"
	hostmakedepends+=" qt6-tools-devel"
fi


if [ "$XBPS_CHECK_PKGS" ]; then
	configure_args+=" -DQT_BUILD_TESTS=ON"
fi

post_build() {
	ninja -C build ${makejobs} lib/qt6/libexec/qhelpgenerator
}

do_check() {
	cd build
	# Some of these tests expect that qt6-tools is already
	# installed in /usr/lib/qt6
	ctest -E 'tst_(lrelease|lconvert|lupdate|qtattributionsscanner|qhelpcontentmodel|qhelpenginecore|qhelpgenerator|qhelpindexmode)'
}

qt6-tools-devel_package() {
	depends="${sourcepkg}>=${version}_${revision} qt6-base-devel>=${version}_1"
	short_desc+=" - development files"
	pkg_install() {
		vmove usr/include
		vmove usr/lib/cmake
		vmove usr/lib/metatypes
		vmove usr/lib/pkgconfig
		vmove usr/lib/qt6/mkspecs
		vmove "usr/lib/*.so"
		vmove "usr/lib/*.prl"
		vmove usr/share/qt6/modules
	}
}
