# Template file for 'PrismLauncher'
pkgname=PrismLauncher
version=5.1
revision=1
build_style=cmake
configure_args="-DLauncher_BUILD_PLATFORM=Void"
hostmakedepends="extra-cmake-modules openjdk8 pkg-config qt5-host-tools
 qt5-qmake scdoc"
makedepends="qt5-devel"
depends="virtual?java-runtime qt5-svg qt5-imageformats"
short_desc="Custom launcher for Minecraft"
maintainer="Philipp David <pd@3b.pm>"
license="GPL-3.0-only"
homepage="https://prismlauncher.org/"
distfiles="https://github.com/PrismLauncher/PrismLauncher/releases/download/${version}/PrismLauncher-${version}.tar.gz"
checksum=d5774911c2fde98f6b663c76084e49e8f664a0f21e13da9196072d38191a7d1e

if [ -z "$XBPS_CHECK_PKGS" ]; then
	configure_args+=" -DBUILD_TESTING=0"
fi

case "$XBPS_TARGET_MACHINE" in
	# XXX: this could be fixed by switching to clang, but it seems to produce
	# non-PIE executables despite -fPIE being in the C(XX)FLAGS
	# There's also some effort needed to get it working on cross
	armv*) broken="https://github.com/PrismLauncher/PrismLauncher/issues/128" ;;
esac

post_extract() {
	rm -rf .git
}

pre_configure() {
	local _date
	if [ "$SOURCE_DATE_EPOCH" ]; then
		_date="$(date --utc --date "@$SOURCE_DATE_EPOCH" "+%Y-%m-%d")"
		configure_args+=" -DLauncher_BUILD_TIMESTAMP=${_date}"
	fi
}

post_install() {
	vdoc ${FILESDIR}/README.voidlinux
}

PolyMC_package() {
	depends="${sourcepkg}>=${version}_${revision}"
	short_desc+=" (transitional dummy package)"
	build_style=meta
}
