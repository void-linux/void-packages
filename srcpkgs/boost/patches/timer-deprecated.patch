--- a/libs/graph/example/fr_layout.cpp
+++ b/libs/graph/example/fr_layout.cpp
@@ -15,6 +15,7 @@
 #include <iostream>
 #include <map>
 #include <vector>
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/random/linear_congruential.hpp>
 #include <boost/timer/progress_display.hpp>
 #include <boost/shared_ptr.hpp>
--- a/libs/program_options/test/test_convert.cpp
+++ b/libs/program_options/test/test_convert.cpp
@@ -12,6 +12,7 @@
 #include <fstream>
 #include <sstream>
 #include <iostream>
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/progress.hpp>
 #include <boost/bind.hpp>
 #include <boost/ref.hpp>
--- a/libs/regex/example/timer/regex_timer.cpp
+++ b/libs/regex/example/timer/regex_timer.cpp
@@ -16,6 +16,7 @@
 #include <boost/config.hpp>
 #include <boost/regex.hpp>
 #include <boost/cregex.hpp>
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp> 
 #include <boost/smart_ptr.hpp>
 
--- a/libs/algorithm/minmax/example/minmax_timer.cpp
+++ b/libs/algorithm/minmax/example/minmax_timer.cpp
@@ -15,6 +15,7 @@
 // What's the proper BOOST_ flag for <iomanip.h> vs <ios>
 #include <iomanip>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 #include <boost/algorithm/minmax.hpp>
 
--- a/libs/fusion/example/performance/accumulate.cpp
+++ b/libs/fusion/example/performance/accumulate.cpp
@@ -5,6 +5,7 @@
     Distributed under the Boost Software License, Version 1.0. (See accompanying 
     file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 ==============================================================================*/
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/array.hpp>
 #include <boost/timer.hpp>
 
--- a/libs/fusion/example/performance/functional.cpp
+++ b/libs/fusion/example/performance/functional.cpp
@@ -7,6 +7,7 @@
     http://www.boost.org/LICENSE_1_0.txt).
 ==============================================================================*/
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/fusion/container/list.hpp>
 #include <boost/fusion/container/vector.hpp>
 #include <boost/fusion/algorithm/iteration/fold.hpp>
--- a/libs/fusion/example/performance/inner_product.cpp
+++ b/libs/fusion/example/performance/inner_product.cpp
@@ -5,6 +5,7 @@
     Distributed under the Boost Software License, Version 1.0. (See accompanying 
     file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 ==============================================================================*/
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/array.hpp>
 #include <boost/timer.hpp>
 
--- a/libs/fusion/example/performance/inner_product2.cpp
+++ b/libs/fusion/example/performance/inner_product2.cpp
@@ -5,6 +5,7 @@
     Distributed under the Boost Software License, Version 1.0. (See accompanying 
     file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 ==============================================================================*/
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/array.hpp>
 #include <boost/timer.hpp>
 
--- a/libs/fusion/example/performance/measure.hpp
+++ b/libs/fusion/example/performance/measure.hpp
@@ -7,6 +7,7 @@
 # define LIVE_CODE_TYPE int
 #endif
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 
 namespace test
--- a/libs/geometry/doc/src/docutils/tools/implementation_status/implementation_status.cpp
+++ b/libs/geometry/doc/src/docutils/tools/implementation_status/implementation_status.cpp
@@ -16,6 +16,7 @@
 
 #include <stdlib.h>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 #include <boost/algorithm/string/predicate.hpp>
 #include <boost/algorithm/string/replace.hpp>
--- a/libs/geometry/example/with_external_libs/x03_a_soci_example.cpp
+++ b/libs/geometry/example/with_external_libs/x03_a_soci_example.cpp
@@ -21,6 +21,7 @@
 #include <soci.h>
 #include <soci-postgresql.h>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/algorithm/string.hpp>
 #include <boost/optional.hpp>
 #include <boost/timer.hpp>
--- a/libs/geometry/example/with_external_libs/x03_b_soci_example.cpp
+++ b/libs/geometry/example/with_external_libs/x03_b_soci_example.cpp
@@ -14,6 +14,7 @@
 #include <soci.h>
 #include <soci-postgresql.h>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/algorithm/string.hpp>
 #include <boost/optional.hpp>
 #include <boost/timer.hpp>
--- a/libs/geometry/index/example/serialize.cpp
+++ b/libs/geometry/index/example/serialize.cpp
@@ -11,6 +11,7 @@
 #include <fstream>
 
 #define BOOST_GEOMETRY_INDEX_DETAIL_EXPERIMENTAL
+#define BOOST_TIMER_ENABLE_DEPRECATED
 
 #include <boost/geometry.hpp>
 #include <boost/geometry/index/rtree.hpp>
--- a/libs/geometry/test/robustness/overlay/areal_areal/ticket_9081.cpp
+++ b/libs/geometry/test/robustness/overlay/areal_areal/ticket_9081.cpp
@@ -15,6 +15,7 @@
 
 #define CHECK_SELF_INTERSECTIONS
 #define LIST_WKT
+#define BOOST_TIMER_ENABLE_DEPRECATED
 
 #include <fstream>
 #include <iomanip>
--- a/libs/heap/tools/high_resolution_timer.hpp
+++ b/libs/heap/tools/high_resolution_timer.hpp
@@ -194,6 +194,7 @@ private:
 #    else
 
 //  For other platforms, simply fall back to boost::timer
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #        include <boost/throw_exception.hpp>
 #        include <boost/timer.hpp>
 
--- a/libs/numeric/odeint/performance/SIMD/roessler.cpp
+++ b/libs/numeric/odeint/performance/SIMD/roessler.cpp
@@ -14,6 +14,7 @@
 #include <vector>
 #include <random>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 #include <array>
 
--- a/libs/numeric/odeint/performance/SIMD/roessler_simd.cpp
+++ b/libs/numeric/odeint/performance/SIMD/roessler_simd.cpp
@@ -15,6 +15,7 @@
 #include <vector>
 #include <random>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 #include <array>
 
--- a/libs/numeric/odeint/performance/odeint_rk4_array.cpp
+++ b/libs/numeric/odeint/performance/odeint_rk4_array.cpp
@@ -11,6 +11,7 @@
 
 #include <iostream>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 #include <array>
 
--- a/libs/numeric/ublas/test/test_assignment.cpp
+++ b/libs/numeric/ublas/test/test_assignment.cpp
@@ -6,6 +6,7 @@
 //  http://www.boost.org/LICENSE_1_0.txt)
 //
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/numeric/ublas/assignment.hpp>
 #include <boost/numeric/ublas/vector.hpp>
 #include <boost/numeric/ublas/vector_proxy.hpp>
--- a/libs/polygon/benchmark/voronoi_benchmark.cpp
+++ b/libs/polygon/benchmark/voronoi_benchmark.cpp
@@ -15,6 +15,7 @@
 #include <numeric>
 #include <vector>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #define BOOST_TEST_MODULE benchmark_test
 #include <boost/mpl/list.hpp>
 #include <boost/random/mersenne_twister.hpp>
--- a/libs/ptr_container/test/pointainer_speed.cpp
+++ b/libs/ptr_container/test/pointainer_speed.cpp
@@ -9,6 +9,7 @@
 // For more information, see http://www.boost.org/libs/ptr_container/
 //
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include "test_data.hpp"
 #include <boost/ptr_container/ptr_vector.hpp>
 #include <boost/shared_ptr.hpp>
--- a/libs/random/performance/nondet_random_speed.cpp
+++ b/libs/random/performance/nondet_random_speed.cpp
@@ -9,6 +9,7 @@
  *
  */
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <iostream>
 #include <string>
 #include <boost/timer.hpp>
--- a/libs/serialization/performance/xml/high_resolution_timer.hpp
+++ b/libs/serialization/performance/xml/high_resolution_timer.hpp
@@ -199,6 +199,7 @@ namespace xml {
 
 #else   // _POSIX_THREAD_CPUTIME > 0
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 
 // availability of high performance timers must be checked at runtime
--- a/libs/spirit/example/lex/word_count_functor_flex.cpp
+++ b/libs/spirit/example/lex/word_count_functor_flex.cpp
@@ -369,6 +369,7 @@ char *yytext;
 //  Distributed under the Boost Software License, Version 1.0. (See accompanying 
 //  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 #if defined(_WIN32)
     #include <io.h>
--- a/libs/spirit/workbench/high_resolution_timer.hpp
+++ b/libs/spirit/workbench/high_resolution_timer.hpp
@@ -193,6 +193,7 @@ namespace util
 
 #else   // _POSIX_THREAD_CPUTIME > 0
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 
 // availability of high performance timers must be checked at runtime
@@ -439,6 +440,7 @@ namespace util
 
 //  For platforms other than Windows or Linux, or not implementing gettimeofday
 //  simply fall back to boost::timer
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/timer.hpp>
 
 namespace util
--- a/libs/type_traits/examples/copy_example.cpp
+++ b/libs/type_traits/examples/copy_example.cpp
@@ -13,6 +13,7 @@
  *
  */
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <iostream>
 #include <typeinfo>
 #include <algorithm>
--- a/libs/type_traits/examples/fill_example.cpp
+++ b/libs/type_traits/examples/fill_example.cpp
@@ -20,6 +20,7 @@
 #include <memory>
 #include <cstring>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/test/included/prg_exec_monitor.hpp>
 #include <boost/timer.hpp>
 #include <boost/type_traits.hpp>
--- a/libs/type_traits/examples/trivial_destructor_example.cpp
+++ b/libs/type_traits/examples/trivial_destructor_example.cpp
@@ -15,6 +15,7 @@
 
 
 #include <iostream>
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/test/included/prg_exec_monitor.hpp>
 #include <boost/timer.hpp>
 #include <boost/type_traits.hpp>
--- a/libs/units/example/performance.cpp
+++ b/libs/units/example/performance.cpp
@@ -37,6 +37,7 @@ solving y' = 1 - x + 4 * y with quantity
 #include <iostream>
 #include <iomanip>
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include <boost/config.hpp>
 #include <boost/timer.hpp>
 #include <boost/utility/result_of.hpp>
--- a/libs/xpressive/perf/time_boost.cpp
+++ b/libs/xpressive/perf/time_boost.cpp
@@ -9,6 +9,7 @@
  *
  */
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include "./regex_comparison.hpp"
 #include <boost/timer.hpp>
 #include <boost/regex.hpp>
--- a/libs/xpressive/perf/time_dynamic_xpressive.cpp
+++ b/libs/xpressive/perf/time_dynamic_xpressive.cpp
@@ -9,6 +9,7 @@
  *
  */
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include "./regex_comparison.hpp"
 #include <cassert>
 #include <boost/timer.hpp>
--- a/libs/xpressive/perf/time_static_xpressive.cpp
+++ b/libs/xpressive/perf/time_static_xpressive.cpp
@@ -9,6 +9,7 @@
  *
  */
 
+#define BOOST_TIMER_ENABLE_DEPRECATED
 #include "./regex_comparison.hpp"
 #include <map>
 #include <cassert>
