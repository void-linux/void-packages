From 2e6674d63f2f541a3fd32f50d593be0c71f686f8 Mon Sep 17 00:00:00 2001
From: spreadsort <spreadsort@gmail.com>
Date: Sat, 17 Dec 2022 17:18:17 -0500
Subject: [PATCH] Delete non-critical

---
 .../boost/sort/spreadsort/detail/float_sort.hpp   |  2 --
 .../boost/sort/spreadsort/detail/integer_sort.hpp |  6 ------
 .../boost/sort/spreadsort/detail/string_sort.hpp  | 15 +++++----------
 3 files changed, 5 insertions(+), 18 deletions(-)

diff --git a/boost/sort/spreadsort/detail/float_sort.hpp b/boost/sort/spreadsort/detail/float_sort.hpp
index 8d20bef..8682afd 100644
--- a/boost/sort/spreadsort/detail/float_sort.hpp
+++ b/boost/sort/spreadsort/detail/float_sort.hpp
@@ -777,7 +777,6 @@ namespace spreadsort {
     float_sort(RandomAccessIter first, RandomAccessIter last, Div_type,
                Right_shift rshift)
     {
-      BOOST_STATIC_ASSERT(sizeof(boost::uintmax_t) >= sizeof(Div_type));
       boost::sort::pdqsort(first, last);
     }
 
@@ -819,7 +818,6 @@ namespace spreadsort {
     float_sort(RandomAccessIter first, RandomAccessIter last, Div_type,
                Right_shift rshift, Compare comp)
     {
-      BOOST_STATIC_ASSERT(sizeof(boost::uintmax_t) >= sizeof(Div_type));
       boost::sort::pdqsort(first, last, comp);
     }
   }
diff --git a/boost/sort/spreadsort/detail/integer_sort.hpp b/boost/sort/spreadsort/detail/integer_sort.hpp
index 77576d0..fad55b3 100644
--- a/boost/sort/spreadsort/detail/integer_sort.hpp
+++ b/boost/sort/spreadsort/detail/integer_sort.hpp
@@ -390,8 +390,6 @@ namespace spreadsort {
     //defaulting to boost::sort::pdqsort when integer_sort won't work
     integer_sort(RandomAccessIter first, RandomAccessIter last, Div_type)
     {
-      //Warning that we're using boost::sort::pdqsort, even though integer_sort was called
-      BOOST_STATIC_ASSERT( sizeof(Div_type) <= sizeof(size_t) );
       boost::sort::pdqsort(first, last);
     }
 
@@ -437,8 +435,6 @@ namespace spreadsort {
     integer_sort(RandomAccessIter first, RandomAccessIter last, Div_type,
                 Right_shift shift, Compare comp)
     {
-      //Warning that we're using boost::sort::pdqsort, even though integer_sort was called
-      BOOST_STATIC_ASSERT( sizeof(Div_type) <= sizeof(size_t) );
       boost::sort::pdqsort(first, last, comp);
     }
 
@@ -481,8 +477,6 @@ namespace spreadsort {
     integer_sort(RandomAccessIter first, RandomAccessIter last, Div_type,
                 Right_shift shift)
     {
-      //Warning that we're using boost::sort::pdqsort, even though integer_sort was called
-      BOOST_STATIC_ASSERT( sizeof(Div_type) <= sizeof(size_t) );
       boost::sort::pdqsort(first, last);
     }
   }
diff --git a/boost/sort/spreadsort/detail/string_sort.hpp b/boost/sort/spreadsort/detail/string_sort.hpp
index fd67a55..e0c3f74 100644
--- a/boost/sort/spreadsort/detail/string_sort.hpp
+++ b/boost/sort/spreadsort/detail/string_sort.hpp
@@ -699,8 +699,7 @@ namespace spreadsort {
     string_sort(RandomAccessIter first, RandomAccessIter last,
                 Unsigned_char_type)
     {
-      //Warning that we're using boost::sort::pdqsort, even though string_sort was called
-      BOOST_STATIC_ASSERT( sizeof(Unsigned_char_type) <= 2 );
+      // Use boost::sort::pdqsort if the char_type is too large for string_sort.
       boost::sort::pdqsort(first, last);
     }
 
@@ -725,8 +724,7 @@ namespace spreadsort {
     {
       typedef typename std::iterator_traits<RandomAccessIter>::value_type
         Data_type;
-      //Warning that we're using boost::sort::pdqsort, even though string_sort was called
-      BOOST_STATIC_ASSERT( sizeof(Unsigned_char_type) <= 2 );
+      // Use boost::sort::pdqsort if the char_type is too large for string_sort.
       boost::sort::pdqsort(first, last, std::greater<Data_type>());
     }
 
@@ -751,8 +749,7 @@ namespace spreadsort {
     string_sort(RandomAccessIter first, RandomAccessIter last,
                 Get_char get_character, Get_length length, Unsigned_char_type)
     {
-      //Warning that we're using boost::sort::pdqsort, even though string_sort was called
-      BOOST_STATIC_ASSERT( sizeof(Unsigned_char_type) <= 2 );
+      // Use boost::sort::pdqsort if the char_type is too large for string_sort.
       boost::sort::pdqsort(first, last);
     }
 
@@ -779,8 +776,7 @@ namespace spreadsort {
     string_sort(RandomAccessIter first, RandomAccessIter last,
         Get_char get_character, Get_length length, Compare comp, Unsigned_char_type)
     {
-      //Warning that we're using boost::sort::pdqsort, even though string_sort was called
-      BOOST_STATIC_ASSERT( sizeof(Unsigned_char_type) <= 2 );
+      // Use boost::sort::pdqsort if the char_type is too large for string_sort.
       boost::sort::pdqsort(first, last, comp);
     }
 
@@ -806,8 +802,7 @@ namespace spreadsort {
     reverse_string_sort(RandomAccessIter first, RandomAccessIter last,
         Get_char get_character, Get_length length, Compare comp, Unsigned_char_type)
     {
-      //Warning that we're using boost::sort::pdqsort, even though string_sort was called
-      BOOST_STATIC_ASSERT( sizeof(Unsigned_char_type) <= 2 );
+      // Use boost::sort::pdqsort if the char_type is too large for string_sort.
       boost::sort::pdqsort(first, last, comp);
     }
   }
