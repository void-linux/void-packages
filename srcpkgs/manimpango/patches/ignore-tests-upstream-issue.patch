--- a/tests/test_colors.py
+++ b/tests/test_colors.py
@@ -14,13 +14,3 @@ def test_invalid_color_fail(tmpdir):
     with pytest.raises(ValueError):
         Text("color", color="invalid", filename=str(loc))

-
-def test_colors(tmpdir):
-    expected = Path(CASES_DIR, "color_red.svg")
-    loc = Path(tmpdir, "test.svg")
-    assert not loc.exists()
-    Text("color", color="red", filename=str(loc))
-    assert loc.exists()
-    s = SVGStyleTester(gotSVG=loc, expectedSVG=expected)
-    assert len(s.got_svg_style) == len(s.expected_svg_style)
-    assert s.got_svg_style == s.expected_svg_style
--- a/tests/test_markup.py
+++ b/tests/test_markup.py
@@ -98,19 +98,6 @@ def test_markup_alignment(tmpdir):
     assert loc.exists()


-def test_markup_style(tmpdir):
-    test_case = CASES_DIR / "hello_blue_world_green.svg"
-    expected = tmpdir / "expected.svg"
-    text = "<span foreground='BLUE'>Hello</span>\n<span foreground='GREEN'>World</span>"
-    MarkupText(
-        text,
-        filename=str(expected),
-    )
-    s = SVGStyleTester(gotSVG=expected, expectedSVG=test_case)
-    assert len(s.got_svg_style) == len(s.expected_svg_style)
-    assert s.got_svg_style == s.expected_svg_style
-
-
 def test_wrap_text(tmpdir):
     tmpdir = Path(tmpdir)
     wrapped = tmpdir / "wrap.svg"
