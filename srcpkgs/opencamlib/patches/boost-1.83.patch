--- a/src/algo/batchpushcutter.cpp
+++ b/src/algo/batchpushcutter.cpp
@@ -20,7 +20,7 @@
 */
 
 #include <boost/foreach.hpp>
-#include <boost/progress.hpp>
+#include <boost/timer/progress_display.hpp>
 
 #ifdef _OPENMP  
     #include <omp.h>
@@ -84,7 +84,7 @@ void BatchPushCutter::pushCutter1() {
     // std::cout << "BatchPushCutter1 with " << fibers->size() << 
     //           " fibers and " << surf->tris.size() << " triangles..." << std::endl;
     nCalls = 0;
-    boost::progress_display show_progress( fibers->size() );
+    boost::timer::progress_display show_progress( fibers->size() );
     BOOST_FOREACH(Fiber& f, *fibers) {
         BOOST_FOREACH( const Triangle& t, surf->tris) {// test against all triangles in s
             Interval i;
@@ -105,7 +105,7 @@ void BatchPushCutter::pushCutter2() {
     //           " fibers and " << surf->tris.size() << " triangles..." << std::endl;
     nCalls = 0;
     std::list<Triangle>* overlap_triangles;
-    boost::progress_display show_progress( fibers->size() );
+    boost::timer::progress_display show_progress( fibers->size() );
     BOOST_FOREACH(Fiber& f, *fibers) {
         CLPoint cl;
         if (x_direction) {
@@ -143,7 +143,7 @@ void BatchPushCutter::pushCutter3() {
     //           " fibers and " << surf->tris.size() << " triangles." << std::endl;
     // std::cout << " cutter = " << cutter->str() << "\n";
     nCalls = 0;
-    boost::progress_display show_progress( fibers->size() );
+    boost::timer::progress_display show_progress( fibers->size() );
 #ifdef _OPENMP
     std::cout << "OpenMP is enabled";
     omp_set_num_threads(nthreads);
--- a/src/algo/fiberpushcutter.cpp
+++ b/src/algo/fiberpushcutter.cpp
@@ -20,7 +20,7 @@
 */
 
 #include <boost/foreach.hpp>
-#include <boost/progress.hpp>
+#include <boost/timer/progress_display.hpp>
 
 #ifdef _OPENMP  
     #include <omp.h>
--- a/src/dropcutter/batchdropcutter.cpp
+++ b/src/dropcutter/batchdropcutter.cpp
@@ -20,7 +20,7 @@
 */
 
 #include <boost/foreach.hpp>
-#include <boost/progress.hpp>
+#include <boost/timer/progress_display.hpp>
 
 #ifdef _OPENMP // this should really not be a check for Windows, but a check for OpenMP
     #include <omp.h>
@@ -109,7 +109,7 @@ void BatchDropCutter::dropCutter3() {
     std::cout << "dropCutterSTL3 " << clpoints->size() << 
             " cl-points and " << surf->tris.size() << " triangles.\n";
     nCalls = 0;
-    boost::progress_display show_progress( clpoints->size() );
+    boost::timer::progress_display show_progress( clpoints->size() );
     std::list<Triangle> *triangles_under_cutter;
     BOOST_FOREACH(CLPoint &cl, *clpoints) { //loop through each CL-point
         triangles_under_cutter = root->search_cutter_overlap( cutter , &cl);
@@ -133,7 +133,7 @@ void BatchDropCutter::dropCutter3() {
 void BatchDropCutter::dropCutter4() {
     std::cout << "dropCutterSTL4 " << clpoints->size() << 
             " cl-points and " << surf->tris.size() << " triangles.\n";
-    boost::progress_display show_progress( clpoints->size() );
+    boost::timer::progress_display show_progress( clpoints->size() );
     nCalls = 0;
     int calls=0;
     long int ntris = 0;
@@ -196,7 +196,7 @@ void BatchDropCutter::dropCutter4() {
 void BatchDropCutter::dropCutter5() {
     std::cout << "dropCutterSTL5 " << clpoints->size() << 
             " cl-points and " << surf->tris.size() << " triangles.\n";
-    boost::progress_display show_progress( clpoints->size() );
+    boost::timer::progress_display show_progress( clpoints->size() );
     nCalls = 0;
     int calls=0;
     long int ntris = 0;
--- a/src/dropcutter/pointdropcutter.cpp
+++ b/src/dropcutter/pointdropcutter.cpp
@@ -20,7 +20,7 @@
 */
 
 #include <boost/foreach.hpp>
-#include <boost/progress.hpp>
+#include <boost/timer/progress_display.hpp>
 
 #ifdef _OPENMP 
     #include <omp.h>
