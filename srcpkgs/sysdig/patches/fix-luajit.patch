From 1147b9a4f6f1f9e97b43735e7980da387837de4a Mon Sep 17 00:00:00 2001
From: Evgeni Golov <evgeni@golov.de>
Date: Sun, 27 Aug 2017 13:51:19 +0200
Subject: [PATCH] fix build with LuaJIT 2.1 betas

LuaJIT 2.1 drops some compat symbols [1]. And while I think that this is
wrong, as it breaks compatibility with Lua 5.1 [2], it is quite easy to
adopt the code to work with both versions (2.0 and 2.1) of LuaJIT and
remain Lua 5.1 compatible.

[1] https://github.com/LuaJIT/LuaJIT/commit/dc320ca70f2c5bb3977b82853bcee6dad2523d01
[2] https://github.com/LuaJIT/LuaJIT/issues/325

Signed-off-by: Evgeni Golov <evgeni@golov.de>
sysdig-CLA-1.0-signed-off-by: Evgeni Golov <evgeni@golov.de>
---
 CMakeLists.txt                        | 2 +-
 userspace/libsinsp/chisel.cpp         | 6 +++---
 userspace/libsinsp/lua_parser.cpp     | 2 +-
 userspace/libsinsp/lua_parser_api.cpp | 2 +-
 4 files changed, 6 insertions(+), 6 deletions(-)

Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -103,7 +103,7 @@ option(USE_BUNDLED_DEPS "Enable bundled
 option(USE_BUNDLED_LUAJIT "Enable building of the bundled LuaJIT" ${USE_BUNDLED_DEPS})
 
 if(NOT USE_BUNDLED_LUAJIT)
-	find_path(LUAJIT_INCLUDE luajit.h PATH_SUFFIXES luajit-2.0 luajit)
+	find_path(LUAJIT_INCLUDE luajit.h PATH_SUFFIXES luajit-2.1 luajit-2.0 luajit)
 	find_library(LUAJIT_LIB NAMES luajit luajit-5.1)
 	if(LUAJIT_INCLUDE AND LUAJIT_LIB)
 		message(STATUS "Found LuaJIT: include: ${LUAJIT_INCLUDE}, lib: ${LUAJIT_LIB}")
Index: userspace/libsinsp/chisel.cpp
===================================================================
--- userspace/libsinsp/chisel.cpp
+++ userspace/libsinsp/chisel.cpp
@@ -96,7 +96,7 @@ void lua_stackdump(lua_State *L)
 // Lua callbacks
 ///////////////////////////////////////////////////////////////////////////////
 #ifdef HAS_LUA_CHISELS
-const static struct luaL_reg ll_sysdig [] =
+const static struct luaL_Reg ll_sysdig [] =
 {
 	{"set_filter", &lua_cbacks::set_global_filter},
 	{"set_snaplen", &lua_cbacks::set_snaplen},
@@ -132,7 +132,7 @@ const static struct luaL_reg ll_sysdig [
 	{NULL,NULL}
 };
 
-const static struct luaL_reg ll_chisel [] =
+const static struct luaL_Reg ll_chisel [] =
 {
 	{"request_field", &lua_cbacks::request_field},
 	{"set_filter", &lua_cbacks::set_filter},
@@ -144,7 +144,7 @@ const static struct luaL_reg ll_chisel [
 	{NULL,NULL}
 };
 
-const static struct luaL_reg ll_evt [] =
+const static struct luaL_Reg ll_evt [] =
 {
 	{"field", &lua_cbacks::field},
 	{"get_num", &lua_cbacks::get_num},
Index: userspace/libsinsp/lua_parser.cpp
===================================================================
--- userspace/libsinsp/lua_parser.cpp
+++ userspace/libsinsp/lua_parser.cpp
@@ -14,7 +14,7 @@ extern "C" {
 #include "lauxlib.h"
 }
 
-const static struct luaL_reg ll_filter [] =
+const static struct luaL_Reg ll_filter [] =
 {
 	{"rel_expr", &lua_parser_cbacks::rel_expr},
 	{"bool_op", &lua_parser_cbacks::bool_op},
Index: userspace/libsinsp/lua_parser_api.cpp
===================================================================
--- userspace/libsinsp/lua_parser_api.cpp
+++ userspace/libsinsp/lua_parser_api.cpp
@@ -231,7 +231,7 @@ int lua_parser_cbacks::rel_expr(lua_Stat
 					fprintf(stderr, "%s\n", err.c_str());
 					throw sinsp_exception("parser API error");
 				}
-				int n = luaL_getn(ls, 4);  /* get size of table */
+				int n = (int)lua_objlen(ls, 4);  /* get size of table */
 				for (i=1; i<=n; i++)
 				{
 					lua_rawgeti(ls, 4, i);
