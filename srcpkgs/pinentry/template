# Template file for 'pinentry'
pkgname=pinentry
version=1.1.0
revision=5
build_style=gnu-configure
configure_args="--disable-rpath --without-libcap --disable-pinentry-gtk
 --enable-pinentry-curses --enable-fallback-curses --enable-pinentry-gtk2
 --enable-pinentry-emacs --enable-pinentry-qt --enable-pinentry-tty
 --enable-pinentry-gnome3 $(vopt_enable libsecret)"
hostmakedepends="pkg-config"
makedepends="ncurses-devel gcr-devel gtk+-devel libassuan-devel libgpg-error-devel
 qt5-devel $(vopt_if libsecret 'libsecret-devel')"
short_desc="PIN or passphrase entry dialogs for GnuPG"
maintainer="Leah Neukirchen <leah@vuxu.org>"
license="GPL-2.0-or-later"
homepage="https://www.gnupg.org/related_software/pinentry/index.html"
distfiles="https://gnupg.org/ftp/gcrypt/pinentry/pinentry-${version}.tar.bz2"
checksum=68076686fa724a290ea49cdf0d1c0c1500907d1b759a3bcbfbec0293e8f56570

alternatives="pinentry:pinentry:/usr/bin/pinentry-curses"

build_options="libsecret"
desc_option_libsecret="Enable support for saving passwords via libsecret"
build_options_default="libsecret"

if [ "$CROSS_BUILD" ]; then
	hostmakedepends+=" qt5-host-tools"
fi

pre_build() {
	sed -e 's,ncursesw/curses.h,curses.h,' -i pinentry/pinentry-curses.c
}

post_install() {
	rm ${DESTDIR}/usr/bin/pinentry
}

pinentry-tty_package() {
	depends="${sourcepkg}>=${version}_${revision}"
	short_desc+=" for dumb terminals"
	alternatives="pinentry:pinentry:/usr/bin/pinentry-tty"
	pkg_install() {
		vmove usr/bin/pinentry-tty
	}
}

pinentry-qt_package() {
	depends="${sourcepkg}>=${version}_${revision}"
	short_desc+=" based on Qt"
	alternatives="pinentry:pinentry:/usr/bin/pinentry-qt"
	pkg_install() {
		vmove usr/bin/pinentry-qt
	}
}

pinentry-gtk_package() {
	depends="${sourcepkg}>=${version}_${revision}"
	short_desc+=" based on GTK+"
	alternatives="pinentry:pinentry:/usr/bin/pinentry-gtk-2"
	pkg_install() {
		vmove usr/bin/pinentry-gtk-2
	}
}

pinentry-emacs_package() {
	depends="${sourcepkg}>=${version}_${revision}"
	short_desc+=" - Emacs interface"
	alternatives="pinentry:pinentry:/usr/bin/pinentry-emacs"
	pkg_install() {
		vmove usr/bin/pinentry-emacs
	}
}

pinentry-gnome_package() {
	depends="${sourcepkg}>=${version}_${revision}"
	short_desc+=" for the GNOME desktop"
	alternatives="pinentry:pinentry:/usr/bin/pinentry-gnome3"
	pkg_install() {
		vmove usr/bin/pinentry-gnome3
	}
}
