--- src/engine/gstenginepipeline.cpp	2019-01-04 01:25:44.330066042 +0100
+++ src/engine/gstenginepipeline.cpp	2019-01-04 01:25:49.105534312 +0100
@@ -390,7 +390,7 @@
   if (!InitAudioBin()) return false;
 
   // Set playbin's sink to be our costum audio-sink.
-  g_object_set(GST_OBJECT(pipeline_), "audio-sink", audiobin_, NULL);
+  g_object_set(GST_OBJECT(pipeline_), "audio-sink", audiobin_, (char*)0);
   pipeline_is_connected_ = true;
 
   return true;
--- src/device/cddasongloader.cpp	2019-01-04 01:28:36.954906340 +0100
+++ src/device/cddasongloader.cpp	2019-01-04 01:29:22.541864995 +0100
@@ -84,7 +84,7 @@
     g_object_set(cdda_, "device", g_strdup(url_.path().toLocal8Bit().constData()), nullptr);
   }
   if (g_object_class_find_property (G_OBJECT_GET_CLASS (cdda_), "paranoia-mode")) {
-    g_object_set (cdda_, "paranoia-mode", 0, NULL);
+    g_object_set (cdda_, "paranoia-mode", 0, (char*)0);
   }
 
   // Change the element's state to ready and paused, to be able to query it
@@ -124,7 +124,7 @@
 
   GstElement *pipeline = gst_pipeline_new("pipeline");
   GstElement *sink = gst_element_factory_make ("fakesink", NULL);
-  gst_bin_add_many (GST_BIN (pipeline), cdda_, sink, NULL);
+  gst_bin_add_many (GST_BIN (pipeline), cdda_, sink, (char*)0);
   gst_element_link (cdda_, sink);
   gst_element_set_state(pipeline, GST_STATE_READY);
   gst_element_set_state(pipeline, GST_STATE_PAUSED);
--- src/musicbrainz/chromaprinter.cpp	2019-01-04 01:27:28.842452039 +0100
+++ src/musicbrainz/chromaprinter.cpp	2019-01-04 01:27:49.900117399 +0100
@@ -101,7 +101,7 @@
       "format", G_TYPE_STRING, "S16LE",
       "channels", G_TYPE_INT, kDecodeChannels,
       "rate", G_TYPE_INT, kDecodeRate,
-      NULL);
+      (char*)0);
   gst_element_link_filtered(resample, sink, caps);
   gst_caps_unref(caps);
 
