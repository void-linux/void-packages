# Template file for 'armcord'
pkgname=armcord
version=3.1.4
revision=1
archs="x86_64* i686*"
hostmakedepends="nodejs electron19 git"
depends="alsa-lib dbus-glib libnotify atk gtk+3 nss xdg-utils webrtc-audio-processing"
short_desc="Custom client designed to enhance Discord experience"
maintainer="Zoh-j02r <saulobruno@usp.br>"
license="custom:OSL-3.0"
homepage="https://github.com/ArmCord/ArmCord"
distfiles="${homepage}/archive/refs/tags/v${version}.tar.gz"
checksum="4b40b58a73b0c81b0fa75e40ae0167ee5d7f35fc09b94e4a993bc09cd2e41974"
nopie=yes

_get_arch() {
	case "${XBPS_TARGET_MACHINE}" in
		x86_64*) echo x64 ;;
		i686*) echo ia32 ;;
	esac
}

do_patch() {
	vsed -e 's|--dir|--dir --'"$(_get_arch)"' -c.electronDist=/usr/lib/electron19/ -c.electronVersion=electron|' \
	-i package.json 
}

do_build() {
	npx --yes pnpm install --frozen-lockfile --ignore-scripts
	npm run packageQuick
}

do_install() {
	local package_location="usr/lib/$pkgname" item
	vmkdir ${package_location}
	vinstall build/icon.png 644 /usr/share/pixmaps/ armcord.png
	vcopy dist/*-unpacked/* $package_location
	vmkdir usr/bin
	ln -sfr $DESTDIR/$package_location/$pkgname $DESTDIR/usr/bin/armcord
	vinstall ${FILESDIR}/${pkgname}.desktop 644 usr/share/applications
}

post_install() {
	vlicense LICENSE
}
