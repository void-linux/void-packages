# Template file for 'armcord'
pkgname=armcord
version=3.1.4
revision=1
archs="x86_64* i686* aarch64* armv7l*"
hostmakedepends="nodejs"
depends="alsa-lib dbus-glib libnotify atk gtk+3 nss xdg-utils webrtc-audio-processing"
short_desc="A custom client designed to enhance your Discord experience"
maintainer="Zoh-j02r <saulobruno@usp.br>"
license="custom:OSL-3.0"
homepage="https://github.com/ArmCord/ArmCord"
distfiles="${homepage}/archive/refs/tags/v${version}.tar.gz"
checksum="4b40b58a73b0c81b0fa75e40ae0167ee5d7f35fc09b94e4a993bc09cd2e41974"

do_build() {
	npx --yes pnpm install --frozen-lockfile --ignore-scripts
	npm run packageQuick
}

do_install() {
	local package_location="usr/lib/$pkgname" item
	vmkdir ${package_location}
	vinstall build/icon.png 644 /usr/share/pixmaps/ armcord.png
	cd dist/linux-unpacked/
	for item in locales resources armcord libffmpeg.so snapshot_blob.bin icudtl.dat\
	libEGL.so libGLESv2.so libvulkan.so.1 chrome_100_percent.pak chrome_200_percent.pak \
	chrome-sandbox resources.pak vk_swiftshader_icd.json v8_context_snapshot.bin \
	chrome_crashpad_handler libvk_swiftshader.so; do
		vcopy "${item}" "${package_location}"
	vmkdir usr/bin
	ln -sfr $DESTDIR/$package_location/armcord $DESTDIR/usr/bin/armcord
	vinstall ${FILESDIR}/${pkgname}.desktop 644 usr/share/applications
	done;
}

post_install() {
	vlicense LICENSE
}
