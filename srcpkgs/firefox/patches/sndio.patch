--- old-configure.in.orig
+++ old-configure.in
@@ -2818,6 +2818,22 @@
     _NON_GLOBAL_ACDEFINES="$_NON_GLOBAL_ACDEFINES NECKO_COOKIES"
 fi
 
+dnl ==================================
+dnl = Check sndio availability
+dnl ==================================
+
+MOZ_ARG_ENABLE_BOOL(sndio,
+[  --enable-sndio         Enable sndio support],
+   MOZ_SNDIO=1,
+   MOZ_SNDIO=)
+
+if test -n "$MOZ_SNDIO"; then
+    MOZ_SNDIO_LIBS="-lsndio"
+    AC_SUBST_LIST(MOZ_SNDIO_LIBS)
+fi
+
+AC_SUBST(MOZ_SNDIO)
+
 dnl ========================================================
 dnl =
 dnl = Maintainer debug option (no --enable equivalent)
--- media/libcubeb/src/moz.build.orig
+++ media/libcubeb/src/moz.build
@@ -44,7 +44,7 @@
     ]
     DEFINES['USE_JACK'] = True
 
-if CONFIG['OS_ARCH'] == 'OpenBSD':
+if CONFIG['MOZ_SNDIO']:
     SOURCES += [
         'cubeb_sndio.c',
     ]
--- build/moz.configure/old.configure.orig
+++ build/moz.configure/old.configure
@@ -184,6 +184,7 @@
 @old_configure_options(
     '--cache-file',
     '--datadir',
+    '--enable-sndio',
     '--enable-cookies',
     '--enable-cpp-rtti',
     '--enable-crashreporter',
--- security/sandbox/linux/broker/SandboxBrokerPolicyFactory.cpp.orig
+++ security/sandbox/linux/broker/SandboxBrokerPolicyFactory.cpp
@@ -394,6 +394,21 @@
         }
       }
     }
+
+#ifdef MOZ_SNDIO
+    // ~/.aucat_cookie (sndio)
+    rv = homeDir->Clone(getter_AddRefs(confDir));
+    if (NS_SUCCEEDED(rv)) {
+      rv = confDir->AppendNative(NS_LITERAL_CSTRING(".aucat_cookie"));
+      if (NS_SUCCEEDED(rv)) {
+        nsAutoCString tmpPath;
+        rv = confDir->GetNativePath(tmpPath);
+        if (NS_SUCCEEDED(rv)) {
+          policy->AddPath(rdwrcr, tmpPath.get());
+        }
+      }
+    }
+#endif
   }
 
   // Firefox binary dir.
--- security/sandbox/linux/moz.build.orig
+++ security/sandbox/linux/moz.build
@@ -81,6 +81,9 @@
     '../chromium/sandbox/linux/services/syscall_wrappers.cc',
 ]
 
+if CONFIG['MOZ_SNDIO']:
+    DEFINES['MOZ_SNDIO'] = True
+
 # This copy of SafeSPrintf doesn't need to avoid the Chromium logging
 # dependency like the one in libxul does, but this way the behavior is
 # consistent.  See also the comment in SandboxLogging.h.
