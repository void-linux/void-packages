diff --git a/src/sage/categories/simplicial_sets.py b/src/sage/categories/simplicial_sets.py
index 76030be831b..f30ed0ffeb2 100644
--- a/src/sage/categories/simplicial_sets.py
+++ b/src/sage/categories/simplicial_sets.py
@@ -444,29 +444,31 @@ def covering_map(self, character):
 
                     sage: # needs sage.graphs sage.groups
                     sage: S1 = simplicial_sets.Sphere(1)
-                    sage: W = S1.wedge(S1)
+                    sage: S1_ = simplicial_sets.Sphere(1)
+                    sage: S1_.n_cells(1)[0].rename("sigma_1'")
+                    sage: W = S1.wedge(S1_)
                     sage: G = CyclicPermutationGroup(3)
                     sage: a, b = W.n_cells(1)
                     sage: C = W.covering_map({a : G.gen(0), b : G.one()}); C
                     Simplicial set morphism:
                       From: Simplicial set with 9 non-degenerate simplices
                       To:   Wedge: (S^1 v S^1)
-                      Defn: [(*, ()), (*, (1,2,3)), (*, (1,3,2)), (sigma_1, ()),
-                             (sigma_1, ()), (sigma_1, (1,2,3)), (sigma_1, (1,2,3)),
-                             (sigma_1, (1,3,2)), (sigma_1, (1,3,2))]
-                            --> [*, *, *, sigma_1, sigma_1, sigma_1, sigma_1, sigma_1, sigma_1]
+                      Defn: [(*, ()), (*, (1,2,3)), (*, (1,3,2)), (sigma_1', ()),
+                             (sigma_1', (1,2,3)), (sigma_1', (1,3,2)), (sigma_1, ()),
+                             (sigma_1, (1,2,3)), (sigma_1, (1,3,2))]
+                            --> [*, *, *, sigma_1', sigma_1', sigma_1', sigma_1, sigma_1, sigma_1]
                     sage: C.domain()
                     Simplicial set with 9 non-degenerate simplices
                     sage: C.domain().face_data()
                     {(*, ()): None,
                      (*, (1,2,3)): None,
                      (*, (1,3,2)): None,
+                     (sigma_1', ()): ((*, ()), (*, ())),
+                     (sigma_1', (1,2,3)): ((*, (1,2,3)), (*, (1,2,3))),
+                     (sigma_1', (1,3,2)): ((*, (1,3,2)), (*, (1,3,2))),
                      (sigma_1, ()): ((*, (1,2,3)), (*, ())),
-                     (sigma_1, ()): ((*, ()), (*, ())),
                      (sigma_1, (1,2,3)): ((*, (1,3,2)), (*, (1,2,3))),
-                     (sigma_1, (1,2,3)): ((*, (1,2,3)), (*, (1,2,3))),
-                     (sigma_1, (1,3,2)): ((*, ()), (*, (1,3,2))),
-                     (sigma_1, (1,3,2)): ((*, (1,3,2)), (*, (1,3,2)))}
+                     (sigma_1, (1,3,2)): ((*, ()), (*, (1,3,2)))}
                 """
                 from sage.topology.simplicial_set import AbstractSimplex, SimplicialSet
                 from sage.topology.simplicial_set_morphism import SimplicialSetMorphism
@@ -530,7 +532,9 @@ def cover(self, character):
 
                     sage: # needs sage.graphs sage.groups
                     sage: S1 = simplicial_sets.Sphere(1)
-                    sage: W = S1.wedge(S1)
+                    sage: S1_ = simplicial_sets.Sphere(1)
+                    sage: S1_.n_cells(1)[0].rename("sigma_1'")
+                    sage: W = S1.wedge(S1_)
                     sage: G = CyclicPermutationGroup(3)
                     sage: (a, b) = W.n_cells(1)
                     sage: C = W.cover({a : G.gen(0), b : G.gen(0)^2})
@@ -538,12 +542,12 @@ def cover(self, character):
                     {(*, ()): None,
                      (*, (1,2,3)): None,
                      (*, (1,3,2)): None,
+                     (sigma_1', ()): ((*, (1,3,2)), (*, ())),
+                     (sigma_1', (1,2,3)): ((*, ()), (*, (1,2,3))),
+                     (sigma_1', (1,3,2)): ((*, (1,2,3)), (*, (1,3,2))),
                      (sigma_1, ()): ((*, (1,2,3)), (*, ())),
-                     (sigma_1, ()): ((*, (1,3,2)), (*, ())),
                      (sigma_1, (1,2,3)): ((*, (1,3,2)), (*, (1,2,3))),
-                     (sigma_1, (1,2,3)): ((*, ()), (*, (1,2,3))),
-                     (sigma_1, (1,3,2)): ((*, ()), (*, (1,3,2))),
-                     (sigma_1, (1,3,2)): ((*, (1,2,3)), (*, (1,3,2)))}
+                     (sigma_1, (1,3,2)): ((*, ()), (*, (1,3,2)))}
                     sage: C.homology(1)                                                 # needs sage.modules
                     Z x Z x Z x Z
                     sage: C.fundamental_group()
