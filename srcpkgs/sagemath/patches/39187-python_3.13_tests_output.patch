diff --git a/src/sage/categories/map.pyx b/src/sage/categories/map.pyx
index 43e476847d0..0007555326a 100644
--- a/src/sage/categories/map.pyx
+++ b/src/sage/categories/map.pyx
@@ -275,7 +275,7 @@ cdef class Map(Element):
         maps::
 
             sage: phi.domain                                                            # needs sage.rings.number_field
-            <weakref at ...; to 'NumberField_quadratic_with_category' at ...>
+            <weakref at ...; to '...NumberField_quadratic_with_category' at ...>
             sage: phi._make_strong_references()                                         # needs sage.rings.number_field
             sage: print(phi.domain)                                                     # needs sage.rings.number_field
             The constant function (...) -> Number Field in a
@@ -343,7 +343,7 @@ cdef class Map(Element):
         maps::
 
             sage: phi.domain                                                            # needs sage.rings.number_field
-            <weakref at ...; to 'NumberField_quadratic_with_category' at ...>
+            <weakref at ...; to '...NumberField_quadratic_with_category' at ...>
             sage: phi._make_strong_references()                                         # needs sage.rings.number_field
             sage: print(phi.domain)                                                     # needs sage.rings.number_field
             The constant function (...) -> Number Field in a
diff --git a/src/sage/misc/bindable_class.py b/src/sage/misc/bindable_class.py
index 743b5a19da6..c23ba0c2c43 100644
--- a/src/sage/misc/bindable_class.py
+++ b/src/sage/misc/bindable_class.py
@@ -113,7 +113,7 @@ class BindableClass(metaclass=ClasscallMetaclass):
         Still, documentation works as usual::
 
             sage: outer.Inner.__doc__
-            ' some documentation '
+            '...some documentation '
 
     TESTS::
 
diff --git a/src/sage/misc/sagedoc.py b/src/sage/misc/sagedoc.py
index 0505f6039a9..6147ec4983b 100644
--- a/src/sage/misc/sagedoc.py
+++ b/src/sage/misc/sagedoc.py
@@ -694,7 +694,7 @@ def format(s, embedded=False):
     We check that the todo Sphinx extension is correctly activated::
 
         sage: sage.misc.sagedoc.format(sage.combinat.ranker.on_fly.__doc__)             # needs sphinx
-        "   Return ...  Todo: add tests as in combinat::rankers\n"
+        "...Return ...Todo: add tests as in combinat::rankers\n"
 
     In the following use case, the ``nodetex`` directive would have been ignored prior
     to :issue:`11815`::
@@ -1135,10 +1135,11 @@ def search_src(string, extra1='', extra2='', extra3='', extra4='',
     The following produces an error because the string 'fetch(' is a
     malformed regular expression::
 
-        sage: print(search_src(" fetch(", "def", interact=False))
-        Traceback (most recent call last):
-        ...
-        error: missing ), unterminated subpattern at position 6
+        sage: try:
+        ....:     print(search_src(" fetch(", "def", interact=False))
+        ....: except Exception as e:
+        ....:     print(e)
+        missing ), unterminated subpattern at position 6
 
     To fix this, *escape* the parenthesis with a backslash::
 
@@ -1186,7 +1187,6 @@ def search_src(string, extra1='', extra2='', extra3='', extra4='',
         misc/sagedoc.py:... len(search_src("matrix", interact=False).splitlines())...
         misc/sagedoc.py:... len(search_src("matrix", module="sage.calculus", interact=False).splitlines())...
         misc/sagedoc.py:... len(search_src("matrix", path_re="calc"...
-        misc/sagedoc.py:... print(search_src(" fetch(", "def", interact=False))...
         misc/sagedoc.py:... print(search_src(r" fetch\(", "def", interact=False))...
         misc/sagedoc.py:... print(search_src(r" fetch\(", "def", "pyx", interact=False))...
         misc/sagedoc.py:... s = search_src('Matrix', path_re='matrix', interact=False); s.find('x') > 0...
@@ -1456,7 +1456,7 @@ class _sage_doc:
         sage: browse_sage_doc._open("reference", testing=True)[0]                       # needs sagemath_doc_html
         'http://localhost:8000/doc/live/reference/index.html'
         sage: browse_sage_doc(identity_matrix, 'rst')[-107:-47]                         # needs sage.modules
-        'Full MatrixSpace of 3 by 3 sparse matrices over Integer Ring'
+        '...Full MatrixSpace of 3 by 3 sparse matrices...'
     """
     def __init__(self):
         """
diff --git a/src/sage/misc/sageinspect.py b/src/sage/misc/sageinspect.py
index 585112b5061..12f319fc8e3 100644
--- a/src/sage/misc/sageinspect.py
+++ b/src/sage/misc/sageinspect.py
@@ -1986,7 +1986,7 @@ def sage_getdoc(obj, obj_name='', embedded=False):
 
         sage: from sage.misc.sageinspect import sage_getdoc
         sage: sage_getdoc(identity_matrix)[87:124]                                      # needs sage.modules
-        'Return the n x n identity matrix over'
+        '...the n x n identity matrix...'
         sage: def f(a, b, c, d=1): return a+b+c+d
         ...
         sage: import functools
diff --git a/src/sage/modular/modsym/modsym.py b/src/sage/modular/modsym/modsym.py
index fb46d0edafa..ed7c9285169 100644
--- a/src/sage/modular/modsym/modsym.py
+++ b/src/sage/modular/modsym/modsym.py
@@ -369,7 +369,7 @@ def ModularSymbols(group=1,
         {}
         sage: M = ModularSymbols(11,use_cache=True)
         sage: sage.modular.modsym.modsym._cache
-        {(Congruence Subgroup Gamma0(11), 2, 0, Rational Field): <weakref at ...; to 'ModularSymbolsAmbient_wt2_g0_with_category' at ...>}
+        {(Congruence Subgroup Gamma0(11), 2, 0, Rational Field): <weakref at ...; to '...ModularSymbolsAmbient_wt2_g0_with_category' at ...>}
         sage: M is ModularSymbols(11,use_cache=True)
         True
         sage: M is ModularSymbols(11,use_cache=False)
diff --git a/src/sage/repl/attach.py b/src/sage/repl/attach.py
index b3e20fe61d8..b9997d8f2df 100644
--- a/src/sage/repl/attach.py
+++ b/src/sage/repl/attach.py
@@ -40,7 +40,7 @@
     ....:     traceback.print_exc(file=sys.stdout)
     Traceback (most recent call last):
     ...
-        exec(preparse_file(f.read()) + "\n", globals)
+        exec(preparse_file(f.read()) + "\n", globals)...
       File "<string>", line 3, in <module>
     ValueError: third
     sage: detach(src)
@@ -52,7 +52,7 @@
     ....:     traceback.print_exc(file=sys.stdout)
     Traceback (most recent call last):
     ...
-        exec(code, globals)
+        exec(code, globals)...
       File ".../foobar...sage.py", line ..., in <module>
         raise ValueError("third")   # this should appear in the source snippet...
     ValueError: third
diff --git a/src/sage/repl/rich_output/pretty_print.py b/src/sage/repl/rich_output/pretty_print.py
index 93833e01cd8..8e00e3d70e4 100644
--- a/src/sage/repl/rich_output/pretty_print.py
+++ b/src/sage/repl/rich_output/pretty_print.py
@@ -160,7 +160,7 @@ def pretty_print(self):
             sage: seq._concatenate_graphs().show(edge_labels=True)                      # needs sage.graphs sage.plot
             Traceback (most recent call last):
             ...
-            TypeError: ...matplotlib() got an unexpected keyword argument 'edge_labels'
+            TypeError: ...matplotlib() got an unexpected keyword argument 'edge_labels'...
         """
         try:
             from sage.plot.plot import Graphics
