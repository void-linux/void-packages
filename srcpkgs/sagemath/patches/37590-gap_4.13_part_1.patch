diff --git a/src/doc/en/prep/Quickstarts/Abstract-Algebra.rst b/src/doc/en/prep/Quickstarts/Abstract-Algebra.rst
index 101cbcdb4e7..fe465251bfc 100644
--- a/src/doc/en/prep/Quickstarts/Abstract-Algebra.rst
+++ b/src/doc/en/prep/Quickstarts/Abstract-Algebra.rst
@@ -65,13 +65,13 @@ We can access a lot of information about groups, such as:
     Subgroup generated by [(1,5)(2,6)(3,7)(4,8)] of (Dihedral group of order 16 as a permutation group)
     Subgroup generated by [(2,8)(3,7)(4,6)] of (Dihedral group of order 16 as a permutation group)
     Subgroup generated by [(1,2)(3,8)(4,7)(5,6)] of (Dihedral group of order 16 as a permutation group)
-    Subgroup generated by [(1,3,5,7)(2,4,6,8), (1,5)(2,6)(3,7)(4,8)] of (Dihedral group of order 16 as a permutation group)
-    Subgroup generated by [(2,8)(3,7)(4,6), (1,5)(2,6)(3,7)(4,8)] of (Dihedral group of order 16 as a permutation group)
-    Subgroup generated by [(1,2)(3,8)(4,7)(5,6), (1,5)(2,6)(3,7)(4,8)] of (Dihedral group of order 16 as a permutation group)
-    Subgroup generated by [(2,8)(3,7)(4,6), (1,3,5,7)(2,4,6,8), (1,5)(2,6)(3,7)(4,8)] of (Dihedral group of order 16 as a permutation group)
-    Subgroup generated by [(1,2,3,4,5,6,7,8), (1,3,5,7)(2,4,6,8), (1,5)(2,6)(3,7)(4,8)] of (Dihedral group of order 16 as a permutation group)
-    Subgroup generated by [(1,2)(3,8)(4,7)(5,6), (1,3,5,7)(2,4,6,8), (1,5)(2,6)(3,7)(4,8)] of (Dihedral group of order 16 as a permutation group)
-    Subgroup generated by [(2,8)(3,7)(4,6), (1,2,3,4,5,6,7,8), (1,3,5,7)(2,4,6,8), (1,5)(2,6)(3,7)(4,8)] of (Dihedral group of order 16 as a permutation group)
+    Subgroup generated by [(1,5)(2,6)(3,7)(4,8), (1,3,5,7)(2,4,6,8)] of (Dihedral group of order 16 as a permutation group)
+    Subgroup generated by [(1,5)(2,6)(3,7)(4,8), (2,8)(3,7)(4,6)] of (Dihedral group of order 16 as a permutation group)
+    Subgroup generated by [(1,5)(2,6)(3,7)(4,8), (1,2)(3,8)(4,7)(5,6)] of (Dihedral group of order 16 as a permutation group)
+    Subgroup generated by [(1,5)(2,6)(3,7)(4,8), (1,3,5,7)(2,4,6,8), (2,8)(3,7)(4,6)] of (Dihedral group of order 16 as a permutation group)
+    Subgroup generated by [(1,5)(2,6)(3,7)(4,8), (1,3,5,7)(2,4,6,8), (1,2,3,4,5,6,7,8)] of (Dihedral group of order 16 as a permutation group)
+    Subgroup generated by [(1,5)(2,6)(3,7)(4,8), (1,3,5,7)(2,4,6,8), (1,2)(3,8)(4,7)(5,6)] of (Dihedral group of order 16 as a permutation group)
+    Subgroup generated by [(1,5)(2,6)(3,7)(4,8), (1,3,5,7)(2,4,6,8), (2,8)(3,7)(4,6), (1,2,3,4,5,6,7,8)] of (Dihedral group of order 16 as a permutation group)
 
 In the previous cell we once again did a for loop over a set of objects
 rather than just a list of numbers.  This can be very powerful.
diff --git a/src/doc/en/thematic_tutorials/group_theory.rst b/src/doc/en/thematic_tutorials/group_theory.rst
index e9e6b23953f..dd0afcbef0c 100644
--- a/src/doc/en/thematic_tutorials/group_theory.rst
+++ b/src/doc/en/thematic_tutorials/group_theory.rst
@@ -591,8 +591,8 @@ subgroups. ::
      Subgroup generated by [(1,11)(2,12)(3,13)(4,14)(5,15)(6,16)(7,17)(8,18)(9,19)(10,20)] of (Cyclic group of order 20 as a permutation group),
      Subgroup generated by [(1,6,11,16)(2,7,12,17)(3,8,13,18)(4,9,14,19)(5,10,15,20), (1,11)(2,12)(3,13)(4,14)(5,15)(6,16)(7,17)(8,18)(9,19)(10,20)] of (Cyclic group of order 20 as a permutation group),
      Subgroup generated by [(1,5,9,13,17)(2,6,10,14,18)(3,7,11,15,19)(4,8,12,16,20)] of (Cyclic group of order 20 as a permutation group),
-     Subgroup generated by [(1,3,5,7,9,11,13,15,17,19)(2,4,6,8,10,12,14,16,18,20), (1,5,9,13,17)(2,6,10,14,18)(3,7,11,15,19)(4,8,12,16,20)] of (Cyclic group of order 20 as a permutation group),
-     Subgroup generated by [(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20), (1,3,5,7,9,11,13,15,17,19)(2,4,6,8,10,12,14,16,18,20), (1,5,9,13,17)(2,6,10,14,18)(3,7,11,15,19)(4,8,12,16,20)] of (Cyclic group of order 20 as a permutation group)]
+     Subgroup generated by [(1,5,9,13,17)(2,6,10,14,18)(3,7,11,15,19)(4,8,12,16,20), (1,3,5,7,9,11,13,15,17,19)(2,4,6,8,10,12,14,16,18,20)] of (Cyclic group of order 20 as a permutation group),
+     Subgroup generated by [(1,5,9,13,17)(2,6,10,14,18)(3,7,11,15,19)(4,8,12,16,20), (1,3,5,7,9,11,13,15,17,19)(2,4,6,8,10,12,14,16,18,20), (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)] of (Cyclic group of order 20 as a permutation group)]
 
 Be careful, this command uses some more advanced ideas and will not
 usually list *all* of the subgroups of a group. Here we are relying on
@@ -651,16 +651,16 @@ suitable `g`. As an illustration, the code below:
      Subgroup generated by [(1,2)(3,12)(4,11)(5,10)(6,9)(7,8)] of (Dihedral group of order 24 as a permutation group),
      Subgroup generated by [(1,5,9)(2,6,10)(3,7,11)(4,8,12)] of (Dihedral group of order 24 as a permutation group),
      Subgroup generated by [(2,12)(3,11)(4,10)(5,9)(6,8), (1,7)(2,8)(3,9)(4,10)(5,11)(6,12)] of (Dihedral group of order 24 as a permutation group),
-     Subgroup generated by [(1,7)(2,8)(3,9)(4,10)(5,11)(6,12), (1,10,7,4)(2,11,8,5)(3,12,9,6)] of (Dihedral group of order 24 as a permutation group),
+     Subgroup generated by [(1,10,7,4)(2,11,8,5)(3,12,9,6), (1,7)(2,8)(3,9)(4,10)(5,11)(6,12)] of (Dihedral group of order 24 as a permutation group),
      Subgroup generated by [(1,2)(3,12)(4,11)(5,10)(6,9)(7,8), (1,7)(2,8)(3,9)(4,10)(5,11)(6,12)] of (Dihedral group of order 24 as a permutation group),
-     Subgroup generated by [(1,3,5,7,9,11)(2,4,6,8,10,12), (1,5,9)(2,6,10)(3,7,11)(4,8,12)] of (Dihedral group of order 24 as a permutation group),
-     Subgroup generated by [(2,12)(3,11)(4,10)(5,9)(6,8), (1,5,9)(2,6,10)(3,7,11)(4,8,12)] of (Dihedral group of order 24 as a permutation group),
-     Subgroup generated by [(1,2)(3,12)(4,11)(5,10)(6,9)(7,8), (1,5,9)(2,6,10)(3,7,11)(4,8,12)] of (Dihedral group of order 24 as a permutation group),
-     Subgroup generated by [(2,12)(3,11)(4,10)(5,9)(6,8), (1,7)(2,8)(3,9)(4,10)(5,11)(6,12), (1,10,7,4)(2,11,8,5)(3,12,9,6)] of (Dihedral group of order 24 as a permutation group),
-     Subgroup generated by [(2,12)(3,11)(4,10)(5,9)(6,8), (1,3,5,7,9,11)(2,4,6,8,10,12), (1,5,9)(2,6,10)(3,7,11)(4,8,12)] of (Dihedral group of order 24 as a permutation group),
-     Subgroup generated by [(1,2,3,4,5,6,7,8,9,10,11,12), (1,3,5,7,9,11)(2,4,6,8,10,12), (1,5,9)(2,6,10)(3,7,11)(4,8,12)] of (Dihedral group of order 24 as a permutation group),
-     Subgroup generated by [(1,2)(3,12)(4,11)(5,10)(6,9)(7,8), (1,3,5,7,9,11)(2,4,6,8,10,12), (1,5,9)(2,6,10)(3,7,11)(4,8,12)] of (Dihedral group of order 24 as a permutation group),
-     Subgroup generated by [(2,12)(3,11)(4,10)(5,9)(6,8), (1,2,3,4,5,6,7,8,9,10,11,12), (1,3,5,7,9,11)(2,4,6,8,10,12), (1,5,9)(2,6,10)(3,7,11)(4,8,12)] of (Dihedral group of order 24 as a permutation group)]
+     Subgroup generated by [(1,5,9)(2,6,10)(3,7,11)(4,8,12), (1,3,5,7,9,11)(2,4,6,8,10,12)] of (Dihedral group of order 24 as a permutation group),
+     Subgroup generated by [(1,5,9)(2,6,10)(3,7,11)(4,8,12), (2,12)(3,11)(4,10)(5,9)(6,8)] of (Dihedral group of order 24 as a permutation group),
+     Subgroup generated by [(1,5,9)(2,6,10)(3,7,11)(4,8,12), (1,2)(3,12)(4,11)(5,10)(6,9)(7,8)] of (Dihedral group of order 24 as a permutation group),
+     Subgroup generated by [(2,12)(3,11)(4,10)(5,9)(6,8), (1,10,7,4)(2,11,8,5)(3,12,9,6), (1,7)(2,8)(3,9)(4,10)(5,11)(6,12)] of (Dihedral group of order 24 as a permutation group),
+     Subgroup generated by [(1,5,9)(2,6,10)(3,7,11)(4,8,12), (1,3,5,7,9,11)(2,4,6,8,10,12), (2,12)(3,11)(4,10)(5,9)(6,8)] of (Dihedral group of order 24 as a permutation group),
+     Subgroup generated by [(1,5,9)(2,6,10)(3,7,11)(4,8,12), (1,3,5,7,9,11)(2,4,6,8,10,12), (1,2,3,4,5,6,7,8,9,10,11,12)] of (Dihedral group of order 24 as a permutation group),
+     Subgroup generated by [(1,5,9)(2,6,10)(3,7,11)(4,8,12), (1,3,5,7,9,11)(2,4,6,8,10,12), (1,2)(3,12)(4,11)(5,10)(6,9)(7,8)] of (Dihedral group of order 24 as a permutation group),
+     Subgroup generated by [(1,5,9)(2,6,10)(3,7,11)(4,8,12), (1,3,5,7,9,11)(2,4,6,8,10,12), (2,12)(3,11)(4,10)(5,9)(6,8), (1,2,3,4,5,6,7,8,9,10,11,12)] of (Dihedral group of order 24 as a permutation group)]
 
     sage: print("An order two subgroup:\n{}".format(sg[1].list()))
     An order two subgroup:
diff --git a/src/sage/categories/finite_groups.py b/src/sage/categories/finite_groups.py
index f6866485e93..70cc029e389 100644
--- a/src/sage/categories/finite_groups.py
+++ b/src/sage/categories/finite_groups.py
@@ -48,7 +48,7 @@ class ParentMethods:
 
         def semigroup_generators(self):
             """
-            Returns semigroup generators for self.
+            Return semigroup generators for ``self``.
 
             For finite groups, the group generators are also semigroup
             generators. Hence, this default implementation calls
@@ -58,7 +58,7 @@ def semigroup_generators(self):
 
                 sage: A = AlternatingGroup(4)
                 sage: A.semigroup_generators()
-                Family ((2,3,4), (1,2,3))
+                Family ((1,2,3), (2,3,4))
             """
             return self.group_generators()
 
@@ -74,7 +74,7 @@ def monoid_generators(self):
 
                 sage: A = AlternatingGroup(4)
                 sage: A.monoid_generators()
-                Family ((2,3,4), (1,2,3))
+                Family ((1,2,3), (2,3,4))
             """
             return self.group_generators()
 
@@ -113,7 +113,7 @@ def some_elements(self):
 
                 sage: A = AlternatingGroup(4)
                 sage: A.some_elements()
-                Family ((2,3,4), (1,2,3))
+                Family ((1,2,3), (2,3,4))
             """
             return self.group_generators()
 
diff --git a/src/sage/categories/groups.py b/src/sage/categories/groups.py
index 445ba111c09..22f02ae4b30 100644
--- a/src/sage/categories/groups.py
+++ b/src/sage/categories/groups.py
@@ -102,7 +102,7 @@ def group_generators(self):
 
                 sage: A = AlternatingGroup(4)                                           # needs sage.groups
                 sage: A.group_generators()                                              # needs sage.groups
-                Family ((2,3,4), (1,2,3))
+                Family ((1,2,3), (2,3,4))
             """
             from sage.sets.family import Family
             try:
@@ -124,7 +124,7 @@ def monoid_generators(self):
                 sage: # needs sage.groups
                 sage: A = AlternatingGroup(4)
                 sage: A.monoid_generators()
-                Family ((2,3,4), (1,2,3))
+                Family ((1,2,3), (2,3,4))
                 sage: F.<x,y> = FreeGroup()
                 sage: F.monoid_generators()
                 Family (x, y, x^-1, y^-1)
diff --git a/src/sage/categories/monoids.py b/src/sage/categories/monoids.py
index 28474bd17b6..a4340621bbe 100644
--- a/src/sage/categories/monoids.py
+++ b/src/sage/categories/monoids.py
@@ -565,7 +565,7 @@ def algebra_generators(self):
 
                     sage: A10 = AlternatingGroup(10)                                    # needs sage.groups
                     sage: GroupAlgebras(QQ).example(A10).algebra_generators()           # needs sage.groups sage.modules
-                    Family ((8,9,10), (1,2,3,4,5,6,7,8,9))
+                    Family ((1,2,3,4,5,6,7,8,9), (8,9,10))
 
                     sage: A = DihedralGroup(3).algebra(QQ); A                           # needs sage.groups sage.modules
                     Algebra of Dihedral group of order 6 as a permutation group
diff --git a/src/sage/groups/abelian_gps/abelian_group.py b/src/sage/groups/abelian_gps/abelian_group.py
index bbe793b3625..f98bfe0cde5 100644
--- a/src/sage/groups/abelian_gps/abelian_group.py
+++ b/src/sage/groups/abelian_gps/abelian_group.py
@@ -1132,7 +1132,7 @@ def permutation_group(self):
             sage: G = AbelianGroup(2,[2,3]); G
             Multiplicative Abelian group isomorphic to C2 x C3
             sage: G.permutation_group()                                                 # needs sage.groups
-            Permutation Group with generators [(3,4,5), (1,2)]
+            Permutation Group with generators [(1,2), (3,4,5)]
 
         TESTS:
 
diff --git a/src/sage/groups/abelian_gps/abelian_group_element.py b/src/sage/groups/abelian_gps/abelian_group_element.py
index 6ae81844f98..b081f1e1c4e 100644
--- a/src/sage/groups/abelian_gps/abelian_group_element.py
+++ b/src/sage/groups/abelian_gps/abelian_group_element.py
@@ -101,7 +101,7 @@ def as_permutation(self):
             Multiplicative Abelian group isomorphic to C2 x C3 x C4
             sage: a,b,c = G.gens()
             sage: Gp = G.permutation_group(); Gp                                        # needs sage.groups
-            Permutation Group with generators [(6,7,8,9), (3,4,5), (1,2)]
+            Permutation Group with generators [(1,2), (3,4,5), (6,7,8,9)]
             sage: a.as_permutation()                                                    # needs sage.libs.gap
             (1,2)
             sage: ap = a.as_permutation(); ap                                           # needs sage.libs.gap
diff --git a/src/sage/groups/additive_abelian/additive_abelian_group.py b/src/sage/groups/additive_abelian/additive_abelian_group.py
index c0a90f0c110..5f389fcfb81 100644
--- a/src/sage/groups/additive_abelian/additive_abelian_group.py
+++ b/src/sage/groups/additive_abelian/additive_abelian_group.py
@@ -451,7 +451,7 @@ def permutation_group(self):
 
             sage: G = AdditiveAbelianGroup([2, 3])
             sage: G.permutation_group()                                                 # needs sage.groups
-            Permutation Group with generators [(3,4,5), (1,2)]
+            Permutation Group with generators [(1,2), (3,4,5)]
 
         TESTS:
 
diff --git a/src/sage/groups/class_function.py b/src/sage/groups/class_function.py
index e390cbbf288..901b0083b49 100644
--- a/src/sage/groups/class_function.py
+++ b/src/sage/groups/class_function.py
@@ -717,7 +717,7 @@ def restrict(self, H):
             Character of Symmetric group of order 5! as a permutation group
             sage: H = G.subgroup([(1,2,3), (1,2), (4,5)])
             sage: chi.restrict(H)
-            Character of Subgroup generated by [(4,5), (1,2), (1,2,3)] of
+            Character of Subgroup generated by [(1,2,3), (1,2), (4,5)] of
              (Symmetric group of order 5! as a permutation group)
             sage: chi.restrict(H).values()
             [3, -3, -3, -1, 0, 0]
@@ -744,7 +744,7 @@ def induct(self, G):
             sage: G = SymmetricGroup(5)
             sage: H = G.subgroup([(1,2,3), (1,2), (4,5)])
             sage: xi = H.trivial_character(); xi
-            Character of Subgroup generated by [(4,5), (1,2), (1,2,3)] of
+            Character of Subgroup generated by [(1,2,3), (1,2), (4,5)] of
              (Symmetric group of order 5! as a permutation group)
             sage: xi.induct(G)
             Character of Symmetric group of order 5! as a permutation group
@@ -1425,7 +1425,7 @@ def restrict(self, H):
             Character of Symmetric group of order 5! as a permutation group
             sage: H = G.subgroup([(1,2,3), (1,2), (4,5)])
             sage: chi.restrict(H)
-            Character of Subgroup generated by [(4,5), (1,2), (1,2,3)] of
+            Character of Subgroup generated by [(1,2,3), (1,2), (4,5)] of
              (Symmetric group of order 5! as a permutation group)
             sage: chi.restrict(H).values()
             [3, -3, -3, -1, 0, 0]
@@ -1457,7 +1457,7 @@ def induct(self, G):
             sage: G = SymmetricGroup(5)
             sage: H = G.subgroup([(1,2,3), (1,2), (4,5)])
             sage: xi = H.trivial_character(); xi
-            Character of Subgroup generated by [(4,5), (1,2), (1,2,3)] of
+            Character of Subgroup generated by [(1,2,3), (1,2), (4,5)] of
              (Symmetric group of order 5! as a permutation group)
             sage: xi.induct(G)
             Character of Symmetric group of order 5! as a permutation group
diff --git a/src/sage/groups/perm_gps/permgroup.py b/src/sage/groups/perm_gps/permgroup.py
index 208758282b2..4ee53ba4f06 100644
--- a/src/sage/groups/perm_gps/permgroup.py
+++ b/src/sage/groups/perm_gps/permgroup.py
@@ -478,6 +478,26 @@ def __init__(self, gens=None, gap_group=None, canonicalize=True,
             sage: TestSuite(PermutationGroup([[]])).run()
             sage: TestSuite(PermutationGroup([])).run()
             sage: TestSuite(PermutationGroup([(0,1)])).run()
+
+        Check that :issue:`37590` is fixed::
+
+            sage: lgg = libgap.eval("Group((1,2,3,4,5),(4,5,6))")
+            sage: P = PermutationGroup(gap_group=lgg)
+            sage: h = P.hom(codomain=P, im_gens=P.gens())
+            sage: h
+            Group endomorphism of Permutation Group with generators [(1,2,3,4,5), (4,5,6)]
+            sage: P.gens()
+            ((1,2,3,4,5), (4,5,6))
+            sage: P.gap().GeneratorsOfGroup()
+            [ (1,2,3,4,5), (4,5,6) ]
+
+            sage: gg = gap.eval("Group((1,2,3,4,5),(4,5,6))")
+            sage: P = PermutationGroup(gap_group=gg)
+            sage: P.gens()
+            ((1,2,3,4,5), (4,5,6))
+            sage: h = P.hom(codomain=P, im_gens=P.gens())
+            sage: h
+            Group endomorphism of Permutation Group with generators [(1,2,3,4,5), (4,5,6)]
         """
         if (gens is None and gap_group is None):
             raise ValueError("you must specify gens or gap_group")
@@ -496,6 +516,7 @@ def __init__(self, gens=None, gap_group=None, canonicalize=True,
 
         if isinstance(gap_group, LibGapElement):
             self._libgap = gap_group
+            canonicalize = False
 
         # Handle the case where only the GAP group is specified.
         if gens is None:
@@ -1828,7 +1849,7 @@ def stabilizer(self, point, action="OnPoints"):
 
             sage: G = PermutationGroup([[(1,2),(3,4)], [(1,2,3,4,10)]])
             sage: G.stabilizer(10)
-            Subgroup generated by [(2,3,4), (1,2)(3,4)] of (Permutation Group with generators [(1,2)(3,4), (1,2,3,4,10)])
+            Subgroup generated by [(1,2)(3,4), (2,3,4)] of (Permutation Group with generators [(1,2)(3,4), (1,2,3,4,10)])
             sage: G.stabilizer(1) == G.subgroup(['(2,3)(4,10)', '(2,10,3)'])
             True
             sage: G = PermutationGroup([[(2,3,4)],[(6,7)]])
@@ -2430,7 +2451,6 @@ def fitting_subgroup(self):
             sage: G.fitting_subgroup()
             Subgroup generated by [(1,2)(3,4), (1,3)(2,4)] of
              (Permutation Group with generators [(1,2), (1,2,3,4)])
-
         """
         return self.subgroup(gap_group=self._libgap_().FittingSubgroup())
 
@@ -2445,7 +2465,7 @@ def solvable_radical(self):
 
             sage: G = SymmetricGroup(4)
             sage: G.solvable_radical()
-            Subgroup generated by [(1,2), (1,2,3,4)] of
+            Subgroup generated by [(1,2,3,4), (1,2)] of
              (Symmetric group of order 4! as a permutation group)
             sage: G = SymmetricGroup(5)
             sage: G.solvable_radical()
@@ -2581,7 +2601,7 @@ def conjugate(self, g):
             sage: G = DihedralGroup(6)
             sage: a = PermutationGroupElement("(1,2,3,4)")
             sage: G.conjugate(a)
-            Permutation Group with generators [(1,4)(2,6)(3,5), (1,5,6,2,3,4)]
+            Permutation Group with generators [(1,5,6,2,3,4), (1,4)(2,6)(3,5)]
 
         The element performing the conjugation can be specified in
         several ways.  ::
@@ -2589,15 +2609,15 @@ def conjugate(self, g):
             sage: G = DihedralGroup(6)
             sage: strng = "(1,2,3,4)"
             sage: G.conjugate(strng)
-            Permutation Group with generators [(1,4)(2,6)(3,5), (1,5,6,2,3,4)]
+            Permutation Group with generators [(1,5,6,2,3,4), (1,4)(2,6)(3,5)]
             sage: G = DihedralGroup(6)
             sage: lst = [2,3,4,1]
             sage: G.conjugate(lst)
-            Permutation Group with generators [(1,4)(2,6)(3,5), (1,5,6,2,3,4)]
+            Permutation Group with generators [(1,5,6,2,3,4), (1,4)(2,6)(3,5)]
             sage: G = DihedralGroup(6)
             sage: cycles = [(1,2,3,4)]
             sage: G.conjugate(cycles)
-            Permutation Group with generators [(1,4)(2,6)(3,5), (1,5,6,2,3,4)]
+            Permutation Group with generators [(1,5,6,2,3,4), (1,4)(2,6)(3,5)]
 
         Conjugation is a group automorphism, so conjugate groups
         will be isomorphic. ::
@@ -2671,24 +2691,24 @@ def direct_product(self, other, maps=True):
 
             sage: G = CyclicPermutationGroup(4)
             sage: D = G.direct_product(G, False); D
-            Permutation Group with generators [(5,6,7,8), (1,2,3,4)]
+            Permutation Group with generators [(1,2,3,4), (5,6,7,8)]
             sage: D,iota1,iota2,pr1,pr2 = G.direct_product(G)
             sage: D; iota1; iota2; pr1; pr2
-            Permutation Group with generators [(5,6,7,8), (1,2,3,4)]
+            Permutation Group with generators [(1,2,3,4), (5,6,7,8)]
             Permutation group morphism:
               From: Cyclic group of order 4 as a permutation group
-              To:   Permutation Group with generators [(5,6,7,8), (1,2,3,4)]
+              To:   Permutation Group with generators [(1,2,3,4), (5,6,7,8)]
               Defn: Embedding( Group( [ (1,2,3,4), (5,6,7,8) ] ), 1 )
             Permutation group morphism:
               From: Cyclic group of order 4 as a permutation group
-              To:   Permutation Group with generators [(5,6,7,8), (1,2,3,4)]
+              To:   Permutation Group with generators [(1,2,3,4), (5,6,7,8)]
               Defn: Embedding( Group( [ (1,2,3,4), (5,6,7,8) ] ), 2 )
             Permutation group morphism:
-              From: Permutation Group with generators [(5,6,7,8), (1,2,3,4)]
+              From: Permutation Group with generators [(1,2,3,4), (5,6,7,8)]
               To:   Cyclic group of order 4 as a permutation group
               Defn: Projection( Group( [ (1,2,3,4), (5,6,7,8) ] ), 1 )
             Permutation group morphism:
-              From: Permutation Group with generators [(5,6,7,8), (1,2,3,4)]
+              From: Permutation Group with generators [(1,2,3,4), (5,6,7,8)]
               To:   Cyclic group of order 4 as a permutation group
               Defn: Projection( Group( [ (1,2,3,4), (5,6,7,8) ] ), 2 )
             sage: g = D([(1,3),(2,4)]); g
@@ -2934,7 +2954,7 @@ def holomorph(self):
             sage: D4 = DihedralGroup(4)
             sage: H = D4.holomorph()
             sage: H.gens()
-            ((3,8)(4,7), (2,3,5,8), (2,5)(3,8), (1,4,6,7)(2,3,5,8), (1,8)(2,7)(3,6)(4,5))
+            ((2,3,5,8), (2,5)(3,8), (3,8)(4,7), (1,4,6,7)(2,3,5,8), (1,8)(2,7)(3,6)(4,5))
             sage: G = H.subgroup([H.gens()[0],H.gens()[1],H.gens()[2]])
             sage: N = H.subgroup([H.gens()[3],H.gens()[4]])
             sage: N.is_normal(H)
@@ -2954,7 +2974,6 @@ def holomorph(self):
 
         - Kevin Halasz (2012-08-14)
         """
-
         libgap.eval('G := Group({})'.format(list(self.gens())))
         libgap.eval('aut := AutomorphismGroup(G)')
         libgap.eval('alpha := InverseGeneralMapping(NiceMonomorphism(aut))')
@@ -3137,7 +3156,7 @@ def quotient(self, N, **kwds):
             sage: G.quotient(N)
             Permutation Group with generators [(1,2)]
             sage: G.quotient(G)
-            Permutation Group with generators [()]
+            Permutation Group with generators [(), ()]
         """
         Q = self._libgap_() / N._libgap_()
         # Return Q as a permutation group
@@ -3599,13 +3618,13 @@ def conjugacy_classes_subgroups(self):
               (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)]),
              Subgroup generated by [(2,4)] of
               (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)]),
-             Subgroup generated by [(1,2)(3,4), (1,4)(2,3)] of
+             Subgroup generated by [(1,4)(2,3), (1,2)(3,4)] of
               (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)]),
              Subgroup generated by [(2,4), (1,3)(2,4)] of
               (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)]),
              Subgroup generated by [(1,2,3,4), (1,3)(2,4)] of
               (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)]),
-             Subgroup generated by [(2,4), (1,2)(3,4), (1,4)(2,3)] of
+             Subgroup generated by [(1,4)(2,3), (1,2)(3,4), (2,4)] of
               (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)])]
 
         ::
@@ -3618,7 +3637,7 @@ def conjugacy_classes_subgroups(self):
               (Symmetric group of order 3! as a permutation group),
              Subgroup generated by [(1,2,3)] of
               (Symmetric group of order 3! as a permutation group),
-             Subgroup generated by [(2,3), (1,2,3)] of
+             Subgroup generated by [(1,2,3), (2,3)] of
               (Symmetric group of order 3! as a permutation group)]
 
         AUTHORS:
@@ -3640,7 +3659,7 @@ def subgroups(self):
         with one element on through up to the whole group.
         Conjugacy classes of subgroups are contiguous in the list.
 
-        .. warning::
+        .. WARNING::
 
             For even relatively small groups this method can
             take a very long time to execute, or create vast
@@ -3671,7 +3690,7 @@ def subgroups(self):
               (Symmetric group of order 3! as a permutation group),
              Subgroup generated by [(1,2,3)] of
               (Symmetric group of order 3! as a permutation group),
-             Subgroup generated by [(2,3), (1,2,3)] of
+             Subgroup generated by [(1,2,3), (2,3)] of
               (Symmetric group of order 3! as a permutation group)]
 
             sage: G = CyclicPermutationGroup(14)
@@ -3682,8 +3701,8 @@ def subgroups(self):
               (Cyclic group of order 14 as a permutation group),
              Subgroup generated by [(1,3,5,7,9,11,13)(2,4,6,8,10,12,14)] of
               (Cyclic group of order 14 as a permutation group),
-             Subgroup generated by [(1,2,3,4,5,6,7,8,9,10,11,12,13,14),
-                                    (1,3,5,7,9,11,13)(2,4,6,8,10,12,14)] of
+             Subgroup generated by [(1,3,5,7,9,11,13)(2,4,6,8,10,12,14),
+                                    (1,2,3,4,5,6,7,8,9,10,11,12,13,14)] of
               (Cyclic group of order 14 as a permutation group)]
 
         AUTHOR:
@@ -4049,15 +4068,15 @@ def normalizer(self, g):
             sage: G = PermutationGroup([[(1,2),(3,4)], [(1,2,3,4)]])
             sage: g = G([(1,3)])
             sage: G.normalizer(g)
-            Subgroup generated by [(2,4), (1,3)] of
+            Subgroup generated by [(1,3), (2,4)] of
              (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)])
             sage: g = G([(1,2,3,4)])
             sage: G.normalizer(g)
-            Subgroup generated by [(2,4), (1,2,3,4), (1,3)(2,4)] of
+            Subgroup generated by  [(1,2,3,4), (1,3)(2,4), (2,4)] of
              (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)])
             sage: H = G.subgroup([G([(1,2,3,4)])])
             sage: G.normalizer(H)
-            Subgroup generated by [(2,4), (1,2,3,4), (1,3)(2,4)] of
+            Subgroup generated by [(1,2,3,4), (1,3)(2,4), (2,4)] of
              (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)])
         """
         return self.subgroup(gap_group=self._libgap_().Normalizer(g))
@@ -4071,7 +4090,7 @@ def centralizer(self, g):
             sage: G = PermutationGroup([[(1,2),(3,4)], [(1,2,3,4)]])
             sage: g = G([(1,3)])
             sage: G.centralizer(g)
-            Subgroup generated by [(2,4), (1,3)] of
+            Subgroup generated by [(1,3), (2,4)] of
              (Permutation Group with generators [(1,2)(3,4), (1,2,3,4)])
             sage: g = G([(1,2,3,4)])
             sage: G.centralizer(g)
@@ -4715,7 +4734,7 @@ def composition_series(self):
             sage: G.composition_series()
             [Subgroup generated by [(3,4), (1,2,3)(4,5)] of
               (Permutation Group with generators [(3,4), (1,2,3)(4,5)]),
-             Subgroup generated by [(1,3,5), (1,5)(3,4), (1,5)(2,4)] of
+             Subgroup generated by [(1,5)(3,4), (1,5)(2,4), (1,3,5)] of
               (Permutation Group with generators [(3,4), (1,2,3)(4,5)]),
              Subgroup generated by [()] of
               (Permutation Group with generators [(3,4), (1,2,3)(4,5)])]
@@ -4746,7 +4765,7 @@ def derived_series(self):
             sage: G.derived_series()
             [Subgroup generated by [(3,4), (1,2,3)(4,5)] of
               (Permutation Group with generators [(3,4), (1,2,3)(4,5)]),
-             Subgroup generated by [(1,3,5), (1,5)(3,4), (1,5)(2,4)] of
+             Subgroup generated by [(1,5)(3,4), (1,5)(2,4), (1,3,5)] of
               (Permutation Group with generators [(3,4), (1,2,3)(4,5)])]
         """
         libgap.set_seed()
@@ -4770,7 +4789,7 @@ def lower_central_series(self):
             sage: G.lower_central_series()
             [Subgroup generated by [(3,4), (1,2,3)(4,5)] of
               (Permutation Group with generators [(3,4), (1,2,3)(4,5)]),
-             Subgroup generated by [(1,3,5), (1,5)(3,4), (1,5)(2,4)] of
+             Subgroup generated by [(1,5)(3,4), (1,5)(2,4), (1,3,5)] of
               (Permutation Group with generators [(3,4), (1,2,3)(4,5)])]
         """
         libgap.set_seed()
@@ -5123,7 +5142,8 @@ def __richcmp__(self, other, op):
             sage: G
             Symmetric group of order 6! as a permutation group
             sage: G3
-            Subgroup generated by [(1,2), (1,2,3,4,5,6)] of (Symmetric group of order 6! as a permutation group)
+            Subgroup generated by [(1,2,3,4,5,6), (1,2)] of
+             (Symmetric group of order 6! as a permutation group)
             sage: G is G3
             False
             sage: G == G3 # as permutation groups
diff --git a/src/sage/groups/perm_gps/permgroup_named.py b/src/sage/groups/perm_gps/permgroup_named.py
index 222ee36f6da..6b42e654234 100644
--- a/src/sage/groups/perm_gps/permgroup_named.py
+++ b/src/sage/groups/perm_gps/permgroup_named.py
@@ -449,7 +449,7 @@ def young_subgroup(self, comp):
             sage: S = SymmetricGroup(8)
             sage: c = Composition([2,2,2,2])
             sage: S.young_subgroup(c)
-            Subgroup generated by [(7,8), (5,6), (3,4), (1,2)] of
+            Subgroup generated by [(1,2), (3,4), (5,6), (7,8)] of
              (Symmetric group of order 8! as a permutation group)
 
             sage: S = SymmetricGroup(['a','b','c'])
@@ -706,6 +706,16 @@ def __init__(self, domain=None):
 
             sage: groups.permutation.Alternating(6)
             Alternating group of order 6!/2 as a permutation group
+
+        Check that alternating groups have their generators in the correct
+        order (:issue:`37590`)::
+
+            sage: A = AlternatingGroup(6)
+            sage: A.gens()
+            ((1,2,3,4,5), (4,5,6))
+            sage: A.gap().GeneratorsOfGroup()
+            [ (1,2,3,4,5), (4,5,6) ]
+            sage: h = A.hom(codomain=A, im_gens=A.gens())
         """
         PermutationGroup_symalt.__init__(self, gap_group='AlternatingGroup(%s)' % len(domain), domain=domain)
 
@@ -3084,8 +3094,8 @@ def __init__(self, q, name='a'):
         EXAMPLES::
 
             sage: SuzukiGroup(8)                                                        # needs sage.rings.finite_rings
-            Permutation Group with generators [(1,2)(3,10)(4,42)(5,18)(6,50)(7,26)(8,58)(9,34)(12,28)(13,45)(14,44)(15,23)(16,31)(17,21)(19,39)(20,38)(22,25)(24,61)(27,60)(29,65)(30,55)(32,33)(35,52)(36,49)(37,59)(40,54)(41,62)(43,53)(46,48)(47,56)(51,63)(57,64),
-            (1,28,10,44)(3,50,11,42)(4,43,53,64)(5,9,39,52)(6,36,63,13)(7,51,60,57)(8,33,37,16)(12,24,55,29)(14,30,48,47)(15,19,61,54)(17,59,22,62)(18,23,34,31)(20,38,49,25)(21,26,45,58)(27,32,41,65)(35,46,40,56)]
+            Permutation Group with generators [(1,28,10,44)(3,50,11,42)(4,43,53,64)(5,9,39,52)(6,36,63,13)(7,51,60,57)(8,33,37,16)(12,24,55,29)(14,30,48,47)(15,19,61,54)(17,59,22,62)(18,23,34,31)(20,38,49,25)(21,26,45,58)(27,32,41,65)(35,46,40,56),
+             (1,2)(3,10)(4,42)(5,18)(6,50)(7,26)(8,58)(9,34)(12,28)(13,45)(14,44)(15,23)(16,31)(17,21)(19,39)(20,38)(22,25)(24,61)(27,60)(29,65)(30,55)(32,33)(35,52)(36,49)(37,59)(40,54)(41,62)(43,53)(46,48)(47,56)(51,63)(57,64)]
             sage: print(SuzukiGroup(8))                                                 # needs sage.rings.finite_rings
             The Suzuki group over Finite Field in a of size 2^3
 
@@ -3101,8 +3111,8 @@ def __init__(self, q, name='a'):
         TESTS::
 
             sage: groups.permutation.Suzuki(8)                                          # needs sage.rings.finite_rings
-            Permutation Group with generators [(1,2)(3,10)(4,42)(5,18)(6,50)(7,26)(8,58)(9,34)(12,28)(13,45)(14,44)(15,23)(16,31)(17,21)(19,39)(20,38)(22,25)(24,61)(27,60)(29,65)(30,55)(32,33)(35,52)(36,49)(37,59)(40,54)(41,62)(43,53)(46,48)(47,56)(51,63)(57,64),
-            (1,28,10,44)(3,50,11,42)(4,43,53,64)(5,9,39,52)(6,36,63,13)(7,51,60,57)(8,33,37,16)(12,24,55,29)(14,30,48,47)(15,19,61,54)(17,59,22,62)(18,23,34,31)(20,38,49,25)(21,26,45,58)(27,32,41,65)(35,46,40,56)]
+            Permutation Group with generators [(1,28,10,44)(3,50,11,42)(4,43,53,64)(5,9,39,52)(6,36,63,13)(7,51,60,57)(8,33,37,16)(12,24,55,29)(14,30,48,47)(15,19,61,54)(17,59,22,62)(18,23,34,31)(20,38,49,25)(21,26,45,58)(27,32,41,65)(35,46,40,56),
+             (1,2)(3,10)(4,42)(5,18)(6,50)(7,26)(8,58)(9,34)(12,28)(13,45)(14,44)(15,23)(16,31)(17,21)(19,39)(20,38)(22,25)(24,61)(27,60)(29,65)(30,55)(32,33)(35,52)(36,49)(37,59)(40,54)(41,62)(43,53)(46,48)(47,56)(51,63)(57,64)]
 
         REFERENCES:
 
diff --git a/src/sage/rings/polynomial/polynomial_rational_flint.pyx b/src/sage/rings/polynomial/polynomial_rational_flint.pyx
index 1ef3cbaf681..805bb9fe8ae 100644
--- a/src/sage/rings/polynomial/polynomial_rational_flint.pyx
+++ b/src/sage/rings/polynomial/polynomial_rational_flint.pyx
@@ -2116,7 +2116,7 @@ cdef class Polynomial_rational_flint(Polynomial):
             sage: G = f.galois_group(); G
             Transitive group number 5 of degree 4
             sage: G.gens()
-            ((1,2), (1,2,3,4))
+            ((1,2,3,4), (1,2))
             sage: G.order()
             24
 
diff --git a/src/sage/tests/books/judson-abstract-algebra/cosets-sage.py b/src/sage/tests/books/judson-abstract-algebra/cosets-sage.py
index 25efca28dce..028dd8cb33c 100644
--- a/src/sage/tests/books/judson-abstract-algebra/cosets-sage.py
+++ b/src/sage/tests/books/judson-abstract-algebra/cosets-sage.py
@@ -95,7 +95,7 @@
      Subgroup generated by [(1,2)] of (Symmetric group of order 3! as a permutation group),
      Subgroup generated by [(1,3)] of (Symmetric group of order 3! as a permutation group),
      Subgroup generated by [(1,2,3)] of (Symmetric group of order 3! as a permutation group),
-     Subgroup generated by [(2,3), (1,2,3)] of (Symmetric group of order 3! as a permutation group)]
+     Subgroup generated by [(1,2,3), (2,3)] of (Symmetric group of order 3! as a permutation group)]
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
 
diff --git a/src/sage/tests/books/judson-abstract-algebra/galois-sage.py b/src/sage/tests/books/judson-abstract-algebra/galois-sage.py
index 036b0a390c0..b1ecf0d8d48 100644
--- a/src/sage/tests/books/judson-abstract-algebra/galois-sage.py
+++ b/src/sage/tests/books/judson-abstract-algebra/galois-sage.py
@@ -271,10 +271,10 @@
      ((1,4),),
      ((1,2)(3,4),),
      ((1,3)(2,4),),
-     ((2,3), (1,4)(2,3)),
-     ((1,2,4,3), (1,4)(2,3)),
-     ((1,2)(3,4), (1,4)(2,3)),
-     ((2,3), (1,2,4,3), (1,4)(2,3))]
+     ((1,4)(2,3), (2,3)),
+     ((1,4)(2,3), (1,2,4,3)),
+     ((1,4)(2,3), (1,2)(3,4)),
+     ((1,4)(2,3), (2,3), (1,2,4,3))]
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
 
diff --git a/src/sage/tests/books/judson-abstract-algebra/homomorph-sage.py b/src/sage/tests/books/judson-abstract-algebra/homomorph-sage.py
index abff8d3189c..dbc7bca8d96 100644
--- a/src/sage/tests/books/judson-abstract-algebra/homomorph-sage.py
+++ b/src/sage/tests/books/judson-abstract-algebra/homomorph-sage.py
@@ -164,15 +164,14 @@
     sage: H = DihedralGroup(4)
     sage: results = G.direct_product(H)
     sage: results[0]
-    Permutation Group with generators [(4,5,6,7), (4,7)(5,6), (1,2,3)]
+    Permutation Group with generators [(1,2,3), (4,5,6,7), (4,7)(5,6)]
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
 
     sage: results[1]
     Permutation group morphism:
       From: Cyclic group of order 3 as a permutation group
-      To:   Permutation Group with generators
-            [(4,5,6,7), (4,7)(5,6), (1,2,3)]
+      To:   Permutation Group with generators [(1,2,3), (4,5,6,7), (4,7)(5,6)]
       Defn: Embedding( Group( [ (1,2,3), (4,5,6,7), (4,7)(5,6) ] ), 1 )
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
@@ -180,16 +179,14 @@
     sage: results[2]
     Permutation group morphism:
       From: Dihedral group of order 8 as a permutation group
-      To:   Permutation Group with generators
-            [(4,5,6,7), (4,7)(5,6), (1,2,3)]
+      To:   Permutation Group with generators [(1,2,3), (4,5,6,7), (4,7)(5,6)]
       Defn: Embedding( Group( [ (1,2,3), (4,5,6,7), (4,7)(5,6) ] ), 2 )
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
 
     sage: results[3]
     Permutation group morphism:
-      From: Permutation Group with generators
-            [(4,5,6,7), (4,7)(5,6), (1,2,3)]
+      From: Permutation Group with generators [(1,2,3), (4,5,6,7), (4,7)(5,6)]
       To:   Cyclic group of order 3 as a permutation group
       Defn: Projection( Group( [ (1,2,3), (4,5,6,7), (4,7)(5,6) ] ), 1 )
 
@@ -197,8 +194,7 @@
 
     sage: results[4]
     Permutation group morphism:
-      From: Permutation Group with generators
-            [(4,5,6,7), (4,7)(5,6), (1,2,3)]
+      From: Permutation Group with generators [(1,2,3), (4,5,6,7), (4,7)(5,6)]
       To:   Dihedral group of order 8 as a permutation group
       Defn: Projection( Group( [ (1,2,3), (4,5,6,7), (4,7)(5,6) ] ), 2 )
 
diff --git a/src/sage/tests/books/judson-abstract-algebra/sylow-sage.py b/src/sage/tests/books/judson-abstract-algebra/sylow-sage.py
index 0051f206528..cd78b147ca3 100644
--- a/src/sage/tests/books/judson-abstract-algebra/sylow-sage.py
+++ b/src/sage/tests/books/judson-abstract-algebra/sylow-sage.py
@@ -65,12 +65,12 @@
     sage: uniqS2
     [Permutation Group with generators [(2,18)(3,17)(4,16)(5,15)(6,14)(7,13)(8,12)(9,11), (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
      Permutation Group with generators [(1,7)(2,6)(3,5)(8,18)(9,17)(10,16)(11,15)(12,14), (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
-     Permutation Group with generators [(1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18), (1,13)(2,12)(3,11)(4,10)(5,9)(6,8)(14,18)(15,17)],
-     Permutation Group with generators [(1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18), (1,15)(2,14)(3,13)(4,12)(5,11)(6,10)(7,9)(16,18)],
+     Permutation Group with generators [(1,13)(2,12)(3,11)(4,10)(5,9)(6,8)(14,18)(15,17), (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
+     Permutation Group with generators [(1,15)(2,14)(3,13)(4,12)(5,11)(6,10)(7,9)(16,18), (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
      Permutation Group with generators [(1,3)(4,18)(5,17)(6,16)(7,15)(8,14)(9,13)(10,12), (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
      Permutation Group with generators [(1,9)(2,8)(3,7)(4,6)(10,18)(11,17)(12,16)(13,15), (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
-     Permutation Group with generators [(1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18), (1,11)(2,10)(3,9)(4,8)(5,7)(12,18)(13,17)(14,16)],
-     Permutation Group with generators [(1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18), (1,17)(2,16)(3,15)(4,14)(5,13)(6,12)(7,11)(8,10)],
+     Permutation Group with generators [(1,11)(2,10)(3,9)(4,8)(5,7)(12,18)(13,17)(14,16), (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
+     Permutation Group with generators [(1,17)(2,16)(3,15)(4,14)(5,13)(6,12)(7,11)(8,10), (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
      Permutation Group with generators [(1,5)(2,4)(6,18)(7,17)(8,16)(9,15)(10,14)(11,13), (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)]]
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
@@ -83,8 +83,8 @@
     sage: G = DihedralGroup(18)
     sage: S3 = G.sylow_subgroup(3); S3
     Subgroup generated by
-    [(1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18),
-     (1,15,11,7,3,17,13,9,5)(2,16,12,8,4,18,14,10,6)]
+    [(1,15,11,7,3,17,13,9,5)(2,16,12,8,4,18,14,10,6),
+     (1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18)]
     of (Dihedral group of order 36 as a permutation group)
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
@@ -92,8 +92,8 @@
     sage: uniqS3 = all_sylow(G, 3)
     sage: uniqS3
     [Permutation Group with generators
-    [(1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18),
-    (1,15,11,7,3,17,13,9,5)(2,16,12,8,4,18,14,10,6)]]
+     [(1,15,11,7,3,17,13,9,5)(2,16,12,8,4,18,14,10,6),
+      (1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18)]]
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
 
@@ -117,8 +117,8 @@
     sage: S3 = G.sylow_subgroup(3)
     sage: N2 = G.normalizer(S2); N2
     Subgroup generated by
-    [(2,18)(3,17)(4,16)(5,15)(6,14)(7,13)(8,12)(9,11),
-     (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)]
+    [(1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18),
+     (2,18)(3,17)(4,16)(5,15)(6,14)(7,13)(8,12)(9,11)]
     of (Dihedral group of order 36 as a permutation group)
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
@@ -129,11 +129,12 @@
 ~~~~~~~~~~~~~~~~~~~~~~ ::
 
     sage: N3 = G.normalizer(S3); N3
-    Subgroup generated by [(2,18)(3,17)(4,16)(5,15)(6,14)(7,13)(8,12)(9,11),
-    (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
-    (1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18),
-    (1,15,11,7,3,17,13,9,5)(2,16,12,8,4,18,14,10,6)] of (Dihedral group of
-    order 36 as a permutation group)
+    Subgroup generated by
+    [(1,15,11,7,3,17,13,9,5)(2,16,12,8,4,18,14,10,6),
+     (1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18),
+     (2,18)(3,17)(4,16)(5,15)(6,14)(7,13)(8,12)(9,11),
+     (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)]
+    of (Dihedral group of order 36 as a permutation group)
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
 
@@ -154,10 +155,10 @@
     sage: N = G.normalizer(H)
     sage: N
     Subgroup generated by
-    [(1,2)(3,18)(4,17)(5,16)(6,15)(7,14)(8,13)(9,12)(10,11),
-    (1,5)(2,4)(6,18)(7,17)(8,16)(9,15)(10,14)(11,13),
-    (1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18)] of (Dihedral group of
-    order 36 as a permutation group)
+    [(1,5)(2,4)(6,18)(7,17)(8,16)(9,15)(10,14)(11,13),
+     (1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18),
+     (1,2)(3,18)(4,17)(5,16)(6,15)(7,14)(8,13)(9,12)(10,11)]
+    of (Dihedral group of order 36 as a permutation group)
 
 ~~~~~~~~~~~~~~~~~~~~~~ ::
 
