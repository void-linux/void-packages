diff --git a/src/sage/calculus/desolvers.py b/src/sage/calculus/desolvers.py
index 55ed3a0fe10..4cfa22a97e4 100644
--- a/src/sage/calculus/desolvers.py
+++ b/src/sage/calculus/desolvers.py
@@ -1598,7 +1598,7 @@ def desolve_odeint(des, ics, times, dvars, ivar=None, compute_jac=False, args=()
         sage: ic=epsilon
         sage: t=srange(0,2/epsilon,1)
         sage: sol=desolve_odeint(f,ic,t,y,rtol=1e-9,atol=1e-10,compute_jac=True)
-        sage: p=points(zip(t,sol))
+        sage: p=points(zip(t,sol[:,0]))
         sage: p.show()
 
     Another stiff system with some optional parameters with no
@@ -1637,7 +1637,7 @@ def desolve_odeint_inner(ivar):
                 J = fast_float(J, dvar, ivar)
 
                 def Dfun(y, t):
-                    return [J(y, t)]
+                    return [J(y.item(), t)]
 
         # n-dimensional systems:
         else:
diff --git a/src/sage/matrix/matrix2.pyx b/src/sage/matrix/matrix2.pyx
index d5402d5c3b0..a00912951c5 100644
--- a/src/sage/matrix/matrix2.pyx
+++ b/src/sage/matrix/matrix2.pyx
@@ -430,12 +430,12 @@ cdef class Matrix(Matrix1):
             try:
                 return self.transpose().solve_right(B, check=check)
             except ValueError as e:
-                raise ValueError(str(e).replace('row', 'column'))
+                raise e.__class__(str(e).replace('row', 'column'))
         else:
             try:
                 return self.transpose().solve_right(B.transpose(), check=check).transpose()
             except ValueError as e:
-                raise ValueError(str(e).replace('row', 'column'))
+                raise e.__class__(str(e).replace('row', 'column'))
 
     def solve_right(self, B, check=True):
         r"""
diff --git a/src/sage/matrix/matrix_numpy_dense.pyx b/src/sage/matrix/matrix_numpy_dense.pyx
index 5b75ed133ff..17867f9a65c 100644
--- a/src/sage/matrix/matrix_numpy_dense.pyx
+++ b/src/sage/matrix/matrix_numpy_dense.pyx
@@ -382,8 +382,9 @@ cdef class Matrix_numpy_dense(Matrix_dense):
             sage: m = matrix(RDF,[[1,2],[3,4]])
             sage: n = m.numpy()
             sage: import numpy
-            sage: numpy.linalg.eig(n)
-            (array([-0.37228132,  5.37228132]), array([[-0.82456484, -0.41597356],
+            sage: tuple(numpy.linalg.eig(n))
+            (array([-0.37228132,  5.37228132]),
+             array([[-0.82456484, -0.41597356],
                    [ 0.56576746, -0.90937671]]))
             sage: m = matrix(RDF, 2, range(6)); m
             [0.0 1.0 2.0]
diff --git a/src/sage/plot/plot3d/list_plot3d.py b/src/sage/plot/plot3d/list_plot3d.py
index d64b766001e..0158f856dbb 100644
--- a/src/sage/plot/plot3d/list_plot3d.py
+++ b/src/sage/plot/plot3d/list_plot3d.py
@@ -602,7 +602,7 @@ def g(x, y):
         from .parametric_surface import ParametricSurface
 
         def g(x, y):
-            z = f([x, y])
+            z = f([x, y]).item()
             return (x, y, z)
         G = ParametricSurface(g, (list(numpy.r_[xmin:xmax:num_points * j]),
                                   list(numpy.r_[ymin:ymax:num_points * j])),
diff --git a/src/sage/plot/plot3d/plot3d.py b/src/sage/plot/plot3d/plot3d.py
index e9bbfaa8370..9ba89595d70 100644
--- a/src/sage/plot/plot3d/plot3d.py
+++ b/src/sage/plot/plot3d/plot3d.py
@@ -378,7 +378,7 @@ def to_cartesian(self, func, params=None):
             ....: [ 0.16763356,  0.19993708,  0.31403568,  0.47359696, 0.55282422],
             ....: [ 0.16763356,  0.25683223,  0.16649297,  0.10594339, 0.55282422]])
             sage: import scipy.interpolate
-            sage: f=scipy.interpolate.RectBivariateSpline(v_phi,v_theta,m_r)
+            sage: f=scipy.interpolate.RectBivariateSpline(v_phi,v_theta,m_r).ev
             sage: spherical_plot3d(f,(0,2*pi),(0,pi))
             Graphics3d Object
 
