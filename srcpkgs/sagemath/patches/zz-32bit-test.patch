A couple of tests that give different (correct) output on 32-bit

diff --git a/src/sage/rings/number_field/bdd_height.py b/src/sage/rings/number_field/bdd_height.py
index 45f08aa4711..b88b315fd01 100644
--- a/src/sage/rings/number_field/bdd_height.py
+++ b/src/sage/rings/number_field/bdd_height.py
@@ -236,7 +236,8 @@ def bdd_norm_pr_ideal_gens(K, norm_list):
         sage: from sage.rings.number_field.bdd_height import bdd_norm_pr_ideal_gens
         sage: K.<g> = QuadraticField(123)
         sage: bdd_norm_pr_ideal_gens(K, range(5))
-        {0: [0], 1: [1], 2: [g + 11], 3: [], 4: [2]}
+        {0: [0], 1: [1], 2: [g + 11], 3: [], 4: [2]}  # 64-bit
+        {0: [0], 1: [1], 2: [g - 11], 3: [], 4: [2]}  # 32-bit
 
     ::
 
diff --git a/src/sage/rings/number_field/number_field.py b/src/sage/rings/number_field/number_field.py
index 61d0b98509a..dab3186cea4 100644
--- a/src/sage/rings/number_field/number_field.py
+++ b/src/sage/rings/number_field/number_field.py
@@ -4827,7 +4827,8 @@ class NumberField_generic(WithEqualityById, number_field_base.NumberField):
 
             sage: K.<a> = NumberField(2*x^2 - 1/3)
             sage: K._S_class_group_and_units(tuple(K.primes_above(2) + K.primes_above(3)))
-            ([6*a + 2, -6*a + 3, -1, -12*a - 5], [])
+            ([6*a + 2, -6*a + 3, -1, -12*a - 5], [])  # 64-bit
+            ([6*a + 2, -6*a - 3, -1, -12*a - 5], [])  # 32-bit
         """
         K_pari = self.pari_bnf(proof=proof)
         S_pari = [p.pari_prime() for p in sorted(set(S))]
