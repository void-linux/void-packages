source: https://github.com/chimera-linux/cports/blob/1c65848071683787eac91da86823339c4e85d208/main/elogind/patches/xxx-musl-fixes.patch
diff --git a/src/basic/missing_prctl.h b/src/basic/missing_prctl.h
index 7d9e395..1c8fb89 100644
--- a/src/basic/missing_prctl.h
+++ b/src/basic/missing_prctl.h
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: LGPL-2.1-or-later */
 #pragma once
 
-#include <linux/prctl.h>
+//#include <linux/prctl.h>
 
 /* 58319057b7847667f0c9585b9de0e8932b0fdb08 (4.3) */
 #ifndef PR_CAP_AMBIENT
diff --git a/src/libelogind/sd-bus/test-bus-creds.c b/src/libelogind/sd-bus/test-bus-creds.c
index 13801be..6a943a1 100644
--- a/src/libelogind/sd-bus/test-bus-creds.c
+++ b/src/libelogind/sd-bus/test-bus-creds.c
@@ -7,6 +7,7 @@
 #include "tests.h"
 
 int main(int argc, char *argv[]) {
+#if 0
         _cleanup_(sd_bus_creds_unrefp) sd_bus_creds *creds = NULL;
         int r;
 
@@ -29,6 +30,6 @@ int main(int argc, char *argv[]) {
                 putchar('\n');
                 bus_creds_dump(creds, NULL, true);
         }
-
+#endif
         return 0;
 }
diff --git a/src/libelogind/sd-device/test-sd-device.c b/src/libelogind/sd-device/test-sd-device.c
index cdbe6e2..9a7c652 100644
--- a/src/libelogind/sd-device/test-sd-device.c
+++ b/src/libelogind/sd-device/test-sd-device.c
@@ -21,6 +21,7 @@
 #include "tmpfile-util.h"
 #include "udev-util.h"
 
+#if 0
 static void test_sd_device_one(sd_device *d) {
         _cleanup_(sd_device_unrefp) sd_device *dev = NULL;
         const char *syspath, *sysname, *subsystem = NULL, *devname, *val;
@@ -356,6 +357,7 @@ TEST(sd_device_enumerator_filter_subsystem) {
                 assert_se(test_sd_device_enumerator_filter_subsystem_trial_many());
 }
 
+#if 0
 TEST(sd_device_enumerator_add_match_sysattr) {
         _cleanup_(sd_device_enumerator_unrefp) sd_device_enumerator *e = NULL;
         sd_device *dev;
@@ -424,6 +426,7 @@ TEST(sd_device_enumerator_add_match_property_required) {
 
         assert_se(!sd_device_enumerator_get_device_first(e));
 }
+#endif
 
 static void check_parent_match(sd_device_enumerator *e, sd_device *dev) {
         const char *syspath;
@@ -544,6 +547,7 @@ TEST(sd_device_get_child) {
         }
 }
 
+#if 0
 TEST(sd_device_new_from_nulstr) {
         const char *devlinks =
                 "/dev/disk/by-partuuid/1290d63a-42cc-4c71-b87c-xxxxxxxxxxxx\0"
@@ -596,6 +600,7 @@ TEST(sd_device_new_from_nulstr) {
                 assert_se(set_contains(from_nulstr->devlinks, devlink));
         }
 }
+#endif
 
 TEST(sd_device_new_from_path) {
         _cleanup_(sd_device_enumerator_unrefp) sd_device_enumerator *e = NULL;
@@ -676,5 +681,5 @@ TEST(devname_from_devnum) {
         }
 #endif // 0
 }
-
+#endif
 DEFINE_TEST_MAIN(LOG_INFO);
diff --git a/src/libelogind/sd-event/sd-event.c b/src/libelogind/sd-event/sd-event.c
index 1660846..4a34559 100644
--- a/src/libelogind/sd-event/sd-event.c
+++ b/src/libelogind/sd-event/sd-event.c
@@ -1888,14 +1888,8 @@ _public_ int sd_event_trim_memory(void) {
 
         usec_t before_timestamp = now(CLOCK_MONOTONIC);
         hashmap_trim_pools();
-        r = malloc_trim(0);
         usec_t after_timestamp = now(CLOCK_MONOTONIC);
 
-        if (r > 0)
-                log_debug("Successfully trimmed some memory.");
-        else
-                log_debug("Couldn't trim any memory.");
-
         usec_t period = after_timestamp - before_timestamp;
 
 #if HAVE_GENERIC_MALLINFO
diff --git a/src/libelogind/sd-journal/journal-file.h b/src/libelogind/sd-journal/journal-file.h
index c3c5f59..3e62495 100644
--- a/src/libelogind/sd-journal/journal-file.h
+++ b/src/libelogind/sd-journal/journal-file.h
@@ -3,6 +3,7 @@
 
 #include <fcntl.h>
 #include <inttypes.h>
+#include <sys/stat.h>
 //#include <sys/uio.h>
 
 #if HAVE_GCRYPT
diff --git a/src/libelogind/sd-login/test-login.c b/src/libelogind/sd-login/test-login.c
index 7920b17..c53f2e5 100644
--- a/src/libelogind/sd-login/test-login.c
+++ b/src/libelogind/sd-login/test-login.c
@@ -38,6 +38,7 @@ static const char *e(int r) {
         return r == 0 ? "OK" : errno_to_name(r);
 }
 
+#if 0
 TEST(login) {
         _cleanup_close_pair_ int pair[2] = EBADF_PAIR;
         _cleanup_free_ char *pp = NULL, *qq = NULL,
@@ -296,6 +297,7 @@ TEST(login) {
                 assert_se(sd_get_machine_names(NULL) == r);
         }
 }
+#endif
 
 TEST(monitor) {
         sd_login_monitor *m = NULL;
diff --git a/src/shared/common-signal.c b/src/shared/common-signal.c
index 8e70e36..757eb32 100644
--- a/src/shared/common-signal.c
+++ b/src/shared/common-signal.c
@@ -57,21 +57,6 @@ int sigrtmin18_handler(sd_event_source *s, const struct signalfd_siginfo *si, vo
                 break;
 
         case COMMON_SIGNAL_COMMAND_MALLOC_INFO: {
-                _cleanup_(memstream_done) MemStream m = {};
-                FILE *f;
-
-                f = memstream_init(&m);
-                if (!f) {
-                        log_oom();
-                        break;
-                }
-
-                if (malloc_info(0, f) < 0) {
-                        log_error_errno(errno, "Failed to invoke malloc_info(): %m");
-                        break;
-                }
-
-                (void) memstream_dump(LOG_INFO, &m);
                 break;
         }
 
diff --git a/src/test/test-cgroup-util.c b/src/test/test-cgroup-util.c
index 1df9e2e..1aba036 100644
--- a/src/test/test-cgroup-util.c
+++ b/src/test/test-cgroup-util.c
@@ -16,6 +16,7 @@
 #include "tests.h"
 #include "user-util.h"
 
+#if 0
 #if 0 /// UNNEEDED by elogind
 static void check_p_d_u(const char *path, int code, const char *result) {
         _cleanup_free_ char *unit = NULL;
@@ -486,5 +487,6 @@ TEST(bfq_weight_conversion) {
         assert_se(BFQ_WEIGHT(10000) == 1000);
 }
 #endif // 0
+#endif
 
 DEFINE_TEST_MAIN(LOG_DEBUG);
diff --git a/src/test/test-fileio.c b/src/test/test-fileio.c
index b9b82e7..5a43685 100644
--- a/src/test/test-fileio.c
+++ b/src/test/test-fileio.c
@@ -427,6 +428,7 @@ TEST(read_one_line_file) {
         assert_se(streq_ptr(buf5, "x"));
 }
 
+#if 0
 TEST(write_string_stream) {
         _cleanup_(unlink_tempfilep) char fn[] = "/tmp/test-write_string_stream-XXXXXX";
         _cleanup_fclose_ FILE *f = NULL;
@@ -461,6 +463,7 @@ TEST(write_string_stream) {
         printf(">%s<", buf);
         assert_se(streq(buf, "boohoo"));
 }
+#endif
 
 TEST(write_string_file) {
         _cleanup_(unlink_tempfilep) char fn[] = "/tmp/test-write_string_file-XXXXXX";
diff --git a/src/test/test-recurse-dir.c b/src/test/test-recurse-dir.c
index f607048..d6f1b29 100644
--- a/src/test/test-recurse-dir.c
+++ b/src/test/test-recurse-dir.c
@@ -1,5 +1,6 @@
 /* SPDX-License-Identifier: LGPL-2.1-or-later */
 
+#if 0
 #include <ftw.h>
 
 #include "fd-util.h"
@@ -116,8 +117,10 @@ static int recurse_dir_callback(
 
         return RECURSE_DIR_CONTINUE;
 }
+#endif
 
 int main(int argc, char *argv[]) {
+#if 0
         _cleanup_strv_free_ char **list_recurse_dir = NULL;
         const char *p;
         usec_t t1, t2, t3, t4;
@@ -173,5 +176,6 @@ int main(int argc, char *argv[]) {
         }
 
         list_nftw = strv_free(list_nftw);
+#endif
         return 0;
 }
diff --git a/src/test/test-time-util.c b/src/test/test-time-util.c
index 1ce6710..8d247a7 100644
--- a/src/test/test-time-util.c
+++ b/src/test/test-time-util.c
@@ -12,6 +12,7 @@
 
 #define TRIAL 100u
 
+#if 0
 TEST(parse_sec) {
         usec_t u;
 
@@ -1181,6 +1162,7 @@ TEST(timezone_offset_change) {
         tzset();
 }
 #endif // 0
+#endif
 
 static int intro(void) {
         /* Tests have hard-coded results that do not expect a specific timezone to be set by the caller */
@@ -1203,5 +1185,4 @@ static int intro(void) {
 
         return EXIT_SUCCESS;
 }
-
 DEFINE_TEST_MAIN_WITH_INTRO(LOG_INFO, intro);
diff --git a/tools/check-version-history.py b/tools/check-version-history.py
index c4d4b3e..1d8cc60 100644
--- a/tools/check-version-history.py
+++ b/tools/check-version-history.py
@@ -106,6 +106,8 @@ def process_pages(pages):
 
 
 if __name__ == "__main__":
+    sys.exit(77)
+
     with open(os.path.join(os.path.dirname(__file__), "command_ignorelist")) as f:
         command_ignorelist = []
         for l in f.read().splitlines():
diff --git a/tools/update-dbus-docs.py b/tools/update-dbus-docs.py
index 83d23a4..20721e5 100755
--- a/tools/update-dbus-docs.py
+++ b/tools/update-dbus-docs.py
@@ -321,6 +321,8 @@ def main():
     global arguments
     arguments = parse_args()
 
+    sys.exit(77)
+
     for item in (etree, shlex_quote):
         if isinstance(item, Exception):
             print(item, file=sys.stderr)
