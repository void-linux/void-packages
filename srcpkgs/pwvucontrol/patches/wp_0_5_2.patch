diff --git a/Cargo.lock b/Cargo.lock
index 19daa9c..0f70a01 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -23,15 +23,15 @@ dependencies = [
 
 [[package]]
 name = "anyhow"
-version = "1.0.100"
+version = "1.0.97"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a23eb6b1614318a8071c9b2521f36b424b2c83db5eb3a0fead4a6c0809af6e61"
+checksum = "dcfed56ad506cb2c684a14971b8861fdc3baaaae314b9e5f9bb532cbe3ba7a4f"
 
 [[package]]
 name = "autocfg"
-version = "1.5.0"
+version = "1.4.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c08606f8c3cbf4ce6ec8e28fb0014a2c086708fe954eaa885384a6165172e7e8"
+checksum = "ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26"
 
 [[package]]
 name = "bindgen"
@@ -56,9 +56,9 @@ dependencies = [
 
 [[package]]
 name = "bitflags"
-version = "2.10.0"
+version = "2.9.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "812e12b5285cc515a9c72a5c1d3b6d46a19dac5acfef5265968c166106e31dd3"
+checksum = "5c8214115b7bf84099f1309324e63141d4c5d7cc26862f97a0a857dbefe165bd"
 
 [[package]]
 name = "bitmaps"
@@ -98,11 +98,10 @@ dependencies = [
 
 [[package]]
 name = "cc"
-version = "1.2.41"
+version = "1.2.16"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ac9fe6cdbb24b6ade63616c0a0688e45bb56732262c158df3c0c4bea4ca47cb7"
+checksum = "be714c154be609ec7f5dad223a33bf1482fff90472de28f7362806e6d4832b8c"
 dependencies = [
- "find-msvc-tools",
  "shlex",
 ]
 
@@ -127,9 +126,9 @@ dependencies = [
 
 [[package]]
 name = "cfg-if"
-version = "1.0.4"
+version = "1.0.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9330f8b2ff13f34540b44e946ef35111825727b38d33286ef986142615121801"
+checksum = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"
 
 [[package]]
 name = "clang-sys"
@@ -182,17 +181,11 @@ dependencies = [
  "rustc_version",
 ]
 
-[[package]]
-name = "find-msvc-tools"
-version = "0.1.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "52051878f80a721bb68ebfbc930e07b65ba72f2da88968ea5c06fd6ca3d3a127"
-
 [[package]]
 name = "formatx"
-version = "0.2.4"
+version = "0.2.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d8866fac38f53fc87fa3ae1b09ddd723e0482f8fa74323518b4c59df2c55a00a"
+checksum = "fa6f3b9014e23925937fbf4d05f27a6f4efe42545f98690b94f193bdb3f1959e"
 
 [[package]]
 name = "futures"
@@ -342,9 +335,9 @@ dependencies = [
 
 [[package]]
 name = "gettext-rs"
-version = "0.7.7"
+version = "0.7.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5d5857dc1b7f0fee86961de833f434e29494d72af102ce5355738c0664222bdf"
+checksum = "a44e92f7dc08430aca7ed55de161253a22276dfd69c5526e5c5e95d1f7cf338a"
 dependencies = [
  "gettext-sys",
  "locale_config",
@@ -352,9 +345,9 @@ dependencies = [
 
 [[package]]
 name = "gettext-sys"
-version = "0.26.0"
+version = "0.22.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4ea859ab0dd7e70ff823032b3e077d03d39c965d68c6c10775add60e999d8ee9"
+checksum = "bb45773f5b8945f12aecd04558f545964f943dacda1b1155b3d738f5469ef661"
 dependencies = [
  "cc",
  "temp-dir",
@@ -439,9 +432,9 @@ dependencies = [
 
 [[package]]
 name = "glob"
-version = "0.3.3"
+version = "0.3.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0cc23270f6e1808e30a928bdc84dea0b9b4136a8bc82338574f23baf47bbd280"
+checksum = "a8d1add55171497b4705a648c6b583acafb01d58050a51727785f0b2c8e0a2b2"
 
 [[package]]
 name = "gobject-sys"
@@ -659,18 +652,18 @@ dependencies = [
 
 [[package]]
 name = "libc"
-version = "0.2.177"
+version = "0.2.171"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2874a2af47a2325c2001a6e6fad9b16a53b802102b528163885171cf92b15976"
+checksum = "c19937216e9d3aa9956d9bb8dfc0b0c8beb6058fc4f7a4dc4d850edf86a237d6"
 
 [[package]]
 name = "libloading"
-version = "0.8.9"
+version = "0.8.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d7c4b02199fee7c5d21a5ae7d8cfa79a6ef5bb2fc834d6e9058e89c825efdc55"
+checksum = "fc2f4eb4bc735547cfed7c0a4922cbd04a4655978c09b54f1f7b228750664c34"
 dependencies = [
  "cfg-if",
- "windows-link",
+ "windows-targets",
 ]
 
 [[package]]
@@ -716,9 +709,9 @@ dependencies = [
 
 [[package]]
 name = "log"
-version = "0.4.28"
+version = "0.4.26"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "34080505efa8e45a4b816c349525ebe327ceaa8559756f0356cba97ef3bf7432"
+checksum = "30bde2b3dc3671ae49d8e2e9f044c7c005836e7a023ee57cffa25ab82764bb9e"
 
 [[package]]
 name = "malloc_buf"
@@ -802,9 +795,9 @@ dependencies = [
 
 [[package]]
 name = "once_cell"
-version = "1.21.3"
+version = "1.21.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "42f5e15c9953c5e4ccceeb2e7382a716482c34515315f7b03532b8b4e8393d2d"
+checksum = "d75b0bedcc4fe52caa0e03d9f1151a323e4aa5e2d78ba3580400cd3c9e2bc4bc"
 
 [[package]]
 name = "pango"
@@ -878,25 +871,25 @@ checksum = "7edddbd0b52d732b21ad9a5fab5c704c14cd949e5e9a1ec5929a24fded1b904c"
 
 [[package]]
 name = "proc-macro-crate"
-version = "3.4.0"
+version = "3.3.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "219cb19e96be00ab2e37d6e299658a0cfa83e52429179969b0f0121b4ac46983"
+checksum = "edce586971a4dfaa28950c6f18ed55e0406c1ab88bbce2c6f6293a7aaba73d35"
 dependencies = [
- "toml_edit 0.23.7",
+ "toml_edit",
 ]
 
 [[package]]
 name = "proc-macro2"
-version = "1.0.101"
+version = "1.0.94"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "89ae43fd86e4158d6db51ad8e2b80f313af9cc74f5c0e03ccb87de09998732de"
+checksum = "a31971752e70b8b2686d7e46ec17fb38dad4051d94024c88df49b667caea9c84"
 dependencies = [
  "unicode-ident",
 ]
 
 [[package]]
 name = "pwvucontrol"
-version = "0.5.1"
+version = "0.5.0"
 dependencies = [
  "anyhow",
  "formatx",
@@ -913,9 +906,9 @@ dependencies = [
 
 [[package]]
 name = "quote"
-version = "1.0.41"
+version = "1.0.40"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ce25767e7b499d1b604768e7cde645d14cc8584231ea6b295e9c9eb22c02e1d1"
+checksum = "1885c039570dc00dcb4ff087a89e185fd56bae234ddc7f056a945bf36467248d"
 dependencies = [
  "proc-macro2",
 ]
@@ -937,9 +930,9 @@ dependencies = [
 
 [[package]]
 name = "regex"
-version = "1.12.2"
+version = "1.11.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "843bc0191f75f3e22651ae5f1e72939ab2f72a4bc30fa80a066bd66edefc24d4"
+checksum = "b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191"
 dependencies = [
  "aho-corasick",
  "memchr",
@@ -949,9 +942,9 @@ dependencies = [
 
 [[package]]
 name = "regex-automata"
-version = "0.4.13"
+version = "0.4.9"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5276caf25ac86c8d810222b3dbb938e512c55c6831a10f3e6ed1c93b84041f1c"
+checksum = "809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908"
 dependencies = [
  "aho-corasick",
  "memchr",
@@ -960,9 +953,9 @@ dependencies = [
 
 [[package]]
 name = "regex-syntax"
-version = "0.8.8"
+version = "0.8.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7a2d987857b319362043e95f5353c0535c1f58eec5336fdfcf626430af7def58"
+checksum = "2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c"
 
 [[package]]
 name = "rustc-hash"
@@ -981,9 +974,9 @@ dependencies = [
 
 [[package]]
 name = "semver"
-version = "1.0.27"
+version = "1.0.26"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d767eb0aabc880b29956c35734170f26ed551a859dbd361d140cdbeca61ab1e2"
+checksum = "56e6fa9c48d24d85fb3de5ad847117517440f6beceb7798af16b4a87d616b8d0"
 
 [[package]]
 name = "serde"
@@ -1016,9 +1009,9 @@ dependencies = [
 
 [[package]]
 name = "serde_spanned"
-version = "0.6.9"
+version = "0.6.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "bf41e0cfaf7226dca15e8197172c295a782857fcb97fad1808a166870dee75a3"
+checksum = "87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1"
 dependencies = [
  "serde",
 ]
@@ -1031,9 +1024,12 @@ checksum = "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64"
 
 [[package]]
 name = "slab"
-version = "0.4.11"
+version = "0.4.9"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7a2ae44ef20feb57a68b23d846850f861394c2e02dc425a50098ae8c90267589"
+checksum = "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67"
+dependencies = [
+ "autocfg",
+]
 
 [[package]]
 name = "smallvec"
@@ -1073,9 +1069,9 @@ checksum = "61c41af27dd6d1e27b1b16b489db798443478cef1f06a660c96db617ba5de3b1"
 
 [[package]]
 name = "temp-dir"
-version = "0.1.16"
+version = "0.1.14"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "83176759e9416cf81ee66cb6508dbfe9c96f20b8b56265a39917551c23c70964"
+checksum = "bc1ee6eef34f12f765cb94725905c6312b6610ab2b0940889cfe58dae7bc3c72"
 
 [[package]]
 name = "thiserror"
@@ -1099,73 +1095,43 @@ dependencies = [
 
 [[package]]
 name = "toml"
-version = "0.8.23"
+version = "0.8.20"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "dc1beb996b9d83529a9e75c17a1686767d148d70663143c7854d8b4a09ced362"
+checksum = "cd87a5cdd6ffab733b2f74bc4fd7ee5fff6634124999ac278c35fc78c6120148"
 dependencies = [
  "serde",
  "serde_spanned",
- "toml_datetime 0.6.11",
- "toml_edit 0.22.27",
+ "toml_datetime",
+ "toml_edit",
 ]
 
 [[package]]
 name = "toml_datetime"
-version = "0.6.11"
+version = "0.6.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "22cddaf88f4fbc13c51aebbf5f8eceb5c7c5a9da2ac40a13519eb5b0a0e8f11c"
+checksum = "0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41"
 dependencies = [
  "serde",
 ]
 
-[[package]]
-name = "toml_datetime"
-version = "0.7.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f2cdb639ebbc97961c51720f858597f7f24c4fc295327923af55b74c3c724533"
-dependencies = [
- "serde_core",
-]
-
 [[package]]
 name = "toml_edit"
-version = "0.22.27"
+version = "0.22.24"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "41fe8c660ae4257887cf66394862d21dbca4a6ddd26f04a3560410406a2f819a"
+checksum = "17b4795ff5edd201c7cd6dca065ae59972ce77d1b80fa0a84d94950ece7d1474"
 dependencies = [
  "indexmap",
  "serde",
  "serde_spanned",
- "toml_datetime 0.6.11",
- "winnow",
-]
-
-[[package]]
-name = "toml_edit"
-version = "0.23.7"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6485ef6d0d9b5d0ec17244ff7eb05310113c3f316f2d14200d4de56b3cb98f8d"
-dependencies = [
- "indexmap",
- "toml_datetime 0.7.3",
- "toml_parser",
- "winnow",
-]
-
-[[package]]
-name = "toml_parser"
-version = "1.0.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c0cbe268d35bdb4bb5a56a2de88d0ad0eb70af5384a99d648cd4b3d04039800e"
-dependencies = [
+ "toml_datetime",
  "winnow",
 ]
 
 [[package]]
 name = "unicode-ident"
-version = "1.0.20"
+version = "1.0.18"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "462eeb75aeb73aea900253ce739c8e18a67423fadf006037cd3ff27e82748a06"
+checksum = "5a5f39404a5da50712a4c1eecf25e90dd62b613502b7e925fd4e4d19b5c96512"
 
 [[package]]
 name = "unicode-segmentation"
@@ -1213,12 +1179,6 @@ version = "0.4.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"
 
-[[package]]
-name = "windows-link"
-version = "0.2.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f0805222e57f7521d6a62e36fa9163bc891acd422f971defe97d64e70d0a4fe5"
-
 [[package]]
 name = "windows-sys"
 version = "0.52.0"
@@ -1303,8 +1263,8 @@ dependencies = [
 
 [[package]]
 name = "wireplumber"
-version = "0.1.0"
-source = "git+https://github.com/arcnmx/wireplumber.rs.git?rev=ef3407c623840fa855dbe12c2574875e01ff361d#ef3407c623840fa855dbe12c2574875e01ff361d"
+version = "0.2.0"
+source = "git+https://github.com/arcnmx/wireplumber.rs.git?branch=wp-0.5#f6f43324f231fe6f6508b417c20728ffa75eea80"
 dependencies = [
  "bitflags",
  "gio",
@@ -1319,8 +1279,8 @@ dependencies = [
 
 [[package]]
 name = "wireplumber-sys"
-version = "0.1.0"
-source = "git+https://github.com/arcnmx/wireplumber.rs.git?rev=ef3407c623840fa855dbe12c2574875e01ff361d#ef3407c623840fa855dbe12c2574875e01ff361d"
+version = "0.2.0"
+source = "git+https://github.com/arcnmx/wireplumber.rs.git?branch=wp-0.5#f6f43324f231fe6f6508b417c20728ffa75eea80"
 dependencies = [
  "gio-sys",
  "glib-sys",
diff --git a/Cargo.toml b/Cargo.toml
index 872e796..f533101 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -1,6 +1,6 @@
 [package]
 name = "pwvucontrol"
-version = "0.5.1"
+version = "0.5.0"
 edition = "2021"
 rust-version = "1.80"
 
@@ -19,9 +19,13 @@ pipewire = "0.8"
 formatx = "0.2.3"
 
 [dependencies.wireplumber]
+version = "0.2"
 git = "https://github.com/arcnmx/wireplumber.rs.git"
-rev = "ef3407c623840fa855dbe12c2574875e01ff361d"
-features = ["v0_4_16"]
+branch = "wp-0.5"
+features = ["v0_5"]
+
+#rev = "6e48383a85aecfca22dac3ffc589fb3f25404eda"
+#features = ["v0_4_16"]
 
 [dependencies.adw]
 package = "libadwaita"
diff --git a/README.md b/README.md
index a89101c..340a92c 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,9 @@
 # pwvucontrol
 
+## Experimental wireplumber-rs wp-5.0 branch
+
+This is an experiment to see if using the in-progress wp-0.5 branch of wireplumber-rs is goin going to work.
+
 ## Flatpak
 
 
@@ -17,7 +21,7 @@ by using this command:
 
 ## General info
 
-This is an attempt at making a volume control applet for Pipewire.
+This is an attempt at making a volume control applet for PipeWire.
 
 Current implemented features as of 2024-05-04:
 
diff --git a/Release steps.txt b/Release steps.txt
new file mode 100644
index 0000000..733d38f
--- /dev/null
+++ b/Release steps.txt	
@@ -0,0 +1,12 @@
+Steps to making a new release
+
+1. Bump version in Cargo.toml and meson.build
+2. Add new release in appdata metainfo
+3. Create git tag
+4. Run meson dist -C builddir --no-tests
+5. Make new github release, upload tarballs from meson dist.
+6. Create new branch and commit for flathub project, setting new url and sha256sum.
+7. Do pull request on flathub project.
+8. Merge.
+
+
diff --git a/build-aux/0001-node-cast-proxy-to-pw_node-when-calling-pw_node-func.patch b/build-aux/0001-node-cast-proxy-to-pw_node-when-calling-pw_node-func.patch
deleted file mode 100644
index 56338b8..0000000
--- a/build-aux/0001-node-cast-proxy-to-pw_node-when-calling-pw_node-func.patch
+++ /dev/null
@@ -1,27 +0,0 @@
-From f4f495ee212c46611303dec9cd18996830d7f721 Mon Sep 17 00:00:00 2001
-From: Wim Taymans <wtaymans@redhat.com>
-Date: Wed, 20 Nov 2024 10:10:09 +0100
-Subject: [PATCH] node: cast proxy to pw_node* when calling pw_node functions
-
-This currently works fine because the functions accept void* but will
-fail when they accept struct pw_node* in the future.
----
- lib/wp/node.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-diff --git a/lib/wp/node.c b/lib/wp/node.c
-index 07fa0bbe..7b77b944 100644
---- a/lib/wp/node.c
-+++ b/lib/wp/node.c
-@@ -631,7 +631,7 @@ wp_node_send_command (WpNode * self, const gchar * command)
- 
-   struct spa_command cmd =
-       SPA_NODE_COMMAND_INIT(wp_spa_id_value_number (command_value));
--  pw_node_send_command (wp_proxy_get_pw_proxy (WP_PROXY (self)), &cmd);
-+  pw_node_send_command ((struct pw_node*)wp_proxy_get_pw_proxy (WP_PROXY (self)), &cmd);
- }
- 
- /*! \defgroup wpimplnode WpImplNode */
--- 
-2.51.0
-
diff --git a/build-aux/cargo-sources.json b/build-aux/cargo-sources.json
index 916754a..c9c555b 100644
--- a/build-aux/cargo-sources.json
+++ b/build-aux/cargo-sources.json
@@ -2,8 +2,8 @@
     {
         "type": "git",
         "url": "https://github.com/arcnmx/wireplumber.rs",
-        "commit": "ef3407c623840fa855dbe12c2574875e01ff361d",
-        "dest": "flatpak-cargo/git/wireplumber.rs-ef3407c"
+        "commit": "f6f43324f231fe6f6508b417c20728ffa75eea80",
+        "dest": "flatpak-cargo/git/wireplumber.rs-f6f4332"
     },
     {
         "type": "archive",
@@ -34,27 +34,27 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/anyhow/anyhow-1.0.100.crate",
-        "sha256": "a23eb6b1614318a8071c9b2521f36b424b2c83db5eb3a0fead4a6c0809af6e61",
-        "dest": "cargo/vendor/anyhow-1.0.100"
+        "url": "https://static.crates.io/crates/anyhow/anyhow-1.0.97.crate",
+        "sha256": "dcfed56ad506cb2c684a14971b8861fdc3baaaae314b9e5f9bb532cbe3ba7a4f",
+        "dest": "cargo/vendor/anyhow-1.0.97"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"a23eb6b1614318a8071c9b2521f36b424b2c83db5eb3a0fead4a6c0809af6e61\", \"files\": {}}",
-        "dest": "cargo/vendor/anyhow-1.0.100",
+        "contents": "{\"package\": \"dcfed56ad506cb2c684a14971b8861fdc3baaaae314b9e5f9bb532cbe3ba7a4f\", \"files\": {}}",
+        "dest": "cargo/vendor/anyhow-1.0.97",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/autocfg/autocfg-1.5.0.crate",
-        "sha256": "c08606f8c3cbf4ce6ec8e28fb0014a2c086708fe954eaa885384a6165172e7e8",
-        "dest": "cargo/vendor/autocfg-1.5.0"
+        "url": "https://static.crates.io/crates/autocfg/autocfg-1.4.0.crate",
+        "sha256": "ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26",
+        "dest": "cargo/vendor/autocfg-1.4.0"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"c08606f8c3cbf4ce6ec8e28fb0014a2c086708fe954eaa885384a6165172e7e8\", \"files\": {}}",
-        "dest": "cargo/vendor/autocfg-1.5.0",
+        "contents": "{\"package\": \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\", \"files\": {}}",
+        "dest": "cargo/vendor/autocfg-1.4.0",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -73,14 +73,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/bitflags/bitflags-2.10.0.crate",
-        "sha256": "812e12b5285cc515a9c72a5c1d3b6d46a19dac5acfef5265968c166106e31dd3",
-        "dest": "cargo/vendor/bitflags-2.10.0"
+        "url": "https://static.crates.io/crates/bitflags/bitflags-2.9.0.crate",
+        "sha256": "5c8214115b7bf84099f1309324e63141d4c5d7cc26862f97a0a857dbefe165bd",
+        "dest": "cargo/vendor/bitflags-2.9.0"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"812e12b5285cc515a9c72a5c1d3b6d46a19dac5acfef5265968c166106e31dd3\", \"files\": {}}",
-        "dest": "cargo/vendor/bitflags-2.10.0",
+        "contents": "{\"package\": \"5c8214115b7bf84099f1309324e63141d4c5d7cc26862f97a0a857dbefe165bd\", \"files\": {}}",
+        "dest": "cargo/vendor/bitflags-2.9.0",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -138,14 +138,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/cc/cc-1.2.41.crate",
-        "sha256": "ac9fe6cdbb24b6ade63616c0a0688e45bb56732262c158df3c0c4bea4ca47cb7",
-        "dest": "cargo/vendor/cc-1.2.41"
+        "url": "https://static.crates.io/crates/cc/cc-1.2.16.crate",
+        "sha256": "be714c154be609ec7f5dad223a33bf1482fff90472de28f7362806e6d4832b8c",
+        "dest": "cargo/vendor/cc-1.2.16"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"ac9fe6cdbb24b6ade63616c0a0688e45bb56732262c158df3c0c4bea4ca47cb7\", \"files\": {}}",
-        "dest": "cargo/vendor/cc-1.2.41",
+        "contents": "{\"package\": \"be714c154be609ec7f5dad223a33bf1482fff90472de28f7362806e6d4832b8c\", \"files\": {}}",
+        "dest": "cargo/vendor/cc-1.2.16",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -177,14 +177,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/cfg-if/cfg-if-1.0.4.crate",
-        "sha256": "9330f8b2ff13f34540b44e946ef35111825727b38d33286ef986142615121801",
-        "dest": "cargo/vendor/cfg-if-1.0.4"
+        "url": "https://static.crates.io/crates/cfg-if/cfg-if-1.0.0.crate",
+        "sha256": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
+        "dest": "cargo/vendor/cfg-if-1.0.0"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"9330f8b2ff13f34540b44e946ef35111825727b38d33286ef986142615121801\", \"files\": {}}",
-        "dest": "cargo/vendor/cfg-if-1.0.4",
+        "contents": "{\"package\": \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\", \"files\": {}}",
+        "dest": "cargo/vendor/cfg-if-1.0.0",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -268,27 +268,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/find-msvc-tools/find-msvc-tools-0.1.4.crate",
-        "sha256": "52051878f80a721bb68ebfbc930e07b65ba72f2da88968ea5c06fd6ca3d3a127",
-        "dest": "cargo/vendor/find-msvc-tools-0.1.4"
+        "url": "https://static.crates.io/crates/formatx/formatx-0.2.3.crate",
+        "sha256": "fa6f3b9014e23925937fbf4d05f27a6f4efe42545f98690b94f193bdb3f1959e",
+        "dest": "cargo/vendor/formatx-0.2.3"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"52051878f80a721bb68ebfbc930e07b65ba72f2da88968ea5c06fd6ca3d3a127\", \"files\": {}}",
-        "dest": "cargo/vendor/find-msvc-tools-0.1.4",
-        "dest-filename": ".cargo-checksum.json"
-    },
-    {
-        "type": "archive",
-        "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/formatx/formatx-0.2.4.crate",
-        "sha256": "d8866fac38f53fc87fa3ae1b09ddd723e0482f8fa74323518b4c59df2c55a00a",
-        "dest": "cargo/vendor/formatx-0.2.4"
-    },
-    {
-        "type": "inline",
-        "contents": "{\"package\": \"d8866fac38f53fc87fa3ae1b09ddd723e0482f8fa74323518b4c59df2c55a00a\", \"files\": {}}",
-        "dest": "cargo/vendor/formatx-0.2.4",
+        "contents": "{\"package\": \"fa6f3b9014e23925937fbf4d05f27a6f4efe42545f98690b94f193bdb3f1959e\", \"files\": {}}",
+        "dest": "cargo/vendor/formatx-0.2.3",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -463,27 +450,27 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/gettext-rs/gettext-rs-0.7.7.crate",
-        "sha256": "5d5857dc1b7f0fee86961de833f434e29494d72af102ce5355738c0664222bdf",
-        "dest": "cargo/vendor/gettext-rs-0.7.7"
+        "url": "https://static.crates.io/crates/gettext-rs/gettext-rs-0.7.2.crate",
+        "sha256": "a44e92f7dc08430aca7ed55de161253a22276dfd69c5526e5c5e95d1f7cf338a",
+        "dest": "cargo/vendor/gettext-rs-0.7.2"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"5d5857dc1b7f0fee86961de833f434e29494d72af102ce5355738c0664222bdf\", \"files\": {}}",
-        "dest": "cargo/vendor/gettext-rs-0.7.7",
+        "contents": "{\"package\": \"a44e92f7dc08430aca7ed55de161253a22276dfd69c5526e5c5e95d1f7cf338a\", \"files\": {}}",
+        "dest": "cargo/vendor/gettext-rs-0.7.2",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/gettext-sys/gettext-sys-0.26.0.crate",
-        "sha256": "4ea859ab0dd7e70ff823032b3e077d03d39c965d68c6c10775add60e999d8ee9",
-        "dest": "cargo/vendor/gettext-sys-0.26.0"
+        "url": "https://static.crates.io/crates/gettext-sys/gettext-sys-0.22.5.crate",
+        "sha256": "bb45773f5b8945f12aecd04558f545964f943dacda1b1155b3d738f5469ef661",
+        "dest": "cargo/vendor/gettext-sys-0.22.5"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"4ea859ab0dd7e70ff823032b3e077d03d39c965d68c6c10775add60e999d8ee9\", \"files\": {}}",
-        "dest": "cargo/vendor/gettext-sys-0.26.0",
+        "contents": "{\"package\": \"bb45773f5b8945f12aecd04558f545964f943dacda1b1155b3d738f5469ef661\", \"files\": {}}",
+        "dest": "cargo/vendor/gettext-sys-0.22.5",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -554,14 +541,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/glob/glob-0.3.3.crate",
-        "sha256": "0cc23270f6e1808e30a928bdc84dea0b9b4136a8bc82338574f23baf47bbd280",
-        "dest": "cargo/vendor/glob-0.3.3"
+        "url": "https://static.crates.io/crates/glob/glob-0.3.2.crate",
+        "sha256": "a8d1add55171497b4705a648c6b583acafb01d58050a51727785f0b2c8e0a2b2",
+        "dest": "cargo/vendor/glob-0.3.2"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"0cc23270f6e1808e30a928bdc84dea0b9b4136a8bc82338574f23baf47bbd280\", \"files\": {}}",
-        "dest": "cargo/vendor/glob-0.3.3",
+        "contents": "{\"package\": \"a8d1add55171497b4705a648c6b583acafb01d58050a51727785f0b2c8e0a2b2\", \"files\": {}}",
+        "dest": "cargo/vendor/glob-0.3.2",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -801,27 +788,27 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/libc/libc-0.2.177.crate",
-        "sha256": "2874a2af47a2325c2001a6e6fad9b16a53b802102b528163885171cf92b15976",
-        "dest": "cargo/vendor/libc-0.2.177"
+        "url": "https://static.crates.io/crates/libc/libc-0.2.171.crate",
+        "sha256": "c19937216e9d3aa9956d9bb8dfc0b0c8beb6058fc4f7a4dc4d850edf86a237d6",
+        "dest": "cargo/vendor/libc-0.2.171"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"2874a2af47a2325c2001a6e6fad9b16a53b802102b528163885171cf92b15976\", \"files\": {}}",
-        "dest": "cargo/vendor/libc-0.2.177",
+        "contents": "{\"package\": \"c19937216e9d3aa9956d9bb8dfc0b0c8beb6058fc4f7a4dc4d850edf86a237d6\", \"files\": {}}",
+        "dest": "cargo/vendor/libc-0.2.171",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/libloading/libloading-0.8.9.crate",
-        "sha256": "d7c4b02199fee7c5d21a5ae7d8cfa79a6ef5bb2fc834d6e9058e89c825efdc55",
-        "dest": "cargo/vendor/libloading-0.8.9"
+        "url": "https://static.crates.io/crates/libloading/libloading-0.8.6.crate",
+        "sha256": "fc2f4eb4bc735547cfed7c0a4922cbd04a4655978c09b54f1f7b228750664c34",
+        "dest": "cargo/vendor/libloading-0.8.6"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"d7c4b02199fee7c5d21a5ae7d8cfa79a6ef5bb2fc834d6e9058e89c825efdc55\", \"files\": {}}",
-        "dest": "cargo/vendor/libloading-0.8.9",
+        "contents": "{\"package\": \"fc2f4eb4bc735547cfed7c0a4922cbd04a4655978c09b54f1f7b228750664c34\", \"files\": {}}",
+        "dest": "cargo/vendor/libloading-0.8.6",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -866,14 +853,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/log/log-0.4.28.crate",
-        "sha256": "34080505efa8e45a4b816c349525ebe327ceaa8559756f0356cba97ef3bf7432",
-        "dest": "cargo/vendor/log-0.4.28"
+        "url": "https://static.crates.io/crates/log/log-0.4.26.crate",
+        "sha256": "30bde2b3dc3671ae49d8e2e9f044c7c005836e7a023ee57cffa25ab82764bb9e",
+        "dest": "cargo/vendor/log-0.4.26"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"34080505efa8e45a4b816c349525ebe327ceaa8559756f0356cba97ef3bf7432\", \"files\": {}}",
-        "dest": "cargo/vendor/log-0.4.28",
+        "contents": "{\"package\": \"30bde2b3dc3671ae49d8e2e9f044c7c005836e7a023ee57cffa25ab82764bb9e\", \"files\": {}}",
+        "dest": "cargo/vendor/log-0.4.26",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -996,14 +983,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/once_cell/once_cell-1.21.3.crate",
-        "sha256": "42f5e15c9953c5e4ccceeb2e7382a716482c34515315f7b03532b8b4e8393d2d",
-        "dest": "cargo/vendor/once_cell-1.21.3"
+        "url": "https://static.crates.io/crates/once_cell/once_cell-1.21.1.crate",
+        "sha256": "d75b0bedcc4fe52caa0e03d9f1151a323e4aa5e2d78ba3580400cd3c9e2bc4bc",
+        "dest": "cargo/vendor/once_cell-1.21.1"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"42f5e15c9953c5e4ccceeb2e7382a716482c34515315f7b03532b8b4e8393d2d\", \"files\": {}}",
-        "dest": "cargo/vendor/once_cell-1.21.3",
+        "contents": "{\"package\": \"d75b0bedcc4fe52caa0e03d9f1151a323e4aa5e2d78ba3580400cd3c9e2bc4bc\", \"files\": {}}",
+        "dest": "cargo/vendor/once_cell-1.21.1",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -1100,40 +1087,40 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/proc-macro-crate/proc-macro-crate-3.4.0.crate",
-        "sha256": "219cb19e96be00ab2e37d6e299658a0cfa83e52429179969b0f0121b4ac46983",
-        "dest": "cargo/vendor/proc-macro-crate-3.4.0"
+        "url": "https://static.crates.io/crates/proc-macro-crate/proc-macro-crate-3.3.0.crate",
+        "sha256": "edce586971a4dfaa28950c6f18ed55e0406c1ab88bbce2c6f6293a7aaba73d35",
+        "dest": "cargo/vendor/proc-macro-crate-3.3.0"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"219cb19e96be00ab2e37d6e299658a0cfa83e52429179969b0f0121b4ac46983\", \"files\": {}}",
-        "dest": "cargo/vendor/proc-macro-crate-3.4.0",
+        "contents": "{\"package\": \"edce586971a4dfaa28950c6f18ed55e0406c1ab88bbce2c6f6293a7aaba73d35\", \"files\": {}}",
+        "dest": "cargo/vendor/proc-macro-crate-3.3.0",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/proc-macro2/proc-macro2-1.0.101.crate",
-        "sha256": "89ae43fd86e4158d6db51ad8e2b80f313af9cc74f5c0e03ccb87de09998732de",
-        "dest": "cargo/vendor/proc-macro2-1.0.101"
+        "url": "https://static.crates.io/crates/proc-macro2/proc-macro2-1.0.94.crate",
+        "sha256": "a31971752e70b8b2686d7e46ec17fb38dad4051d94024c88df49b667caea9c84",
+        "dest": "cargo/vendor/proc-macro2-1.0.94"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"89ae43fd86e4158d6db51ad8e2b80f313af9cc74f5c0e03ccb87de09998732de\", \"files\": {}}",
-        "dest": "cargo/vendor/proc-macro2-1.0.101",
+        "contents": "{\"package\": \"a31971752e70b8b2686d7e46ec17fb38dad4051d94024c88df49b667caea9c84\", \"files\": {}}",
+        "dest": "cargo/vendor/proc-macro2-1.0.94",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/quote/quote-1.0.41.crate",
-        "sha256": "ce25767e7b499d1b604768e7cde645d14cc8584231ea6b295e9c9eb22c02e1d1",
-        "dest": "cargo/vendor/quote-1.0.41"
+        "url": "https://static.crates.io/crates/quote/quote-1.0.40.crate",
+        "sha256": "1885c039570dc00dcb4ff087a89e185fd56bae234ddc7f056a945bf36467248d",
+        "dest": "cargo/vendor/quote-1.0.40"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"ce25767e7b499d1b604768e7cde645d14cc8584231ea6b295e9c9eb22c02e1d1\", \"files\": {}}",
-        "dest": "cargo/vendor/quote-1.0.41",
+        "contents": "{\"package\": \"1885c039570dc00dcb4ff087a89e185fd56bae234ddc7f056a945bf36467248d\", \"files\": {}}",
+        "dest": "cargo/vendor/quote-1.0.40",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -1165,40 +1152,40 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/regex/regex-1.12.2.crate",
-        "sha256": "843bc0191f75f3e22651ae5f1e72939ab2f72a4bc30fa80a066bd66edefc24d4",
-        "dest": "cargo/vendor/regex-1.12.2"
+        "url": "https://static.crates.io/crates/regex/regex-1.11.1.crate",
+        "sha256": "b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191",
+        "dest": "cargo/vendor/regex-1.11.1"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"843bc0191f75f3e22651ae5f1e72939ab2f72a4bc30fa80a066bd66edefc24d4\", \"files\": {}}",
-        "dest": "cargo/vendor/regex-1.12.2",
+        "contents": "{\"package\": \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\", \"files\": {}}",
+        "dest": "cargo/vendor/regex-1.11.1",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/regex-automata/regex-automata-0.4.13.crate",
-        "sha256": "5276caf25ac86c8d810222b3dbb938e512c55c6831a10f3e6ed1c93b84041f1c",
-        "dest": "cargo/vendor/regex-automata-0.4.13"
+        "url": "https://static.crates.io/crates/regex-automata/regex-automata-0.4.9.crate",
+        "sha256": "809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908",
+        "dest": "cargo/vendor/regex-automata-0.4.9"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"5276caf25ac86c8d810222b3dbb938e512c55c6831a10f3e6ed1c93b84041f1c\", \"files\": {}}",
-        "dest": "cargo/vendor/regex-automata-0.4.13",
+        "contents": "{\"package\": \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\", \"files\": {}}",
+        "dest": "cargo/vendor/regex-automata-0.4.9",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/regex-syntax/regex-syntax-0.8.8.crate",
-        "sha256": "7a2d987857b319362043e95f5353c0535c1f58eec5336fdfcf626430af7def58",
-        "dest": "cargo/vendor/regex-syntax-0.8.8"
+        "url": "https://static.crates.io/crates/regex-syntax/regex-syntax-0.8.5.crate",
+        "sha256": "2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c",
+        "dest": "cargo/vendor/regex-syntax-0.8.5"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"7a2d987857b319362043e95f5353c0535c1f58eec5336fdfcf626430af7def58\", \"files\": {}}",
-        "dest": "cargo/vendor/regex-syntax-0.8.8",
+        "contents": "{\"package\": \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\", \"files\": {}}",
+        "dest": "cargo/vendor/regex-syntax-0.8.5",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -1230,14 +1217,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/semver/semver-1.0.27.crate",
-        "sha256": "d767eb0aabc880b29956c35734170f26ed551a859dbd361d140cdbeca61ab1e2",
-        "dest": "cargo/vendor/semver-1.0.27"
+        "url": "https://static.crates.io/crates/semver/semver-1.0.26.crate",
+        "sha256": "56e6fa9c48d24d85fb3de5ad847117517440f6beceb7798af16b4a87d616b8d0",
+        "dest": "cargo/vendor/semver-1.0.26"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"d767eb0aabc880b29956c35734170f26ed551a859dbd361d140cdbeca61ab1e2\", \"files\": {}}",
-        "dest": "cargo/vendor/semver-1.0.27",
+        "contents": "{\"package\": \"56e6fa9c48d24d85fb3de5ad847117517440f6beceb7798af16b4a87d616b8d0\", \"files\": {}}",
+        "dest": "cargo/vendor/semver-1.0.26",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -1282,14 +1269,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/serde_spanned/serde_spanned-0.6.9.crate",
-        "sha256": "bf41e0cfaf7226dca15e8197172c295a782857fcb97fad1808a166870dee75a3",
-        "dest": "cargo/vendor/serde_spanned-0.6.9"
+        "url": "https://static.crates.io/crates/serde_spanned/serde_spanned-0.6.8.crate",
+        "sha256": "87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1",
+        "dest": "cargo/vendor/serde_spanned-0.6.8"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"bf41e0cfaf7226dca15e8197172c295a782857fcb97fad1808a166870dee75a3\", \"files\": {}}",
-        "dest": "cargo/vendor/serde_spanned-0.6.9",
+        "contents": "{\"package\": \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\", \"files\": {}}",
+        "dest": "cargo/vendor/serde_spanned-0.6.8",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -1308,14 +1295,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/slab/slab-0.4.11.crate",
-        "sha256": "7a2ae44ef20feb57a68b23d846850f861394c2e02dc425a50098ae8c90267589",
-        "dest": "cargo/vendor/slab-0.4.11"
+        "url": "https://static.crates.io/crates/slab/slab-0.4.9.crate",
+        "sha256": "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67",
+        "dest": "cargo/vendor/slab-0.4.9"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"7a2ae44ef20feb57a68b23d846850f861394c2e02dc425a50098ae8c90267589\", \"files\": {}}",
-        "dest": "cargo/vendor/slab-0.4.11",
+        "contents": "{\"package\": \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\", \"files\": {}}",
+        "dest": "cargo/vendor/slab-0.4.9",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -1373,14 +1360,14 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/temp-dir/temp-dir-0.1.16.crate",
-        "sha256": "83176759e9416cf81ee66cb6508dbfe9c96f20b8b56265a39917551c23c70964",
-        "dest": "cargo/vendor/temp-dir-0.1.16"
+        "url": "https://static.crates.io/crates/temp-dir/temp-dir-0.1.14.crate",
+        "sha256": "bc1ee6eef34f12f765cb94725905c6312b6610ab2b0940889cfe58dae7bc3c72",
+        "dest": "cargo/vendor/temp-dir-0.1.14"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"83176759e9416cf81ee66cb6508dbfe9c96f20b8b56265a39917551c23c70964\", \"files\": {}}",
-        "dest": "cargo/vendor/temp-dir-0.1.16",
+        "contents": "{\"package\": \"bc1ee6eef34f12f765cb94725905c6312b6610ab2b0940889cfe58dae7bc3c72\", \"files\": {}}",
+        "dest": "cargo/vendor/temp-dir-0.1.14",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -1412,92 +1399,53 @@
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/toml/toml-0.8.23.crate",
-        "sha256": "dc1beb996b9d83529a9e75c17a1686767d148d70663143c7854d8b4a09ced362",
-        "dest": "cargo/vendor/toml-0.8.23"
-    },
-    {
-        "type": "inline",
-        "contents": "{\"package\": \"dc1beb996b9d83529a9e75c17a1686767d148d70663143c7854d8b4a09ced362\", \"files\": {}}",
-        "dest": "cargo/vendor/toml-0.8.23",
-        "dest-filename": ".cargo-checksum.json"
-    },
-    {
-        "type": "archive",
-        "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/toml_datetime/toml_datetime-0.6.11.crate",
-        "sha256": "22cddaf88f4fbc13c51aebbf5f8eceb5c7c5a9da2ac40a13519eb5b0a0e8f11c",
-        "dest": "cargo/vendor/toml_datetime-0.6.11"
-    },
-    {
-        "type": "inline",
-        "contents": "{\"package\": \"22cddaf88f4fbc13c51aebbf5f8eceb5c7c5a9da2ac40a13519eb5b0a0e8f11c\", \"files\": {}}",
-        "dest": "cargo/vendor/toml_datetime-0.6.11",
-        "dest-filename": ".cargo-checksum.json"
-    },
-    {
-        "type": "archive",
-        "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/toml_datetime/toml_datetime-0.7.3.crate",
-        "sha256": "f2cdb639ebbc97961c51720f858597f7f24c4fc295327923af55b74c3c724533",
-        "dest": "cargo/vendor/toml_datetime-0.7.3"
-    },
-    {
-        "type": "inline",
-        "contents": "{\"package\": \"f2cdb639ebbc97961c51720f858597f7f24c4fc295327923af55b74c3c724533\", \"files\": {}}",
-        "dest": "cargo/vendor/toml_datetime-0.7.3",
-        "dest-filename": ".cargo-checksum.json"
-    },
-    {
-        "type": "archive",
-        "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/toml_edit/toml_edit-0.22.27.crate",
-        "sha256": "41fe8c660ae4257887cf66394862d21dbca4a6ddd26f04a3560410406a2f819a",
-        "dest": "cargo/vendor/toml_edit-0.22.27"
+        "url": "https://static.crates.io/crates/toml/toml-0.8.20.crate",
+        "sha256": "cd87a5cdd6ffab733b2f74bc4fd7ee5fff6634124999ac278c35fc78c6120148",
+        "dest": "cargo/vendor/toml-0.8.20"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"41fe8c660ae4257887cf66394862d21dbca4a6ddd26f04a3560410406a2f819a\", \"files\": {}}",
-        "dest": "cargo/vendor/toml_edit-0.22.27",
+        "contents": "{\"package\": \"cd87a5cdd6ffab733b2f74bc4fd7ee5fff6634124999ac278c35fc78c6120148\", \"files\": {}}",
+        "dest": "cargo/vendor/toml-0.8.20",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/toml_edit/toml_edit-0.23.7.crate",
-        "sha256": "6485ef6d0d9b5d0ec17244ff7eb05310113c3f316f2d14200d4de56b3cb98f8d",
-        "dest": "cargo/vendor/toml_edit-0.23.7"
+        "url": "https://static.crates.io/crates/toml_datetime/toml_datetime-0.6.8.crate",
+        "sha256": "0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41",
+        "dest": "cargo/vendor/toml_datetime-0.6.8"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"6485ef6d0d9b5d0ec17244ff7eb05310113c3f316f2d14200d4de56b3cb98f8d\", \"files\": {}}",
-        "dest": "cargo/vendor/toml_edit-0.23.7",
+        "contents": "{\"package\": \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\", \"files\": {}}",
+        "dest": "cargo/vendor/toml_datetime-0.6.8",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/toml_parser/toml_parser-1.0.4.crate",
-        "sha256": "c0cbe268d35bdb4bb5a56a2de88d0ad0eb70af5384a99d648cd4b3d04039800e",
-        "dest": "cargo/vendor/toml_parser-1.0.4"
+        "url": "https://static.crates.io/crates/toml_edit/toml_edit-0.22.24.crate",
+        "sha256": "17b4795ff5edd201c7cd6dca065ae59972ce77d1b80fa0a84d94950ece7d1474",
+        "dest": "cargo/vendor/toml_edit-0.22.24"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"c0cbe268d35bdb4bb5a56a2de88d0ad0eb70af5384a99d648cd4b3d04039800e\", \"files\": {}}",
-        "dest": "cargo/vendor/toml_parser-1.0.4",
+        "contents": "{\"package\": \"17b4795ff5edd201c7cd6dca065ae59972ce77d1b80fa0a84d94950ece7d1474\", \"files\": {}}",
+        "dest": "cargo/vendor/toml_edit-0.22.24",
         "dest-filename": ".cargo-checksum.json"
     },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/unicode-ident/unicode-ident-1.0.20.crate",
-        "sha256": "462eeb75aeb73aea900253ce739c8e18a67423fadf006037cd3ff27e82748a06",
-        "dest": "cargo/vendor/unicode-ident-1.0.20"
+        "url": "https://static.crates.io/crates/unicode-ident/unicode-ident-1.0.18.crate",
+        "sha256": "5a5f39404a5da50712a4c1eecf25e90dd62b613502b7e925fd4e4d19b5c96512",
+        "dest": "cargo/vendor/unicode-ident-1.0.18"
     },
     {
         "type": "inline",
-        "contents": "{\"package\": \"462eeb75aeb73aea900253ce739c8e18a67423fadf006037cd3ff27e82748a06\", \"files\": {}}",
-        "dest": "cargo/vendor/unicode-ident-1.0.20",
+        "contents": "{\"package\": \"5a5f39404a5da50712a4c1eecf25e90dd62b613502b7e925fd4e4d19b5c96512\", \"files\": {}}",
+        "dest": "cargo/vendor/unicode-ident-1.0.18",
         "dest-filename": ".cargo-checksum.json"
     },
     {
@@ -1591,19 +1539,6 @@
         "dest": "cargo/vendor/winapi-x86_64-pc-windows-gnu-0.4.0",
         "dest-filename": ".cargo-checksum.json"
     },
-    {
-        "type": "archive",
-        "archive-type": "tar-gzip",
-        "url": "https://static.crates.io/crates/windows-link/windows-link-0.2.1.crate",
-        "sha256": "f0805222e57f7521d6a62e36fa9163bc891acd422f971defe97d64e70d0a4fe5",
-        "dest": "cargo/vendor/windows-link-0.2.1"
-    },
-    {
-        "type": "inline",
-        "contents": "{\"package\": \"f0805222e57f7521d6a62e36fa9163bc891acd422f971defe97d64e70d0a4fe5\", \"files\": {}}",
-        "dest": "cargo/vendor/windows-link-0.2.1",
-        "dest-filename": ".cargo-checksum.json"
-    },
     {
         "type": "archive",
         "archive-type": "tar-gzip",
@@ -1750,12 +1685,12 @@
     {
         "type": "shell",
         "commands": [
-            "cp -r --reflink=auto \"flatpak-cargo/git/wireplumber.rs-ef3407c/.\" \"cargo/vendor/wireplumber\""
+            "cp -r --reflink=auto \"flatpak-cargo/git/wireplumber.rs-f6f4332/.\" \"cargo/vendor/wireplumber\""
         ]
     },
     {
         "type": "inline",
-        "contents": "[package]\nname = \"wireplumber\"\nversion = \"0.1.0\"\nauthors = [ \"arcnmx\",]\nbuild = \"build.rs\"\nedition = \"2021\"\nrust-version = \"1.70\"\ndescription = \"WirePlumber bindings\"\nkeywords = [ \"pipewire\", \"wireplumber\", \"gobject\",]\ncategories = [ \"multimedia::audio\", \"api-bindings\",]\ndocumentation = \"https://arcnmx.github.io/wireplumber.rs/v0.1.0/wireplumber/\"\nrepository = \"https://github.com/arcnmx/wireplumber.rs\"\nreadme = \"src/README.md\"\nlicense = \"MIT\"\ninclude = [ \"/src/**\", \"/build.rs\", \"/COPYING*\",]\n\n[dependencies]\nlibc = \"0.2\"\nbitflags = \"2\"\n\n[build-dependencies]\npkg-config = \"0.3\"\nsemver = \"1.0\"\n\n[features]\ndefault = []\nlua = []\nexperimental = []\nglib-signal = [ \"dep:glib-signal\",]\nfutures = [ \"glib-signal?/futures\", \"dep:futures-channel\",]\nlibspa = [ \"dep:libspa\",]\nserde = [ \"dep:serde\",]\nv0_4_2 = [ \"ffi/v0_4_2\",]\nv0_4_3 = [ \"ffi/v0_4_3\", \"v0_4_2\",]\nv0_4_5 = [ \"ffi/v0_4_5\", \"v0_4_3\",]\nv0_4_6 = [ \"ffi/v0_4_6\", \"v0_4_5\",]\nv0_4_8 = [ \"ffi/v0_4_8\", \"v0_4_6\",]\nv0_4_10 = [ \"ffi/v0_4_10\", \"v0_4_8\",]\nv0_4_11 = [ \"ffi/v0_4_11\", \"v0_4_10\",]\nv0_4_12 = [ \"ffi/v0_4_12\", \"v0_4_11\",]\nv0_4_15 = [ \"ffi/v0_4_15\", \"v0_4_12\",]\nv0_4_16 = [ \"ffi/v0_4_16\", \"v0_4_15\",]\n\n[workspace]\nmembers = [ \"sys\", \"examples\",]\n\n[package.metadata]\nbranches = [ \"main\", \"dev\",]\n\n[badges.maintenance]\nstatus = \"actively-maintained\"\n\n[dependencies.glib]\nversion = \"0.19\"\n\n[dependencies.gio]\nversion = \"0.19\"\n\n[dependencies.pipewire-sys]\nversion = \"0.8\"\n\n[dependencies.libspa-sys]\nversion = \"0.8\"\n\n[dependencies.libspa]\nversion = \"0.8\"\noptional = true\n\n[dependencies.serde]\nversion = \"1.0\"\noptional = true\n\n[dependencies.ffi]\nversion = \"0.1.0\"\npath = \"sys\"\npackage = \"wireplumber-sys\"\n\n[dependencies.futures-channel]\nversion = \"0.3\"\noptional = true\n\n[dependencies.glib-signal]\nversion = \"0.4\"\noptional = true\n\n[dev-dependencies.futures-util]\nversion = \"0.3\"\n\n[package.metadata.docs.rs]\nfeatures = [ \"v0_4_16\", \"lua\", \"experimental\", \"glib-signal\", \"libspa\", \"futures\", \"serde\",]\nrustc-args = [ \"--cfg\", \"docsrs\",]\nrustdoc-args = [ \"--cfg\", \"docsrs\", \"--generate-link-to-definition\",]\n",
+        "contents": "[package]\nname = \"wireplumber\"\nversion = \"0.2.0\"\nauthors = [ \"arcnmx\",]\nbuild = \"build.rs\"\nedition = \"2021\"\nrust-version = \"1.70\"\ndescription = \"WirePlumber bindings\"\nkeywords = [ \"pipewire\", \"wireplumber\", \"gobject\",]\ncategories = [ \"multimedia::audio\", \"api-bindings\",]\ndocumentation = \"https://arcnmx.github.io/wireplumber.rs/v0.2.0/wireplumber/\"\nrepository = \"https://github.com/arcnmx/wireplumber.rs\"\nreadme = \"src/README.md\"\nlicense = \"MIT\"\ninclude = [ \"/src/**\", \"/build.rs\", \"/COPYING*\",]\n\n[dependencies]\nlibc = \"0.2\"\nbitflags = \"2\"\n\n[build-dependencies]\npkg-config = \"0.3\"\nsemver = \"1.0\"\n\n[features]\ndefault = [ \"v0_5\",]\nlua = []\nexperimental = []\nglib-signal = [ \"dep:glib-signal\",]\nfutures = [ \"glib-signal?/futures\", \"dep:futures-channel\",]\nlibspa = [ \"dep:libspa\",]\nserde = [ \"dep:serde\",]\nv0_5 = [ \"ffi/v0_5\", \"v0_4_16\",]\nv0_4_2 = []\nv0_4_3 = [ \"v0_4_2\",]\nv0_4_5 = [ \"v0_4_3\",]\nv0_4_6 = [ \"v0_4_5\",]\nv0_4_8 = [ \"v0_4_6\",]\nv0_4_10 = [ \"v0_4_8\",]\nv0_4_11 = [ \"v0_4_10\",]\nv0_4_12 = [ \"v0_4_11\",]\nv0_4_15 = [ \"v0_4_12\",]\nv0_4_16 = [ \"v0_4_15\",]\n\n[workspace]\nmembers = [ \"sys\", \"examples\",]\n\n[package.metadata]\nbranches = [ \"main\", \"dev\",]\n\n[badges.maintenance]\nstatus = \"actively-maintained\"\n\n[dependencies.glib]\nversion = \"0.19\"\n\n[dependencies.gio]\nversion = \"0.19\"\n\n[dependencies.pipewire-sys]\nversion = \"0.8\"\n\n[dependencies.libspa-sys]\nversion = \"0.8\"\n\n[dependencies.libspa]\nversion = \"0.8\"\noptional = true\n\n[dependencies.serde]\nversion = \"1.0\"\noptional = true\n\n[dependencies.ffi]\nversion = \"0.2.0\"\npath = \"sys\"\npackage = \"wireplumber-sys\"\n\n[dependencies.futures-channel]\nversion = \"0.3\"\noptional = true\n\n[dependencies.glib-signal]\nversion = \"0.4\"\noptional = true\n\n[dev-dependencies.futures-util]\nversion = \"0.3\"\n\n[package.metadata.docs.rs]\nfeatures = [ \"v0_5\", \"lua\", \"experimental\", \"glib-signal\", \"libspa\", \"futures\", \"serde\",]\nrustc-args = [ \"--cfg\", \"docsrs\",]\nrustdoc-args = [ \"--cfg\", \"docsrs\", \"--generate-link-to-definition\",]\n",
         "dest": "cargo/vendor/wireplumber",
         "dest-filename": "Cargo.toml"
     },
@@ -1768,12 +1703,12 @@
     {
         "type": "shell",
         "commands": [
-            "cp -r --reflink=auto \"flatpak-cargo/git/wireplumber.rs-ef3407c/sys\" \"cargo/vendor/wireplumber-sys\""
+            "cp -r --reflink=auto \"flatpak-cargo/git/wireplumber.rs-f6f4332/sys\" \"cargo/vendor/wireplumber-sys\""
         ]
     },
     {
         "type": "inline",
-        "contents": "[package]\nname = \"wireplumber-sys\"\nversion = \"0.1.0\"\nedition = \"2021\"\nbuild = \"./generate/build.rs\"\ndescription = \"WirePlumber FFI bindings\"\nkeywords = [ \"pipewire\",]\ncategories = [ \"external-ffi-bindings\",]\ndocumentation = \"https://arcnmx.github.io/wireplumber.rs/v0.1.0/wireplumber_sys/\"\nhomepage = \"https://arcnmx.github.io/wireplumber.rs/\"\nrepository = \"https://github.com/arcnmx/wireplumber.rs/tree/main/sys\"\nreadme = \"src/README.md\"\nlicense = \"MIT\"\ninclude = [ \"/src/**\", \"/generate/build.rs\", \"/generate/build_version.rs\", \"/generate/src/lib.rs\", \"/build.rs\",]\n\n[dependencies]\nlibc = \"0.2\"\n\n[build-dependencies]\nsystem-deps = \"6\"\n\n[dev-dependencies]\nshell-words = \"1.0.0\"\ntempfile = \"3\"\n\n[features]\nv0_4_2 = []\nv0_4_3 = [ \"v0_4_2\",]\nv0_4_5 = [ \"v0_4_3\",]\nv0_4_6 = [ \"v0_4_5\",]\nv0_4_8 = [ \"v0_4_6\",]\nv0_4_10 = [ \"v0_4_8\",]\nv0_4_11 = [ \"v0_4_10\",]\nv0_4_12 = [ \"v0_4_11\",]\nv0_4_15 = [ \"v0_4_12\",]\nv0_4_16 = [ \"v0_4_15\",]\n\n[dependencies.glib-sys]\nversion = \"0.19\"\n\n[dependencies.gobject-sys]\nversion = \"0.19\"\n\n[dependencies.gio-sys]\nversion = \"0.19\"\n\n[dependencies.pipewire]\nversion = \"0.8\"\npackage = \"pipewire-sys\"\n\n[dependencies.libspa]\nversion = \"0.8\"\npackage = \"libspa-sys\"\n\n[package.metadata.system-deps.wireplumber_0_4]\nname = \"wireplumber-0.4\"\nversion = \"0.4\"\n\n[package.metadata.docs.rs]\nfeatures = [ \"v0_4_16\",]\nrustc-args = [ \"--cfg\", \"docsrs\",]\nrustdoc-args = [ \"--cfg\", \"docsrs\", \"--generate-link-to-definition\",]\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_2]\nversion = \"0.4.2\"\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_3]\nversion = \"0.4.3\"\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_5]\nversion = \"0.4.5\"\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_6]\nversion = \"0.4.6\"\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_8]\nversion = \"0.4.8\"\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_10]\nversion = \"0.4.10\"\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_11]\nversion = \"0.4.11\"\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_12]\nversion = \"0.4.12\"\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_15]\nversion = \"0.4.15\"\n\n[package.metadata.system-deps.wireplumber_0_4.v0_4_16]\nversion = \"0.4.16\"\n",
+        "contents": "[package]\nname = \"wireplumber-sys\"\nversion = \"0.2.0\"\nedition = \"2021\"\nbuild = \"./generate/build.rs\"\ndescription = \"WirePlumber FFI bindings\"\nkeywords = [ \"pipewire\",]\ncategories = [ \"external-ffi-bindings\",]\ndocumentation = \"https://arcnmx.github.io/wireplumber.rs/v0.2.0/wireplumber_sys/\"\nhomepage = \"https://arcnmx.github.io/wireplumber.rs/\"\nrepository = \"https://github.com/arcnmx/wireplumber.rs/tree/main/sys\"\nreadme = \"src/README.md\"\nlicense = \"MIT\"\ninclude = [ \"/src/**\", \"/generate/build.rs\", \"/generate/build_version.rs\", \"/generate/src/lib.rs\", \"/build.rs\",]\n\n[dependencies]\nlibc = \"0.2\"\n\n[build-dependencies]\nsystem-deps = \"6\"\n\n[dev-dependencies]\nshell-words = \"1.0.0\"\ntempfile = \"3\"\n\n[features]\ndefault = [ \"v0_5\",]\nv0_5 = []\n\n[dependencies.glib-sys]\nversion = \"0.19\"\n\n[dependencies.gobject-sys]\nversion = \"0.19\"\n\n[dependencies.gio-sys]\nversion = \"0.19\"\n\n[dependencies.pipewire]\nversion = \"0.8\"\npackage = \"pipewire-sys\"\n\n[dependencies.libspa]\nversion = \"0.8\"\npackage = \"libspa-sys\"\n\n[package.metadata.system-deps.wireplumber_0_5]\nname = \"wireplumber-0.5\"\nversion = \"0.5\"\n\n[package.metadata.docs.rs]\nfeatures = [ \"v0_5\",]\nrustc-args = [ \"--cfg\", \"docsrs\",]\nrustdoc-args = [ \"--cfg\", \"docsrs\", \"--generate-link-to-definition\",]\n",
         "dest": "cargo/vendor/wireplumber-sys",
         "dest-filename": "Cargo.toml"
     },
@@ -1798,7 +1733,7 @@
     },
     {
         "type": "inline",
-        "contents": "[source.vendored-sources]\ndirectory = \"cargo/vendor\"\n\n[source.crates-io]\nreplace-with = \"vendored-sources\"\n\n[source.\"https://github.com/arcnmx/wireplumber.rs\"]\ngit = \"https://github.com/arcnmx/wireplumber.rs\"\nreplace-with = \"vendored-sources\"\nrev = \"ef3407c623840fa855dbe12c2574875e01ff361d\"\n",
+        "contents": "[source.vendored-sources]\ndirectory = \"cargo/vendor\"\n\n[source.crates-io]\nreplace-with = \"vendored-sources\"\n\n[source.\"https://github.com/arcnmx/wireplumber.rs\"]\ngit = \"https://github.com/arcnmx/wireplumber.rs\"\nreplace-with = \"vendored-sources\"\nbranch = \"wp-0.5\"\n",
         "dest": "cargo",
         "dest-filename": "config"
     }
diff --git a/build-aux/com.saivert.pwvucontrol.json b/build-aux/com.saivert.pwvucontrol.json
index be6d1d6..8e8ca4b 100644
--- a/build-aux/com.saivert.pwvucontrol.json
+++ b/build-aux/com.saivert.pwvucontrol.json
@@ -54,12 +54,8 @@
             "sources": [
                 {
                     "type": "git",
-                    "tag": "0.4.17",
+                    "tag": "0.5.12",
                     "url": "https://github.com/PipeWire/wireplumber.git"
-                },
-                {
-                    "type": "patch",
-                    "path": "0001-node-cast-proxy-to-pw_node-when-calling-pw_node-func.patch"
                 }
             ]
         },
diff --git a/data/com.saivert.pwvucontrol.metainfo.xml.in.in b/data/com.saivert.pwvucontrol.metainfo.xml.in.in
index 5825355..c2a7f53 100644
--- a/data/com.saivert.pwvucontrol.metainfo.xml.in.in
+++ b/data/com.saivert.pwvucontrol.metainfo.xml.in.in
@@ -22,16 +22,7 @@
   <url type="bugtracker">https://github.com/saivert/pwvucontrol/issues</url>
   <content_rating type="oars-1.0" />
   <releases>
-    <release version="0.5.1" date="2025-10-22">
-      <description>
-        <p>Changelog since 0.5.0</p>
-        <ul>
-          <li>More granular LED blocks in the peak meter.</li>
-          <li>Now saves the selected card profile.</li>
-        </ul>
-      </description>
-    </release>
-    <release version="0.5.0" date="2025-10-17">
+      <release version="0.5.0" date="2025-10-17">
       <description>
         <p>Changelog since 0.4.9</p>
         <ul>
diff --git a/meson.build b/meson.build
index 8ab0021..678fbdf 100644
--- a/meson.build
+++ b/meson.build
@@ -1,5 +1,5 @@
 project('pwvucontrol', 'rust', 
-          version: '0.5.1',
+          version: '0.5.0',
     meson_version: '>= 0.59.0',
   default_options: [ 'warning_level=2', 'werror=false', ],
 )
@@ -14,7 +14,7 @@ dependency('gio-2.0', version: '>= 2.66')
 dependency('gtk4', version: '>= 4.0.0')
 dependency('libadwaita-1', version: '>= 1.2')
 dependency('libpipewire-0.3', version: '>= 0.3.83')
-dependency('wireplumber-0.4', version: '>= 0.4.15')
+dependency('wireplumber-0.5', version: '>= 0.5.8')
 
 find_program('glib-compile-resources', required: true)
 glib_compile_schemas = find_program('glib-compile-schemas', required: true)
diff --git a/po/ru.po b/po/ru.po
index 8bafe52..c6c26da 100644
--- a/po/ru.po
+++ b/po/ru.po
@@ -1,21 +1,21 @@
 # Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
 # This file is distributed under the same license as the PACKAGE package.
 #
-# SPDX-FileCopyrightText: 2024, 2025 Olesya Gerasimenko <translation-team@basealt.ru>
+# SPDX-FileCopyrightText: 2024 Olesya Gerasimenko <translation-team@basealt.ru>
 msgid ""
 msgstr ""
 "Project-Id-Version: \n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2025-10-13 22:10+0200\n"
-"PO-Revision-Date: 2025-10-20 09:25+0300\n"
-"Last-Translator: Olesya Gerasimenko <goa@altlinux.org>\n"
+"PO-Revision-Date: 2024-07-16 16:42+0300\n"
+"Last-Translator: Olesya Gerasimenko <translation-team@basealt.ru>\n"
 "Language-Team: Basealt Translation Team\n"
 "Language: ru\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
-"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<"
-"=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
+"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
+"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
 "X-Generator: Lokalize 23.08.5\n"
 
 #: data/com.saivert.pwvucontrol.desktop.in.in:2
@@ -28,8 +28,9 @@ msgid "Pipewire Volume Control"
 msgstr "Управление громкостью pipewire"
 
 #: data/com.saivert.pwvucontrol.desktop.in.in:9
+#, fuzzy
 msgid "PipeWire;Volume;Audio;Mixer;Control;Sound"
-msgstr "PipeWire;Громкость;Аудио;Микшер;Управление;Звук"
+msgstr "Управление громкостью pipewire"
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:8
 msgid "Volume control for pipewire"
@@ -51,19 +52,15 @@ msgstr "Журнал изменений с 0.4.8"
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:29
 msgid "Add LED peak meter option."
-msgstr "Добавлена опция светодиодного измерителя пиков."
+msgstr ""
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:30
 msgid "Add beep on volume change option (only output devices)."
 msgstr ""
-"Добавлен звуковой сигнал для опции изменения громкости (только устройства "
-"вывода)."
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:31
 msgid "Show product name in port dropdown (e.g. for HDMI ports)."
 msgstr ""
-"Отображение имени продукта в раскрывающемся списке портов (например, для "
-"портов HDMI)."
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:37
 msgid "Changelog since 0.4.7"
@@ -72,12 +69,10 @@ msgstr "Журнал изменений с 0.4.7"
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:39
 msgid "Fix displaying of default device name in stream dropdown."
 msgstr ""
-"Исправлено отображение имени устройства по умолчанию в раскрывающемся списке "
-"потоков."
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:40
 msgid "Increase responsiveness of peak meters."
-msgstr "Повышена скорость ответа измерителей пиков."
+msgstr ""
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:46
 msgid "Changelog since 0.4.6"
@@ -85,7 +80,7 @@ msgstr "Журнал изменений с 0.4.6"
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:48
 msgid "Fix crash when selecting Pro Audio profile."
-msgstr "Исправлен сбой программы при выборе профиля Pro Audio."
+msgstr ""
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:54
 msgid "Changelog since 0.4.5"
@@ -94,13 +89,10 @@ msgstr "Журнал изменений с 0.4.5"
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:56
 msgid "Added polish, georgian, russian and french translation."
 msgstr ""
-"Добавлены переводы на польский, грузинский, русский и французский языки."
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:57
 msgid "Fix not all ports being visible in device port dropdown."
 msgstr ""
-"Исправлено отображение не всех портов в раскрывающем списке портов "
-"устройства."
 
 #: data/com.saivert.pwvucontrol.metainfo.xml.in.in:63
 msgid "Changelog since 0.4.4"
@@ -176,25 +168,23 @@ msgstr "Включить уровень звука выше 100%"
 
 #: data/com.saivert.pwvucontrol.gschema.xml.in:26
 msgid "Use led style peak meter"
-msgstr "Использовать светодиодный измеритель пиков"
+msgstr ""
 
 #: data/com.saivert.pwvucontrol.gschema.xml.in:31
 msgid "Play system beep on volume change"
-msgstr "Воспроизводить системный звуковой сигнал при изменении громкости"
+msgstr ""
 
 #: data/com.saivert.pwvucontrol.gschema.xml.in:32
 msgid "Lets you preview the sound level even if you don't play any audio."
 msgstr ""
-"Позволяет получить представление об уровне громкости даже без "
-"воспроизведения какого-либо аудио."
 
 #: data/com.saivert.pwvucontrol.gschema.xml.in:36
 msgid "The last tab that was open"
-msgstr "Последняя открытая вкладка"
+msgstr ""
 
 #: data/com.saivert.pwvucontrol.gschema.xml.in:37
 msgid "Stores the last tab that was open."
-msgstr "Сохраняет последнюю открытую вкладку."
+msgstr ""
 
 #: data/resources/ui/window.ui:40
 msgid "Lost connection to Pipewire server!"
@@ -210,7 +200,7 @@ msgstr "Воспроизведение"
 
 #: data/resources/ui/window.ui:98
 msgid "No applications currently playing audio"
-msgstr "Ни одно из приложений сейчас не воспроизводит звук"
+msgstr ""
 
 #: data/resources/ui/window.ui:152
 msgid "Recording"
@@ -218,23 +208,25 @@ msgstr "Запись"
 
 #: data/resources/ui/window.ui:163
 msgid "No applications currently recording audio"
-msgstr "Ни одно из приложений сейчас не записывает звук"
+msgstr ""
 
 #: data/resources/ui/window.ui:217
 msgid "Input Devices"
 msgstr "Устройства ввода"
 
 #: data/resources/ui/window.ui:227
+#, fuzzy
 msgid "No input devices found"
-msgstr "Устройства ввода не найдены"
+msgstr "Устройства ввода"
 
 #: data/resources/ui/window.ui:281
 msgid "Output Devices"
 msgstr "Устройства вывода"
 
 #: data/resources/ui/window.ui:292
+#, fuzzy
 msgid "No output devices found"
-msgstr "Устройства вывода не найдены"
+msgstr "Устройства вывода"
 
 #: data/resources/ui/window.ui:347
 msgid "Cards"
@@ -246,7 +238,7 @@ msgstr "_Включить уровень звука выше 100%"
 
 #: data/resources/ui/window.ui:403
 msgid "Use led peak meter"
-msgstr "Использовать светодиодный измеритель пиков"
+msgstr ""
 
 #: data/resources/ui/window.ui:407
 msgid "_Keyboard Shortcuts"
@@ -254,7 +246,7 @@ msgstr "_Комбинации клавиш"
 
 #: data/resources/ui/window.ui:411
 msgid "Beep on volume changes"
-msgstr "Издавать звук при изменении громкости"
+msgstr ""
 
 #: data/resources/ui/window.ui:415
 msgid "_About Pwvucontrol"
@@ -282,11 +274,12 @@ msgstr "Выйти"
 
 #: data/resources/ui/volumebox.ui:81
 msgid "Mute audio"
-msgstr "Отключить звук"
+msgstr ""
 
 #: data/resources/ui/volumebox.ui:95
+#, fuzzy
 msgid "Lock channels together"
-msgstr "Связать каналы"
+msgstr "Заблокировать каналы"
 
 #: data/resources/ui/volumebox.ui:133
 msgid "_Advanced"
@@ -347,7 +340,3 @@ msgstr ""
 
 #~ msgid "GTK"
 #~ msgstr "GTK"
-
-#~ msgid "Volume"
-#~ msgstr "Громкость"
-
diff --git a/src/backend/manager.rs b/src/backend/manager.rs
index 2c90239..725dc1c 100644
--- a/src/backend/manager.rs
+++ b/src/backend/manager.rs
@@ -11,12 +11,16 @@ use gtk::{
 use std::cell::{OnceCell, RefCell};
 use wireplumber as wp;
 use wp::{
-    plugin::{PluginFeatures, *},
+    plugin::*,
     pw::{MetadataExt, PipewireObjectExt2, ProxyExt},
     registry::{Constraint, ConstraintType, Interest, ObjectManager},
 };
 
 mod imp {
+    use std::cell::Cell;
+
+    use wireplumber::core::ObjectExt2;
+
     use super::*;
 
     #[derive(Properties)]
@@ -56,6 +60,8 @@ mod imp {
 
         #[property(get, set, construct_only)]
         application: RefCell<Option<PwvucontrolApplication>>,
+
+        pub plugin_count: Cell<u32>,
     }
 
     impl Default for PwvucontrolManager {
@@ -75,6 +81,7 @@ mod imp {
                 default_nodes_api: Default::default(),
                 mixer_api: Default::default(),
                 application: Default::default(),
+                plugin_count: Default::default(),
             }
         }
     }
@@ -99,20 +106,13 @@ mod imp {
         fn setup_wp_connection(&self) {
             wp::core::Core::init_with_flags(wp::InitFlags::ALL);
 
-            if !wp::Log::level_is_enabled(glib::LogLevelFlags::LEVEL_WARNING) {
-                wp::Log::set_default_level("1");
-            }
-
             let props = wp::pw::Properties::new_string("media.category=Manager");
 
-            let wp_core = wp::core::Core::new(Some(&glib::MainContext::default()), Some(props));
+            let wp_core = wp::core::Core::new(Some(&glib::MainContext::default()), None, Some(props));
             let wp_om = ObjectManager::new();
 
             wp_core.connect();
 
-            wp_core.load_component("libwireplumber-module-mixer-api", "module", None).expect("loadig mixer-api plugin");
-            wp_core.load_component("libwireplumber-module-default-nodes-api", "module", None).expect("loadig mixer-api plugin");
-
             wp_om.add_interest({
                 let interest: Interest<wp::pw::Node> = wp::registry::Interest::new();
                 let variant = glib::Variant::tuple_from_iter(
@@ -122,7 +122,7 @@ mod imp {
                 interest.add_constraint(
                     wp::registry::ConstraintType::PwGlobalProperty,
                     "media.class",
-                    wp::registry::ConstraintVerb::InList,
+                    wp::registry::ConstraintVerb::InList,   
                     Some(&variant),
                 );
 
@@ -197,11 +197,20 @@ mod imp {
             }));
 
             glib::MainContext::default().spawn_local(clone!(@weak self as manager, @weak wp_core as core, @weak wp_om as om => async move {
-                let plugin_names = vec![("mixer-api", &manager.mixer_api), ("default-nodes-api", &manager.default_nodes_api)];
+                let plugins = [
+                    ("libwireplumber-module-mixer-api", "mixer-api", &manager.mixer_api),
+                    ("libwireplumber-module-default-nodes-api", "default-nodes-api", &manager.default_nodes_api)
+                ];
 
                 let mut count = 0;
-                for (plugin_name, plugin_cell) in plugin_names.iter() {
+                for (component_name, plugin_name, plugin_cell) in plugins.iter() {
+                    if core.load_component_future(Some(std::borrow::Cow::Borrowed(component_name)), ComponentLoader::TYPE_WIREPLUMBER_MODULE, None, None).await.is_err() {
+                        pwvucontrol_critical!("Cannot load component {component_name}");
+                        PwvucontrolApplication::default().quit();
+                        return;
+                    }
                     if let Some(plugin) = Plugin::find(&core, plugin_name) {
+                        
                         let result = plugin.activate_future(PluginFeatures::ENABLED).await;
                         if result.is_err() {
                             pwvucontrol_critical!("Cannot activate plugin {plugin_name}");
@@ -209,7 +218,7 @@ mod imp {
                             plugin_cell.set(plugin).expect("Plugin not set");
                             pwvucontrol_info!("Activated plugin {plugin_name}");
                             count += 1;
-                            if count == plugin_names.len() {
+                            if count == plugins.len() {
                                 core.install_object_manager(&om);
                             }
                         }
@@ -265,10 +274,10 @@ mod imp {
             if let Some(metadataobj) = object.dynamic_cast_ref::<wp::pw::Metadata>() {
                 self.metadata.replace(Some(metadataobj.clone()));
 
-                for a in metadataobj.new_iterator(u32::MAX).expect("iterator") {
-                    let (s, k, t, v) = wp::pw::Metadata::iterator_item_extract(&a);
-                    self.metadata_changed(s, Some(&k), Some(&t), Some(&v));
-                }
+                // TODO: Fix when bindings for WpMetadataitem are available.
+                // for a in metadataobj.new_iterator(u32::MAX).expect("iterator") {
+                //     pwvucontrol_info!("Metadata item: {:?}", a);
+                // }
 
                 metadataobj.connect_changed(clone!(@weak self as manager => move |_,s,k,t,v| manager.metadata_changed(s, k, t, v)));
             } else {
diff --git a/src/backend/pwdeviceobject.rs b/src/backend/pwdeviceobject.rs
index 1b5ef11..fdf7b48 100644
--- a/src/backend/pwdeviceobject.rs
+++ b/src/backend/pwdeviceobject.rs
@@ -116,9 +116,6 @@ pub mod imp {
             obj.update_icon_name();
             obj.update_profiles();
 
-            // Don't run this here as we need all the profiles to be loaded first:
-            // obj.update_current_profile_index();
-
             obj.update_routes();
 
             obj.wpdevice().connect_properties_notify(clone!(@weak obj => move |device| {
@@ -241,8 +238,6 @@ impl PwDeviceObject {
 
         podbuilder.add_property("index");
         podbuilder.add_int(index);
-        podbuilder.add_property("save");
-        podbuilder.add_boolean(true);
 
         if let Some(pod) = podbuilder.end() {
             device.set_param("Profile", 0, pod);
diff --git a/src/macros.rs b/src/macros.rs
index d491332..590d2ae 100644
--- a/src/macros.rs
+++ b/src/macros.rs
@@ -1,7 +1,7 @@
 #[macro_export]
 macro_rules! pwvucontrol_info {
     ($format:literal $($args:tt)*) => {
-        wireplumber::log::info! { domain: "pwvucontrol", $format $($args)* }
+        wireplumber::log::info! { domain: crate::TOPIC, $format $($args)* }
     };
 }
 pub use pwvucontrol_info;
@@ -9,7 +9,7 @@ pub use pwvucontrol_info;
 #[macro_export]
 macro_rules! pwvucontrol_debug {
     ($format:literal $($args:tt)*) => {
-        wireplumber::log::debug! { domain: "pwvucontrol", $format $($args)* }
+        wireplumber::log::debug! { domain: crate::TOPIC, $format $($args)* }
     };
 }
 pub use pwvucontrol_debug;
@@ -17,7 +17,7 @@ pub use pwvucontrol_debug;
 #[macro_export]
 macro_rules! pwvucontrol_warning {
     ($format:literal $($args:tt)*) => {
-        wireplumber::log::warning! { domain: "pwvucontrol", $format $($args)* }
+        wireplumber::log::warning! { domain: crate::TOPIC, $format $($args)* }
     };
 }
 pub use pwvucontrol_warning;
@@ -25,7 +25,7 @@ pub use pwvucontrol_warning;
 #[macro_export]
 macro_rules! pwvucontrol_critical {
     ($format:literal $($args:tt)*) => {
-        wireplumber::log::critical! { domain: "pwvucontrol", $format $($args)* }
+        wireplumber::log::critical! { domain: crate::TOPIC, $format $($args)* }
     };
 }
 pub use pwvucontrol_critical;
diff --git a/src/main.rs b/src/main.rs
index 32d3247..64c4c01 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -25,6 +25,10 @@ mod config {
 }
 mod macros;
 
+log_topic! {
+   static TOPIC = "pwvucontrol";
+}
+
 mod application;
 mod backend;
 mod ui;
@@ -39,6 +43,7 @@ use self::application::PwvucontrolApplication;
 use self::config::{GETTEXT_PACKAGE, LOCALEDIR, RESOURCES_FILE};
 use gettextrs::{bind_textdomain_codeset, bindtextdomain, gettext, textdomain};
 use gtk::gio;
+use wireplumber::log_topic;
 
 fn path_override_from_env<K>(var: K, default: K, append: Option<K>) -> OsString
 where
diff --git a/src/ui/peakmeter.rs b/src/ui/peakmeter.rs
index ec1d95c..a750612 100644
--- a/src/ui/peakmeter.rs
+++ b/src/ui/peakmeter.rs
@@ -42,9 +42,9 @@ mod imp {
 
     impl WidgetImpl for PwPeakMeter {
         fn snapshot(&self, snapshot: &gtk::Snapshot) {
-            let num_blocks: u32 = (self.obj().width() / 20) as u32;
-            let green_limit: u32 = (0.6 * num_blocks as f32) as u32;
-            let yellow_limit: u32 = (0.9 * num_blocks as f32) as u32;
+            const NUM_BLOCKS: u32 = 20;
+            const GREEN_LIMIT: u32 = (0.6 * NUM_BLOCKS as f32) as u32;
+            const YELLOW_LIMIT: u32 = (0.9 * NUM_BLOCKS as f32) as u32;
 
             let color_green = hex_to_rgb(0x33d17a);
             let color_yellow = hex_to_rgb(0xf6d32d);
@@ -64,9 +64,9 @@ mod imp {
             if !self.use_led.get() {
                 snapshot.append_color(&color_green, &graphene::Rect::new(0.0, 0.0, level * w, h));
             } else {
-                let discrete_level = (level * num_blocks as f32).floor() as u32;
-                let mut block_width = width / num_blocks;
-                let extra_space = width - block_width * num_blocks;
+                let discrete_level = (level * NUM_BLOCKS as f32).floor() as u32;
+                let mut block_width = width / NUM_BLOCKS;
+                let extra_space = width - block_width * NUM_BLOCKS;
                 if extra_space > 0 {
                     block_width += 1;
                 }
@@ -78,12 +78,10 @@ mod imp {
                         block_area_width -= 1;
                     }
 
-                    let color = if i < green_limit {
-                        color_green
-                    } else if i < yellow_limit {
-                        color_yellow
-                    } else {
-                        color_red
+                    let color = match i {
+                        0..GREEN_LIMIT => color_green,
+                        GREEN_LIMIT..YELLOW_LIMIT => color_yellow,
+                        _ => color_red,
                     };
                     snapshot.append_color(&color, &graphene::Rect::new(block_area_x as f32, 0.0, block_area_width as f32 - 1.0, h));
                     block_area_x += block_area_width;
diff --git a/src/ui/streambox.rs b/src/ui/streambox.rs
index dc729b8..810cf89 100644
--- a/src/ui/streambox.rs
+++ b/src/ui/streambox.rs
@@ -78,8 +78,8 @@ mod imp {
             // Create our custom output dropdown widget and add it to the layout
             self.output_dropdown.set_nodeobj(Some(&item));
 
-            glib::idle_add_local_once(clone!(@weak widget => move || {
-                widget.update_output_device_dropdown();
+            glib::idle_add_local_once(clone!(@weak self as widget => move || {
+                widget.obj().update_output_device_dropdown();
             }));
         }
     }
