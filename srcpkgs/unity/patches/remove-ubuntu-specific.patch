diff -p1ru a/lockscreen/LockScreenController.cpp b/lockscreen/LockScreenController.cpp
--- a/lockscreen/LockScreenController.cpp	2023-02-23 02:37:44.000000000 +0800
+++ b/lockscreen/LockScreenController.cpp	2024-07-27 08:43:21.362157940 +0800
@@ -96,7 +96,2 @@ Controller::Controller(DBusManager::Ptr
   suspend_inhibitor_manager_->about_to_suspend.connect([this] () {
-    if (Settings::Instance().lock_on_suspend())
-    {
-      InhibitPaint();
-      session_manager_->PromptLockScreen();
-    }
   });
@@ -106,3 +101,2 @@ Controller::Controller(DBusManager::Ptr
 
-  Settings::Instance().lock_on_suspend.changed.connect(sigc::hide(sigc::mem_fun(this, &Controller::SyncInhibitor)));
   Settings::Instance().use_legacy.changed.connect(sigc::hide(sigc::mem_fun(this, &Controller::SyncInhibitor)));
@@ -603,3 +597,2 @@ void Controller::SyncInhibitor()
                  !locked &&
-                 Settings::Instance().lock_on_suspend() &&
                  !Settings::Instance().use_legacy();
diff -p1ru a/lockscreen/LockScreenSettings.cpp b/lockscreen/LockScreenSettings.cpp
--- a/lockscreen/LockScreenSettings.cpp	2023-02-23 02:37:44.000000000 +0800
+++ b/lockscreen/LockScreenSettings.cpp	2024-07-27 08:40:45.324177884 +0800
@@ -50,3 +50,2 @@ const std::string LOCK_DELAY = "lock-del
 const std::string LOCK_ENABLED = "lock-enabled";
-const std::string LOCK_ON_SUSPEND = "ubuntu-lock-on-suspend";
 
@@ -90,3 +89,2 @@ struct Settings::Impl
     s->lock_on_blank = g_settings_get_boolean(gs_settings_, LOCK_ENABLED.c_str()) != FALSE;
-    s->lock_on_suspend = g_settings_get_boolean(gs_settings_, LOCK_ON_SUSPEND.c_str()) != FALSE;
     s->lock_delay = g_settings_get_uint(gs_settings_, LOCK_DELAY.c_str());
diff -p1ru a/lockscreen/LockScreenSettings.h b/lockscreen/LockScreenSettings.h
--- a/lockscreen/LockScreenSettings.h	2023-02-23 02:37:44.000000000 +0800
+++ b/lockscreen/LockScreenSettings.h	2024-07-27 08:43:35.025986444 +0800
@@ -48,3 +48,2 @@ public:
   nux::Property<bool> lock_on_blank;
-  nux::Property<bool> lock_on_suspend;
   nux::Property<bool> use_legacy;
