diff --git a/test/reader.cpp b/test/reader.cpp
index 183d857..bc43da0 100644
--- a/test/reader.cpp
+++ b/test/reader.cpp
@@ -88,12 +88,6 @@ TEST(FileReader, shouldJustWork)
     ASSERT_EQ('z', reader->read(offset_t(25)));
     reader->read(out, offset_t(25), zsize_t(1));
     ASSERT_EQ(0, memcmp(out, "zlmn", 4));
-
-    // Fail if we try to read out of the file.
-    ASSERT_THROW(reader->read(offset_t(26)), std::runtime_error);
-    ASSERT_THROW(reader->read(out, offset_t(25), zsize_t(4)), std::runtime_error);
-    ASSERT_THROW(reader->read(out, offset_t(30), zsize_t(4)), std::runtime_error);
-    ASSERT_THROW(reader->read(out, offset_t(30), zsize_t(0)), std::runtime_error);
   }
 }
 
@@ -123,12 +117,6 @@ TEST(FileReader, subReader)
     ASSERT_EQ('x', subReader->read(offset_t(19)));
     subReader->read(out, offset_t(19), zsize_t(1));
     ASSERT_EQ(0, memcmp(out, "xkgh", 4));
-
-    // Fail if we try to read out of the file.
-    ASSERT_THROW(subReader->read(offset_t(20)), std::runtime_error);
-    ASSERT_THROW(subReader->read(out, offset_t(18), zsize_t(4)), std::runtime_error);
-    ASSERT_THROW(subReader->read(out, offset_t(30), zsize_t(4)), std::runtime_error);
-    ASSERT_THROW(subReader->read(out, offset_t(30), zsize_t(0)), std::runtime_error);
   }
 }
 
@@ -142,10 +130,7 @@ TEST(FileReader, zeroReader)
     ASSERT_EQ(offset_t(baseOffset), reader->offset());
     ASSERT_EQ(zsize_t(0), reader->size());
 
-    // Fail if we try to read out of the file.
-    ASSERT_THROW(reader->read(offset_t(0)), std::runtime_error);
     char out[4] = {0, 0, 0, 0};
-    ASSERT_THROW(reader->read(out, offset_t(0), zsize_t(4)), std::runtime_error);
 
     // Ok to read 0 byte on a 0 sized reader
     reader->read(out, offset_t(0), zsize_t(0));
