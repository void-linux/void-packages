--- a/examples/findeng.cpp
+++ b/examples/findeng.cpp
@@ -9,7 +9,7 @@
 using std::cout;
 using std::endl;
 
-int main(unsigned argc, char* argv[])
+int main(int argc, char* argv[])
 {
   ID3D_INIT_DOUT();
   ID3D_INIT_WARNING();
--- a/examples/findstr.cpp
+++ b/examples/findstr.cpp
@@ -9,7 +9,7 @@
 using std::cout;
 using std::endl;
 
-int main(unsigned argc, char* argv[])
+int main(int argc, char* argv[])
 {
   ID3D_INIT_DOUT();
   ID3D_INIT_WARNING();
--- a/examples/test_io.cpp
+++ b/examples/test_io.cpp
@@ -18,13 +18,13 @@ using std::cerr;
 using namespace dami;
 
 int
-main(size_t argc, const char** argv)
+main(int argc, const char** argv)
 {
   ID3D_INIT_DOUT();
   ID3D_INIT_WARNING();
   ID3D_INIT_NOTICE();
 
-  ID3_IStreamReader isr(cin);
+  ID3_IStreamReader isr(std::cin);
   BString orig = io::readAllBinary(isr);
     
   cout << "input size:    " << orig.size() << endl;
@@ -116,7 +116,7 @@ main(size_t argc, const char** argv)
   cout << "binary number:";
   for (size_t i = 0; i < number.size(); ++i)
   {
-    cout << " 0x" << hex << (size_t) (0xFF & number[i]) << dec;
+    cout << " 0x" << std::hex << (size_t) (0xFF & number[i]) << std::dec;
   }
   cout << endl;
 
