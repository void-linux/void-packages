# Template file for 'apr-util'
pkgname=apr-util
version=1.6.3
revision=3
build_style=gnu-configure
configure_args="
 --with-pgsql --with-ldap --with-apr=${XBPS_CROSS_BASE}/usr
 --with-expat=${XBPS_CROSS_BASE}/usr --with-gdbm=${XBPS_CROSS_BASE}/usr
 --with-sqlite3=${XBPS_CROSS_BASE}/usr --with-mysql=${XBPS_CROSS_BASE}/usr
 --with-berkeley-db=${XBPS_CROSS_BASE}/usr --with-odbc=${XBPS_CROSS_BASE}/usr
 --with-dbm=db53 --with-crypto --with-openssl --without-oracle --enable-util-dso"
hostmakedepends="libtool apr-devel automake"
makedepends="zlib-devel openssl-devel apr-devel db-devel expat-devel
 gdbm-devel libldap-devel libmariadbclient-devel unixodbc-devel
 postgresql-libs-devel sqlite-devel"
short_desc="Apache Portable Runtime Utility Library"
maintainer="Orphaned <orphan@voidlinux.org>"
license="Apache-2.0"
homepage="https://apr.apache.org/"
distfiles="https://archive.apache.org/dist/apr/${pkgname}-${version}.tar.bz2"
checksum=a41076e3710746326c3945042994ad9a4fcac0ce0277dd8fea076fec3c9772b5
# fails to build tests
make_check=no

pre_configure() {
	autoreconf -fi
}

post_configure() {
	# Hacks to make cross compiling work
	if [ "$CROSS_BUILD" ]; then
		vsed -i build/rules.mk \
			-e "s;\(apr_builddir=\)\(/usr/share/apr-1\);\1${XBPS_CROSS_BASE}\2;" \
			-e "s;\(apr_builders=\)\(/usr/share/apr-1\);\1${XBPS_CROSS_BASE}\2;" \
			-e "s;--mode=link;& --tag=CC;g" \
			-e "s;--mode=compile;& --tag=CC;g" \
			-e "/^CC=/s:=.*:=${CC}:"
	fi
	vsed -i build/rules.mk \
		-e "/^LIBTOOL=/s;(apr_builddir);(top_builddir);" \
		-e "s;\(top_builddir=\)\(.*\);\1${wrksrc};" \
		-e "/^CFLAGS=/s:=.*:=${CFLAGS}:" \
		-e '/^LTFLAGS/s:--silent::'
}

post_install() {
	# remove static libs
	find ${DESTDIR} -type f -name \*.a -delete
	if [ "$CROSS_BUILD" ]; then
		vsed -i -e "s,$XBPS_CROSS_BASE,,g" "$DESTDIR/usr/bin/apu-1-config"
	fi
}

apr-util-devel_package() {
	depends="apr-devel expat-devel libldap-devel db-devel ${sourcepkg}>=${version}"
	short_desc+=" - development files"
	pkg_install() {
		vmove usr/bin
		vmove usr/include
		vmove "usr/lib/*.exp"
		vmove usr/lib/pkgconfig
	}
}
apr-util-db_package() {
	lib32disabled=yes
	depends="apr-util-${version}_${revision}"
	short_desc+=" - Berkeley DB module"
	pkg_install() {
		vmove "usr/lib/apr-util-1/apr_dbm_db*"
	}
}
apr-util-gdbm_package() {
	lib32disabled=yes
	depends="apr-util-${version}_${revision}"
	short_desc+=" - GDBM module"
	pkg_install() {
		vmove "usr/lib/apr-util-1/apr_dbm_gdbm*"
	}
}
apr-util-ldap_package() {
	lib32disabled=yes
	depends="apr-util-${version}_${revision}"
	short_desc+=" - LDAP support"
	pkg_install() {
		vmove "usr/lib/apr-util-1/apr_ldap*"
	}
}
apr-util-odbc_package() {
	lib32disabled=yes
	depends="apr-util-${version}_${revision}"
	short_desc+=" - ODBC module"
	pkg_install() {
		vmove "usr/lib/apr-util-1/apr_dbd_odbc*"
	}
}
apr-util-mysql_package() {
	lib32disabled=yes
	depends="apr-util-${version}_${revision}"
	short_desc+=" - MySQL module"
	pkg_install() {
		vmove "usr/lib/apr-util-1/apr_dbd_mysql*"
	}
}
apr-util-pgsql_package() {
	lib32disabled=yes
	depends="apr-util-${version}_${revision}"
	short_desc+=" - PostgreSQL module"
	pkg_install() {
		vmove "usr/lib/apr-util-1/apr_dbd_pgsql*"
	}
}
apr-util-sqlite_package() {
	lib32disabled=yes
	depends="apr-util-${version}_${revision}"
	short_desc+=" - SQLite module"
	pkg_install() {
		vmove "usr/lib/apr-util-1/apr_dbd_sqlite*"
	}
}
